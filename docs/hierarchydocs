<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="ja">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.8"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>GaitGeneration by Graph Search: クラス階層</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">GaitGeneration by Graph Search
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- 構築: Doxygen 1.9.8 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search/",'docs');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','検索');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('hierarchydocs',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">読み取り中…</div>
<div class="SRStatus" id="Searching">検索中…</div>
<div class="SRStatus" id="NoMatches">一致する文字列を見つけられません</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="headertitle"><div class="title">クラス階層</div></div>
</div><!--header-->
<div class="contents">
<div class="textblock">
<p><a href="inheritsdocs">[クラス階層図]</a></p>
クラス階層一覧です。大雑把に文字符号順で並べられています。</div><div class="directory">
<div class="levels">[表示階層 <span onclick="javascript:toggleLevel(1);">1</span><span onclick="javascript:toggleLevel(2);">2</span><span onclick="javascript:toggleLevel(3);">3</span>]</div><table class="directory">
<tr id="row_0_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structdesignlab_1_1_application_setting_recorddocs" target="_self">designlab::ApplicationSettingRecord</a></td><td class="desc">アプリの設定を記録する構造体． </td></tr>
<tr id="row_1_" class="odd"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_asyncable_datadocs" target="_self">designlab::AsyncableData&lt; T &gt;</a></td><td class="desc">非同期処理を行う際に，データの更新回数とデータをまとめて扱うためのクラス． </td></tr>
<tr id="row_2_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_asyncable_datadocs" target="_self">designlab::AsyncableData&lt; designlab::MapState &gt;</a></td><td class="desc"></td></tr>
<tr id="row_3_" class="odd"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_asyncable_datadocs" target="_self">designlab::AsyncableData&lt; std::vector&lt; designlab::RobotStateNode &gt; &gt;</a></td><td class="desc"></td></tr>
<tr id="row_4_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_asyncable_datadocs" target="_self">designlab::AsyncableData&lt; std::vector&lt; size_t &gt; &gt;</a></td><td class="desc"></td></tr>
<tr id="row_5_" class="odd"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_asyncable_data_3_01std_1_1vector_3_01_t_01_4_01_4docs" target="_self">designlab::AsyncableData&lt; std::vector&lt; T &gt; &gt;</a></td><td class="desc">非同期処理を行う際に， データの更新回数とデータをまとめて扱うための構造体．( vector 版) </td></tr>
<tr id="row_6_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_average_calculatordocs" target="_self">designlab::AverageCalculator&lt; T, typename &gt;</a></td><td class="desc">平均値，分散，標準偏差を求めるテンプレートクラス． </td></tr>
<tr id="row_7_" class="odd"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_boot_mode_selectordocs" target="_self">designlab::BootModeSelector</a></td><td class="desc">起動モードを選択するクラス． </td></tr>
<tr id="row_8_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_cmd_i_o_utildocs" target="_self">designlab::CmdIOUtil</a></td><td class="desc">標準入出力の std::cout，std::cinを使った コマンドライン入出力を行うシングルトンクラス． </td></tr>
<tr id="row_9_" class="odd"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_com_candidate_polygon_makerdocs" target="_self">designlab::ComCandidatePolygonMaker</a></td><td class="desc">重心位置の候補地点を示す多角形を作成するクラス． </td></tr>
<tr id="row_10_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structdesignlab_1_1_com_pos_and_polygondocs" target="_self">designlab::ComPosAndPolygon</a></td><td class="desc">離散化された重心位置とその重心位置を含む多角形の組み合わせを表す構造体． </td></tr>
<tr id="row_11_" class="odd"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_com_selectordocs" target="_self">designlab::ComSelector</a></td><td class="desc">重心の候補領域から重心位置を選択するクラス． </td></tr>
<tr id="row_12_" class="even"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_12_" class="arrow" onclick="toggleFolder('12_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><b>std::conditional_t</b></td><td class="desc"></td></tr>
<tr id="row_12_0_" class="odd" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structdesignlab_1_1impl_1_1is__toml11__available__typedocs" target="_self">designlab::impl::is_toml11_available_type&lt; T &gt;</a></td><td class="desc">Toml11で使用可能な型かどうかを判定するメタ関数． </td></tr>
<tr id="row_13_" class="odd"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_dead_lock_checkerdocs" target="_self">designlab::DeadLockChecker</a></td><td class="desc">動作のループを感知するクラス． </td></tr>
<tr id="row_14_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_divided_map_statedocs" target="_self">designlab::DividedMapState</a></td><td class="desc">マップを格子状に分割して管理するクラス． </td></tr>
<tr id="row_15_" class="odd"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_double_int_rangedocs" target="_self">designlab::DoubleIntRange</a></td><td class="desc"></td></tr>
<tr id="row_16_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_dxlib3d_renderer_groupdocs" target="_self">designlab::Dxlib3dRendererGroup</a></td><td class="desc">Dxlib_renderer の draw 関数を呼ぶためのクラス． </td></tr>
<tr id="row_17_" class="odd"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_dxlib_cameradocs" target="_self">designlab::DxlibCamera</a></td><td class="desc">Dxlib の3Dのカメラの状態を管理するクラス． </td></tr>
<tr id="row_18_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_dxlib_gui_updaterdocs" target="_self">designlab::DxlibGuiUpdater</a></td><td class="desc">クリック判定を行うクラス． </td></tr>
<tr id="row_19_" class="odd"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structdesignlab_1_1_dxlib_mouse_statedocs" target="_self">designlab::DxlibMouseState</a></td><td class="desc">マウスの状態を表す構造体． </td></tr>
<tr id="row_20_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_dxlib_node_setter_groupdocs" target="_self">designlab::DxlibNodeSetterGroup</a></td><td class="desc">DxLibでノードの設定を行うクラスをまとめるクラス． </td></tr>
<tr id="row_21_" class="odd"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structdesignlab_1_1_euler_x_y_zdocs" target="_self">designlab::EulerXYZ</a></td><td class="desc">XYZオイラー角を用いた回転を表す構造体． </td></tr>
<tr id="row_22_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structdesignlab_1_1_graph_search_evaluator_1_1_evaluation_methoddocs" target="_self">designlab::GraphSearchEvaluator::EvaluationMethod</a></td><td class="desc">評価方法を格納する構造体． </td></tr>
<tr id="row_23_" class="odd"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_23_" class="arrow" onclick="toggleFolder('23_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><b>Exception</b></td><td class="desc"></td></tr>
<tr id="row_23_0_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classcpplint_1_1___include_errordocs" target="_self">cpplint._IncludeError</a></td><td class="desc"></td></tr>
<tr id="row_24_" class="even"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_24_" class="arrow" onclick="toggleFolder('24_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><b>std::false_type</b></td><td class="desc"></td></tr>
<tr id="row_24_0_" class="odd" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structdesignlab_1_1impl_1_1has__from__tomldocs" target="_self">designlab::impl::has_from_toml&lt; T, typename &gt;</a></td><td class="desc">Toml::from&lt;T&gt;()が存在するかどうかを判定するメタ関数． </td></tr>
<tr id="row_24_1_" class="odd" style="display:none;"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span id="arr_24_1_" class="arrow" onclick="toggleFolder('24_1_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structdesignlab_1_1impl_1_1has__input__operatordocs" target="_self">designlab::impl::has_input_operator&lt; T, U &gt;</a></td><td class="desc">入力ストリームが実装されているか判断するメタ関数． </td></tr>
<tr id="row_24_1_0_" class="odd" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structdesignlab_1_1impl_1_1is__vector__of__has__input__operator_3_01std_1_1vector_3_01_t_01_4_01_4docs" target="_self">designlab::impl::is_vector_of_has_input_operator&lt; std::vector&lt; T &gt; &gt;</a></td><td class="desc">入力ストリームが実装されている vector 型かどうかを判定するメタ関数． </td></tr>
<tr id="row_24_2_" class="odd" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structdesignlab_1_1impl_1_1has__into__tomldocs" target="_self">designlab::impl::has_into_toml&lt; T, typename &gt;</a></td><td class="desc">Toml::into&lt;T&gt;()が存在するかどうかを判定するメタ関数． </td></tr>
<tr id="row_24_3_" class="odd" style="display:none;"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span id="arr_24_3_" class="arrow" onclick="toggleFolder('24_3_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structdesignlab_1_1impl_1_1has__output__operatordocs" target="_self">designlab::impl::has_output_operator&lt; T, U &gt;</a></td><td class="desc">出力ストリームが実装されているか判断するメタ関数． </td></tr>
<tr id="row_24_3_0_" class="odd" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structdesignlab_1_1impl_1_1is__vector__of__has__output__operator_3_01std_1_1vector_3_01_t_01_4_01_4docs" target="_self">designlab::impl::is_vector_of_has_output_operator&lt; std::vector&lt; T &gt; &gt;</a></td><td class="desc">出力ストリームが実装されている vector 型かどうかを判定するメタ関数． </td></tr>
<tr id="row_24_4_" class="odd" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structdesignlab_1_1impl_1_1is__toml11__available__type__vector__typedocs" target="_self">designlab::impl::is_toml11_available_type_vector_type&lt; T &gt;</a></td><td class="desc">Toml11で使用可能な型かどうかを判定するメタ関数． vector型の場合はこちらを使用して判定する． </td></tr>
<tr id="row_24_5_" class="odd" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structdesignlab_1_1impl_1_1is__vectordocs" target="_self">designlab::impl::is_vector&lt; T &gt;</a></td><td class="desc">Vector型かどうかを判定するメタ関数． </td></tr>
<tr id="row_24_6_" class="odd" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structdesignlab_1_1impl_1_1is__vector__of__enumdocs" target="_self">designlab::impl::is_vector_of_enum&lt; T &gt;</a></td><td class="desc">Vector&lt;enum&gt; 型かどうかを判定するメタ関数． </td></tr>
<tr id="row_24_7_" class="odd" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structdesignlab_1_1impl_1_1is__vector__of__has__input__operatordocs" target="_self">designlab::impl::is_vector_of_has_input_operator&lt; T &gt;</a></td><td class="desc">入力ストリームが実装されている vector 型かどうかを判定するメタ関数． </td></tr>
<tr id="row_24_8_" class="odd" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structdesignlab_1_1impl_1_1is__vector__of__has__output__operatordocs" target="_self">designlab::impl::is_vector_of_has_output_operator&lt; T &gt;</a></td><td class="desc">出力ストリームが実装されている vector 型かどうかを判定するメタ関数． </td></tr>
<tr id="row_25_" class="odd"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_file_treedocs" target="_self">designlab::FileTree</a></td><td class="desc">ファイルツリーを作成するクラス． </td></tr>
<tr id="row_26_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_fps_controllerdocs" target="_self">designlab::FpsController</a></td><td class="desc">FPSを一定にキープするためのクラス． </td></tr>
<tr id="row_27_" class="odd"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_gait_pattern_graph_treedocs" target="_self">designlab::GaitPatternGraphTree</a></td><td class="desc"><a class="el" href="structdesignlab_1_1_robot_state_nodedocs" title="グラフ構造のためのノード(頂点)．旧名 LNODE">RobotStateNode</a> 構造体をノードとする木構造のグラフのクラス． </td></tr>
<tr id="row_28_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structdesignlab_1_1toml__func_1_1_get_toml_value_impldocs" target="_self">designlab::toml_func::GetTomlValueImpl&lt; T, Enable &gt;</a></td><td class="desc">プライマリ テンプレート．特殊化されない場合はコンパイルエラーになる． </td></tr>
<tr id="row_29_" class="odd"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structdesignlab_1_1toml__func_1_1_get_toml_value_impl_3_01_t_00_01typename_01std_1_1enable__if_3b07bd3c2acf053c0b37464b32d1a9cf3docs" target="_self">designlab::toml_func::GetTomlValueImpl&lt; T, typename std::enable_if&lt; impl::is_toml11_available_type&lt; T &gt;::value &gt; ::type &gt;</a></td><td class="desc">Tomlファイルから値を取得するための関数を 特殊化するために暗黙的に呼ばれる構造体． </td></tr>
<tr id="row_30_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structdesignlab_1_1toml__func_1_1_get_toml_value_impl_3_01_t_00_01typename_01std_1_1enable__if_39d3e7579bcc5575292b80a1ace9292bcdocs" target="_self">designlab::toml_func::GetTomlValueImpl&lt; T, typename std::enable_if&lt;!impl::is_toml11_available_type&lt; T &gt;::value &amp;&amp;impl::has_input_operator&lt; T &gt;::value &gt;::type &gt;</a></td><td class="desc">プライマリ テンプレートの特殊化 : is_vector3 型と is_euler_xyz 型 </td></tr>
<tr id="row_31_" class="odd"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structdesignlab_1_1toml__func_1_1_get_toml_value_impl_3_01_t_00_01typename_01std_1_1enable__if_33fc5982aea123e2d9ca55f2926b667d8docs" target="_self">designlab::toml_func::GetTomlValueImpl&lt; T, typename std::enable_if&lt;!impl::is_toml11_available_type&lt; T &gt;::value &amp;&amp;impl::is_vector_of_has_input_operator&lt; T &gt;::value &gt;::type &gt;</a></td><td class="desc"></td></tr>
<tr id="row_32_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structdesignlab_1_1toml__func_1_1_get_toml_value_impl_3_01_t_00_01typename_01std_1_1enable__if_328529863b9f932a63d4a25913375ada6docs" target="_self">designlab::toml_func::GetTomlValueImpl&lt; T, typename std::enable_if&lt;!impl::is_toml11_available_type&lt; T &gt;::value &amp;&amp;std::is_enum&lt; T &gt;::value &gt;::type &gt;</a></td><td class="desc">プライマリ テンプレートの特殊化 : enum 型 </td></tr>
<tr id="row_33_" class="odd"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_graphic_constdocs" target="_self">designlab::GraphicConst</a></td><td class="desc">画像表示処理用の定数クラス． </td></tr>
<tr id="row_34_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structdesignlab_1_1_graphic_data_brokerdocs" target="_self">designlab::GraphicDataBroker</a></td><td class="desc">グラフ探索の結果を別スレッドのグラフィッククラスに連絡するための構造体． </td></tr>
<tr id="row_35_" class="odd"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_graphic_systemdocs" target="_self">designlab::GraphicSystem</a></td><td class="desc">Dxlibの処理を行うクラス． </td></tr>
<tr id="row_36_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_graph_search_constdocs" target="_self">designlab::GraphSearchConst</a></td><td class="desc">グラフ探索の定数をまとめたクラス． <br  />
 先行研究のマクロをまとめたもの． </td></tr>
<tr id="row_37_" class="odd"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structdesignlab_1_1_graph_search_evaluation_valuedocs" target="_self">designlab::GraphSearchEvaluationValue</a></td><td class="desc">グラフ探索の評価値を格納する構造体． </td></tr>
<tr id="row_38_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_graph_search_evaluatordocs" target="_self">designlab::GraphSearchEvaluator</a></td><td class="desc"></td></tr>
<tr id="row_39_" class="odd"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structdesignlab_1_1_graph_search_resultdocs" target="_self">designlab::GraphSearchResult</a></td><td class="desc">グラフ探索の評価値を評価するクラス． </td></tr>
<tr id="row_40_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structdesignlab_1_1_graph_search_result_recorddocs" target="_self">designlab::GraphSearchResultRecord</a></td><td class="desc">グラフ探索の結果を格納する構造体． </td></tr>
<tr id="row_41_" class="odd"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_graph_tree_creatordocs" target="_self">designlab::GraphTreeCreator</a></td><td class="desc">歩容パターングラフを作成するクラス． </td></tr>
<tr id="row_42_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_graph_viewer_g_u_i_controllerdocs" target="_self">designlab::GraphViewerGUIController</a></td><td class="desc">グラフのノードのデータを表示するGUIのコントローラークラス． </td></tr>
<tr id="row_43_" class="odd"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_hexapod_constdocs" target="_self">designlab::HexapodConst</a></td><td class="desc">Hexapodの定数をまとめたクラス． </td></tr>
<tr id="row_44_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structdesignlab_1_1_hexapod_joint_statedocs" target="_self">designlab::HexapodJointState</a></td><td class="desc">ロボットの関節の状態を表す構造体． </td></tr>
<tr id="row_45_" class="odd"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_hexapod_renderer_builderdocs" target="_self">designlab::HexapodRendererBuilder</a></td><td class="desc">HexapodRendererクラスのインスタンスを作成するクラス． </td></tr>
<tr id="row_46_" class="even"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_46_" class="arrow" onclick="toggleFolder('46_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_i_dxlib3d_rendererdocs" target="_self">designlab::IDxlib3dRenderer</a></td><td class="desc">DxLibの描画処理を行うクラスのインターフェース． </td></tr>
<tr id="row_46_0_" class="odd" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_approximated_motion_range_renderdocs" target="_self">designlab::ApproximatedMotionRangeRender</a></td><td class="desc">6脚歩行ロボットの近似された脚の動作範囲を描画するクラス． </td></tr>
<tr id="row_46_1_" class="odd" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_graph_com_plotterdocs" target="_self">designlab::GraphComPlotter</a></td><td class="desc"></td></tr>
<tr id="row_46_2_" class="odd" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_map_rendererdocs" target="_self">designlab::MapRenderer</a></td><td class="desc">マップの描画を行うクラス． </td></tr>
<tr id="row_46_3_" class="odd" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_phantom_x_mk_i_i_renderer_modeldocs" target="_self">designlab::PhantomXMkIIRendererModel</a></td><td class="desc">3Dモデルを使用して PhantomX の描画を行うクラス． </td></tr>
<tr id="row_46_4_" class="odd" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_phantom_x_renderer_simpledocs" target="_self">designlab::PhantomXRendererSimple</a></td><td class="desc">3Dモデルを使用せず，多角形を組み合わせてPhantomXの描画を行うクラス． </td></tr>
<tr id="row_46_5_" class="odd" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_stability_margin_rendererdocs" target="_self">designlab::StabilityMarginRenderer</a></td><td class="desc">ロボットの静的安定余裕(支持脚多角形)を描画するクラス． </td></tr>
<tr id="row_46_6_" class="odd" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_world_grid_rendererdocs" target="_self">designlab::WorldGridRenderer</a></td><td class="desc">ワールドの格子線を描画するクラス． </td></tr>
<tr id="row_47_" class="odd"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_47_" class="arrow" onclick="toggleFolder('47_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_i_dxlib_clickabledocs" target="_self">designlab::IDxlibClickable</a></td><td class="desc">クリック可能なGUIのインターフェース． </td></tr>
<tr id="row_47_0_" class="even" style="display:none;"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span id="arr_47_0_" class="arrow" onclick="toggleFolder('47_0_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_abstract_dxlib_guidocs" target="_self">designlab::AbstractDxlibGui</a></td><td class="desc">Dxlibを使ったGUIの抽象クラス． </td></tr>
<tr id="row_47_0_0_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_dxlib_gui_cameradocs" target="_self">designlab::DxlibGuiCamera</a></td><td class="desc">カメラの操作・管理を行うGUIの処理・描画を行うクラス． </td></tr>
<tr id="row_47_0_1_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_dxlib_gui_camera_parameter_displayerdocs" target="_self">designlab::DxlibGuiCameraParameterDisplayer</a></td><td class="desc">カメラの情報を表示するGUIの処理・描画を行うクラス． </td></tr>
<tr id="row_47_0_2_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_dxlib_gui_display_node_switcherdocs" target="_self">designlab::DxlibGuiDisplayNodeSwitcher</a></td><td class="desc">ノードの表示・切り替えを行うGUIのクラス． </td></tr>
<tr id="row_47_0_3_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_dxlib_gui_node_displayerdocs" target="_self">designlab::DxlibGuiNodeDisplayer</a></td><td class="desc">ノードの情報を表示するGUIのクラス． </td></tr>
<tr id="row_47_0_4_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_dxlib_gui_robot_controldocs" target="_self">designlab::DxlibGuiRobotControl</a></td><td class="desc">カメラの操作・管理を行うGUIの処理・描画を行うクラス． </td></tr>
<tr id="row_47_1_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_dxlib_gui_terminaldocs" target="_self">designlab::DxlibGuiTerminal</a></td><td class="desc">×ボタンを押して消えたGUIを復活させるためのクラス． </td></tr>
<tr id="row_47_2_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_simple_buttondocs" target="_self">designlab::SimpleButton</a></td><td class="desc">Dxlibのウィンドウのボタンの処理・描画を管理するクラス． </td></tr>
<tr id="row_48_" class="even"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_48_" class="arrow" onclick="toggleFolder('48_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_i_dxlib_draggabledocs" target="_self">designlab::IDxlibDraggable</a></td><td class="desc">ドラッグ可能なGUIのインターフェース． </td></tr>
<tr id="row_48_0_" class="odd" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_abstract_dxlib_guidocs" target="_self">designlab::AbstractDxlibGui</a></td><td class="desc">Dxlibを使ったGUIの抽象クラス． </td></tr>
<tr id="row_48_1_" class="odd" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_camera_draggerdocs" target="_self">designlab::CameraDragger</a></td><td class="desc">マウスの入力でカメラを動かすクラス． </td></tr>
<tr id="row_49_" class="odd"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_49_" class="arrow" onclick="toggleFolder('49_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_i_dxlib_guidocs" target="_self">designlab::IDxlibGui</a></td><td class="desc">Dxlibの画面に表示するGUIのインターフェース． </td></tr>
<tr id="row_49_0_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_abstract_dxlib_guidocs" target="_self">designlab::AbstractDxlibGui</a></td><td class="desc">Dxlibを使ったGUIの抽象クラス． </td></tr>
<tr id="row_49_1_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_dxlib_gui_terminaldocs" target="_self">designlab::DxlibGuiTerminal</a></td><td class="desc">×ボタンを押して消えたGUIを復活させるためのクラス． </td></tr>
<tr id="row_49_2_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_simple_buttondocs" target="_self">designlab::SimpleButton</a></td><td class="desc">Dxlibのウィンドウのボタンの処理・描画を管理するクラス． </td></tr>
<tr id="row_50_" class="even"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_50_" class="arrow" onclick="toggleFolder('50_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_i_dxlib_node_setterdocs" target="_self">designlab::IDxlibNodeSetter</a></td><td class="desc">DxLibのGuiやRendererでノードのセットを行うためのインターフェース． </td></tr>
<tr id="row_50_0_" class="odd" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_approximated_motion_range_renderdocs" target="_self">designlab::ApproximatedMotionRangeRender</a></td><td class="desc">6脚歩行ロボットの近似された脚の動作範囲を描画するクラス． </td></tr>
<tr id="row_50_1_" class="odd" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_dxlib_gui_cameradocs" target="_self">designlab::DxlibGuiCamera</a></td><td class="desc">カメラの操作・管理を行うGUIの処理・描画を行うクラス． </td></tr>
<tr id="row_50_2_" class="odd" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_dxlib_gui_node_displayerdocs" target="_self">designlab::DxlibGuiNodeDisplayer</a></td><td class="desc">ノードの情報を表示するGUIのクラス． </td></tr>
<tr id="row_50_3_" class="odd" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_dxlib_gui_robot_controldocs" target="_self">designlab::DxlibGuiRobotControl</a></td><td class="desc">カメラの操作・管理を行うGUIの処理・描画を行うクラス． </td></tr>
<tr id="row_50_4_" class="odd" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_map_rendererdocs" target="_self">designlab::MapRenderer</a></td><td class="desc">マップの描画を行うクラス． </td></tr>
<tr id="row_50_5_" class="odd" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_phantom_x_mk_i_i_renderer_modeldocs" target="_self">designlab::PhantomXMkIIRendererModel</a></td><td class="desc">3Dモデルを使用して PhantomX の描画を行うクラス． </td></tr>
<tr id="row_50_6_" class="odd" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_phantom_x_renderer_simpledocs" target="_self">designlab::PhantomXRendererSimple</a></td><td class="desc">3Dモデルを使用せず，多角形を組み合わせてPhantomXの描画を行うクラス． </td></tr>
<tr id="row_50_7_" class="odd" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_stability_margin_rendererdocs" target="_self">designlab::StabilityMarginRenderer</a></td><td class="desc">ロボットの静的安定余裕(支持脚多角形)を描画するクラス． </td></tr>
<tr id="row_51_" class="odd"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_51_" class="arrow" onclick="toggleFolder('51_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_i_dxlib_wheel_handlerdocs" target="_self">designlab::IDxlibWheelHandler</a></td><td class="desc">マウスホイールの入力を受け取るためのインターフェース． </td></tr>
<tr id="row_51_0_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_camera_draggerdocs" target="_self">designlab::CameraDragger</a></td><td class="desc">マウスの入力でカメラを動かすクラス． </td></tr>
<tr id="row_52_" class="even"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_52_" class="arrow" onclick="toggleFolder('52_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_i_gait_pattern_generatordocs" target="_self">designlab::IGaitPatternGenerator</a></td><td class="desc">グラフ探索による歩容パターン生成を行うクラスのインターフェース． </td></tr>
<tr id="row_52_0_" class="odd" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_gait_pattern_generator_basicdocs" target="_self">designlab::GaitPatternGeneratorBasic</a></td><td class="desc">普通にグラフ探索を行い，歩容パターン生成を行うクラス． </td></tr>
<tr id="row_52_1_" class="odd" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_gait_pattern_generator_revaluationdocs" target="_self">designlab::GaitPatternGeneratorRevaluation</a></td><td class="desc">再評価手法を実装したクラス． </td></tr>
<tr id="row_52_2_" class="odd" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_gait_pattern_generator_switch_movedocs" target="_self">designlab::GaitPatternGeneratorSwitchMove</a></td><td class="desc">複数の種類の歩容パターンの生成方法を切り替えるためのクラス． </td></tr>
<tr id="row_52_3_" class="odd" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_gait_pattern_generator_threaddocs" target="_self">designlab::GaitPatternGeneratorThread</a></td><td class="desc">普通にグラフ探索を行い，歩容パターン生成を行うクラス． </td></tr>
<tr id="row_53_" class="odd"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_53_" class="arrow" onclick="toggleFolder('53_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_i_graphic_maindocs" target="_self">designlab::IGraphicMain</a></td><td class="desc">GraphicMainのインターフェース． </td></tr>
<tr id="row_53_0_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_graphic_main_basicdocs" target="_self">designlab::GraphicMainBasic</a></td><td class="desc">シミュレーションの一覧表示，ロボットの動きの軌跡の表示 などベーシックな機能を提供するクラス． </td></tr>
<tr id="row_53_1_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_graphic_main_display_modeldocs" target="_self">designlab::GraphicMainDisplayModel</a></td><td class="desc">ロボットのモデルを表示して，正しく動作しているかを確認するためのクラス． </td></tr>
<tr id="row_53_2_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_graphic_main_graph_viewerdocs" target="_self">designlab::GraphicMainGraphViewer</a></td><td class="desc">GraphViewerの画面を表示するクラス． </td></tr>
<tr id="row_53_3_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_graphic_main_robot_controldocs" target="_self">designlab::GraphicMainRobotControl</a></td><td class="desc">ロボットの制御を行うGUIの処理，描画を行うクラス． </td></tr>
<tr id="row_54_" class="even"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_54_" class="arrow" onclick="toggleFolder('54_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_i_graph_searcherdocs" target="_self">designlab::IGraphSearcher</a></td><td class="desc">グラフ探索の処理のインターフェース． </td></tr>
<tr id="row_54_0_" class="odd" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_graph_searcher_spot_turndocs" target="_self">designlab::GraphSearcherSpotTurn</a></td><td class="desc">グラフ探索を行い，直進する動作を評価するクラス． </td></tr>
<tr id="row_54_1_" class="odd" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_graph_searcher_straight_movedocs" target="_self">designlab::GraphSearcherStraightMove</a></td><td class="desc">グラフ探索を行い，直進する動作を評価するクラス． </td></tr>
<tr id="row_54_2_" class="odd" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_graph_searcher_turndocs" target="_self">designlab::GraphSearcherTurn</a></td><td class="desc">グラフ探索を行い，直進する動作を評価するクラス． </td></tr>
<tr id="row_55_" class="odd"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_55_" class="arrow" onclick="toggleFolder('55_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_i_hexapod_coordinate_converterdocs" target="_self">designlab::IHexapodCoordinateConverter</a></td><td class="desc">ロボットは重心位置・アクチュエータなど様々な点を基準とする座標系を持つ． これらを相互に変換する処理のインターフェース． </td></tr>
<tr id="row_55_0_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_phantom_x_mk_i_idocs" target="_self">designlab::PhantomXMkII</a></td><td class="desc">PhantomX mk-2 の状態を計算するクラス． </td></tr>
<tr id="row_56_" class="even"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_56_" class="arrow" onclick="toggleFolder('56_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_i_hexapod_joint_calculatordocs" target="_self">designlab::IHexapodJointCalculator</a></td><td class="desc">間接角度や角速度を計算する処理のインターフェース． </td></tr>
<tr id="row_56_0_" class="odd" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_phantom_x_mk_i_idocs" target="_self">designlab::PhantomXMkII</a></td><td class="desc">PhantomX mk-2 の状態を計算するクラス． </td></tr>
<tr id="row_57_" class="odd"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_57_" class="arrow" onclick="toggleFolder('57_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_i_hexapod_posture_validatordocs" target="_self">designlab::IHexapodPostureValidator</a></td><td class="desc">6脚ロボットが有効な姿勢をとっているかを チェックする処理のインターフェース． </td></tr>
<tr id="row_57_0_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_phantom_x_mk_i_idocs" target="_self">designlab::PhantomXMkII</a></td><td class="desc">PhantomX mk-2 の状態を計算するクラス． </td></tr>
<tr id="row_58_" class="even"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_58_" class="arrow" onclick="toggleFolder('58_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_i_hexapod_state_presenterdocs" target="_self">designlab::IHexapodStatePresenter</a></td><td class="desc">6脚ロボットの状態を表示するクラス． </td></tr>
<tr id="row_58_0_" class="odd" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_phantom_x_mk_i_idocs" target="_self">designlab::PhantomXMkII</a></td><td class="desc">PhantomX mk-2 の状態を計算するクラス． </td></tr>
<tr id="row_59_" class="odd"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_59_" class="arrow" onclick="toggleFolder('59_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_i_map_creatordocs" target="_self">designlab::IMapCreator</a></td><td class="desc">マップ生成クラスのインターフェース． </td></tr>
<tr id="row_59_0_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_map_creator_by_csvdocs" target="_self">designlab::MapCreatorByCsv</a></td><td class="desc">CSV ファイルからマップを生成するクラス． </td></tr>
<tr id="row_59_1_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_map_creator_for_simulationdocs" target="_self">designlab::MapCreatorForSimulation</a></td><td class="desc">シミュレーション用のマップを生成するクラス． </td></tr>
<tr id="row_59_2_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdivided__map__state__test__internal_1_1_test_map_creatordocs" target="_self">divided_map_state_test_internal::TestMapCreator</a></td><td class="desc"></td></tr>
<tr id="row_60_" class="even"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_60_" class="arrow" onclick="toggleFolder('60_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_i_node_creatordocs" target="_self">designlab::INodeCreator</a></td><td class="desc">ノード生成処理のインターフェース． </td></tr>
<tr id="row_60_0_" class="odd" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_node_creator_body_rotdocs" target="_self">designlab::NodeCreatorBodyRot</a></td><td class="desc">ロボットの回転を表すノードを生成するクラス． </td></tr>
<tr id="row_60_1_" class="odd" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_node_creator_com_movedocs" target="_self">designlab::NodeCreatorComMove</a></td><td class="desc">波東さんの手法で重心の平行移動を行うクラス． </td></tr>
<tr id="row_60_2_" class="odd" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_node_creator_com_move_straightdocs" target="_self">designlab::NodeCreatorComMoveStraight</a></td><td class="desc">直線方向に重心の平行移動を行うクラス． </td></tr>
<tr id="row_60_3_" class="odd" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_node_creator_com_up_downdocs" target="_self">designlab::NodeCreatorComUpDown</a></td><td class="desc">重心の上げ下げをするエッジ(辺，ノードとノードを繋ぐ物)の処理をするクラス． </td></tr>
<tr id="row_60_4_" class="odd" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_node_creator_leg_hierarchydocs" target="_self">designlab::NodeCreatorLegHierarchy</a></td><td class="desc">脚の階層構造を作るためのクラス． </td></tr>
<tr id="row_60_5_" class="odd" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_node_creator_leg_up_downdocs" target="_self">designlab::NodeCreatorLegUpDown</a></td><td class="desc">脚の上げ下げをするエッジ(辺，ノードとノードを繋ぐ物)の処理をするクラス． </td></tr>
<tr id="row_60_6_" class="odd" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_node_creator_leg_up_down2ddocs" target="_self">designlab::NodeCreatorLegUpDown2d</a></td><td class="desc">脚の上げ下げをするエッジ(辺，ノードとノードを繋ぐ物)の処理をするクラス． </td></tr>
<tr id="row_60_7_" class="odd" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_node_creator_leg_up_down_radiusdocs" target="_self">designlab::NodeCreatorLegUpDownRadius</a></td><td class="desc">脚の上げ下げをするエッジ(辺，ノードとノードを繋ぐ物)の処理をするクラス． </td></tr>
<tr id="row_61_" class="odd"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_61_" class="arrow" onclick="toggleFolder('61_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_i_node_creator_builderdocs" target="_self">designlab::INodeCreatorBuilder</a></td><td class="desc">INodeCreatorを生成するためのビルダークラス． </td></tr>
<tr id="row_61_0_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_node_creator_builder_body_rotdocs" target="_self">designlab::NodeCreatorBuilderBodyRot</a></td><td class="desc">ノード作成ビルダーのボディ回転クラス </td></tr>
<tr id="row_61_1_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_node_creator_builder_straight_movedocs" target="_self">designlab::NodeCreatorBuilderStraightMove</a></td><td class="desc">波東さんが行った処理と同様の方法になるようにノード生成クラスを生成するクラス． </td></tr>
<tr id="row_61_2_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_node_creator_builder_turndocs" target="_self">designlab::NodeCreatorBuilderTurn</a></td><td class="desc">旋回動作用のノード生成クラスのビルダー． </td></tr>
<tr id="row_61_3_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_node_creator_builder_turn_spotdocs" target="_self">designlab::NodeCreatorBuilderTurnSpot</a></td><td class="desc">旋回動作用のノード生成クラスを生成するクラス． </td></tr>
<tr id="row_62_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_interpolated_node_creatordocs" target="_self">designlab::InterpolatedNodeCreator</a></td><td class="desc">矩形軌道を生成し，ノード間を補間するクラス． </td></tr>
<tr id="row_63_" class="odd"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_interpolate_validatordocs" target="_self">designlab::InterpolateValidator</a></td><td class="desc">補間の妥当性を検証するクラス． </td></tr>
<tr id="row_64_" class="even"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_64_" class="arrow" onclick="toggleFolder('64_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_i_robot_operatordocs" target="_self">designlab::IRobotOperator</a></td><td class="desc">ロボットの動作を決定する処理のインターフェース． </td></tr>
<tr id="row_64_0_" class="odd" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_robot_operator_fixeddocs" target="_self">designlab::RobotOperatorFixed</a></td><td class="desc">命令の更新をせず，初期化時の命令を送り続けるクラス． </td></tr>
<tr id="row_64_1_" class="odd" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_robot_operator_for_gpgdocs" target="_self">designlab::RobotOperatorForGpg</a></td><td class="desc">Global path generator を行うための仮置きクラス． </td></tr>
<tr id="row_64_2_" class="odd" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_robot_operator_for_pathdocs" target="_self">designlab::RobotOperatorForPath</a></td><td class="desc">指定した中継地点を通るようにロボットを動かすクラス． </td></tr>
<tr id="row_65_" class="odd"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_65_" class="arrow" onclick="toggleFolder('65_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><b>std::is_enum</b></td><td class="desc"></td></tr>
<tr id="row_65_0_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structdesignlab_1_1impl_1_1is__vector__of__enum_3_01std_1_1vector_3_01_t_01_4_01_4docs" target="_self">designlab::impl::is_vector_of_enum&lt; std::vector&lt; T &gt; &gt;</a></td><td class="desc">Vector&lt;enum&gt; 型かどうかを判定するメタ関数． </td></tr>
<tr id="row_66_" class="even"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_66_" class="arrow" onclick="toggleFolder('66_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structdesignlab_1_1impl_1_1is__toml11__available__type__not__vector__typedocs" target="_self">designlab::impl::is_toml11_available_type_not_vector_type&lt; T &gt;</a></td><td class="desc">Toml11で使用可能な型かどうかを判定するメタ関数． toml11は vector型にも対応しているが，こちらでは除外する． </td></tr>
<tr id="row_66_0_" class="odd" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structdesignlab_1_1impl_1_1is__toml11__available__type__vector__type_3_01std_1_1vector_3_01_t_01_4_01_4docs" target="_self">designlab::impl::is_toml11_available_type_vector_type&lt; std::vector&lt; T &gt; &gt;</a></td><td class="desc">Toml11で使用可能な型かどうかを判定するメタ関数． vector型の場合はこちらを使用して判定する． </td></tr>
<tr id="row_67_" class="odd"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_67_" class="arrow" onclick="toggleFolder('67_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_i_simulation_end_checkerdocs" target="_self">designlab::ISimulationEndChecker</a></td><td class="desc">シミュレーションの終了を判定するクラスのインターフェース． </td></tr>
<tr id="row_67_0_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_simulation_end_checker_by_goal_tapedocs" target="_self">designlab::SimulationEndCheckerByGoalTape</a></td><td class="desc">ゴールテープによるシミュレーション終了判定クラス． </td></tr>
<tr id="row_67_1_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_simulation_end_checker_by_positiondocs" target="_self">designlab::SimulationEndCheckerByPosition</a></td><td class="desc">最終位置によるシミュレーション終了判定クラス． </td></tr>
<tr id="row_67_2_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_simulation_end_checker_by_posturedocs" target="_self">designlab::SimulationEndCheckerByPosture</a></td><td class="desc">最終姿勢によるシミュレーション終了判定クラス． </td></tr>
<tr id="row_68_" class="even"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_68_" class="arrow" onclick="toggleFolder('68_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_i_system_maindocs" target="_self">designlab::ISystemMain</a></td><td class="desc">プログラムの面の処理のインターフェース． </td></tr>
<tr id="row_68_0_" class="odd" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_system_main_graph_viewerdocs" target="_self">designlab::SystemMainGraphViewer</a></td><td class="desc">グラフを表示するシステムのメインクラス． </td></tr>
<tr id="row_68_1_" class="odd" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_system_main_result_viewerdocs" target="_self">designlab::SystemMainResultViewer</a></td><td class="desc">結果を表示するシステムのクラス． </td></tr>
<tr id="row_68_2_" class="odd" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_system_main_robot_controldocs" target="_self">designlab::SystemMainRobotControl</a></td><td class="desc"></td></tr>
<tr id="row_68_3_" class="odd" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_system_main_simulationdocs" target="_self">designlab::SystemMainSimulation</a></td><td class="desc">先行研究における int main()で行われていた処理をまとめたもので， 歩容生成シミュレーションを行うクラス． </td></tr>
<tr id="row_69_" class="odd"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_double_int_range_1_1_iteratordocs" target="_self">designlab::DoubleIntRange::Iterator</a></td><td class="desc"></td></tr>
<tr id="row_70_" class="even"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_70_" class="arrow" onclick="toggleFolder('70_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_i_toml_data_validatordocs" target="_self">designlab::ITomlDataValidator&lt; T &gt;</a></td><td class="desc">TOMLファイルのデータの検証を行う処理のインターフェース． </td></tr>
<tr id="row_70_0_" class="odd" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_toml_data_validator_always_truedocs" target="_self">designlab::TomlDataValidatorAlwaysTrue&lt; T &gt;</a></td><td class="desc">常に trueを返す <a class="el" href="classdesignlab_1_1_i_toml_data_validatordocs" title="TOMLファイルのデータの検証を行う処理のインターフェース．">ITomlDataValidator</a> の実装クラス． </td></tr>
<tr id="row_71_" class="odd"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_71_" class="arrow" onclick="toggleFolder('71_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_i_toml_data_validatordocs" target="_self">designlab::ITomlDataValidator&lt; ApplicationSettingRecord &gt;</a></td><td class="desc"></td></tr>
<tr id="row_71_0_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_application_setting_record_validatordocs" target="_self">designlab::ApplicationSettingRecordValidator</a></td><td class="desc"><a class="el" href="structdesignlab_1_1_application_setting_recorddocs" title="アプリの設定を記録する構造体．">ApplicationSettingRecord</a> のバリデータ． </td></tr>
<tr id="row_72_" class="even"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_72_" class="arrow" onclick="toggleFolder('72_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_i_toml_data_validatordocs" target="_self">designlab::ITomlDataValidator&lt; SimulationMapParameter &gt;</a></td><td class="desc"></td></tr>
<tr id="row_72_0_" class="odd" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_simulation_map_parameter_validatordocs" target="_self">designlab::SimulationMapParameterValidator</a></td><td class="desc"><a class="el" href="structdesignlab_1_1_simulation_map_parameterdocs" title="マップ生成時のモードとオプションを指定する構造体．">SimulationMapParameter</a> のバリデータ． </td></tr>
<tr id="row_73_" class="odd"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_keyboarddocs" target="_self">designlab::Keyboard</a></td><td class="desc">Dxlibのキーボード入力を取得するクラス． </td></tr>
<tr id="row_74_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structdesignlab_1_1_line_segment2docs" target="_self">designlab::LineSegment2</a></td><td class="desc">2次元の線分を表す構造体． </td></tr>
<tr id="row_75_" class="odd"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_map_creator_factorydocs" target="_self">designlab::MapCreatorFactory</a></td><td class="desc">マップを生成するクラスを生成するクラス． </td></tr>
<tr id="row_76_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_map_file_exporterdocs" target="_self">designlab::MapFileExporter</a></td><td class="desc">マップを csv に出力するクラス． <br  />
 マップには脚接地可能点が羅列されているので，1行ずつ出力する． </td></tr>
<tr id="row_77_" class="odd"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_map_file_importerdocs" target="_self">designlab::MapFileImporter</a></td><td class="desc">マップを csv に出力したものを読み込むクラス． <br  />
 マップには脚接地可能点が羅列されているので，1行ずつ読み込み，それぞれマップに追加する． </td></tr>
<tr id="row_78_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_map_statedocs" target="_self">designlab::MapState</a></td><td class="desc">マップを表すクラス． </td></tr>
<tr id="row_79_" class="odd"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structdesignlab_1_1_math_constdocs" target="_self">designlab::MathConst&lt; T &gt;</a></td><td class="desc">Float 型と double 型の定数を提供するクラス． </td></tr>
<tr id="row_80_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structdesignlab_1_1_math_const_3_01double_01_4docs" target="_self">designlab::MathConst&lt; double &gt;</a></td><td class="desc">Double型の定数を提供するクラス． </td></tr>
<tr id="row_81_" class="odd"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structdesignlab_1_1_math_const_3_01float_01_4docs" target="_self">designlab::MathConst&lt; float &gt;</a></td><td class="desc">Float型の定数を提供するクラス． </td></tr>
<tr id="row_82_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_mousedocs" target="_self">designlab::Mouse</a></td><td class="desc">Dxlibでマウス入力を取得するクラス． </td></tr>
<tr id="row_83_" class="odd"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_movement_locus_rendererdocs" target="_self">designlab::MovementLocusRenderer</a></td><td class="desc">ロボットの移動軌跡を描画するクラス． </td></tr>
<tr id="row_84_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_node_initializerdocs" target="_self">designlab::NodeInitializer</a></td><td class="desc">ノードの初期化を行うクラス． <br  />
 シミュレーション時にノードの初期値を設定するために使用する． </td></tr>
<tr id="row_85_" class="odd"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_85_" class="arrow" onclick="toggleFolder('85_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><b>object</b></td><td class="desc"></td></tr>
<tr id="row_85_0_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classcpplint_1_1_cleansed_linesdocs" target="_self">cpplint.CleansedLines</a></td><td class="desc"></td></tr>
<tr id="row_85_1_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classcpplint_1_1_file_infodocs" target="_self">cpplint.FileInfo</a></td><td class="desc"></td></tr>
<tr id="row_85_2_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classcpplint_1_1_nesting_statedocs" target="_self">cpplint.NestingState</a></td><td class="desc"></td></tr>
<tr id="row_85_3_" class="even" style="display:none;"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span id="arr_85_3_" class="arrow" onclick="toggleFolder('85_3_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classcpplint_1_1___block_infodocs" target="_self">cpplint._BlockInfo</a></td><td class="desc"></td></tr>
<tr id="row_85_3_0_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classcpplint_1_1___class_infodocs" target="_self">cpplint._ClassInfo</a></td><td class="desc"></td></tr>
<tr id="row_85_3_1_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classcpplint_1_1___extern_c_infodocs" target="_self">cpplint._ExternCInfo</a></td><td class="desc"></td></tr>
<tr id="row_85_3_2_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classcpplint_1_1___namespace_infodocs" target="_self">cpplint._NamespaceInfo</a></td><td class="desc"></td></tr>
<tr id="row_85_4_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classcpplint_1_1___cpp_lint_statedocs" target="_self">cpplint._CppLintState</a></td><td class="desc"></td></tr>
<tr id="row_85_5_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classcpplint_1_1___function_statedocs" target="_self">cpplint._FunctionState</a></td><td class="desc"></td></tr>
<tr id="row_85_6_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classcpplint_1_1___include_statedocs" target="_self">cpplint._IncludeState</a></td><td class="desc"></td></tr>
<tr id="row_85_7_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classcpplint_1_1___preprocessor_infodocs" target="_self">cpplint._PreprocessorInfo</a></td><td class="desc"></td></tr>
<tr id="row_86_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_phantom_x_mk_i_i_constdocs" target="_self">designlab::PhantomXMkIIConst</a></td><td class="desc">PhantomX mk-Ⅱ のパラメータを定数で表現したもの． </td></tr>
<tr id="row_87_" class="odd"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structdesignlab_1_1_phantom_x_mk_i_i_parameter_recorddocs" target="_self">designlab::PhantomXMkIIParameterRecord</a></td><td class="desc"></td></tr>
<tr id="row_88_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structdesignlab_1_1_polygon2docs" target="_self">designlab::Polygon2</a></td><td class="desc">2次元の多角形を表す構造体． </td></tr>
<tr id="row_89_" class="odd"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structdesignlab_1_1_quaterniondocs" target="_self">designlab::Quaternion</a></td><td class="desc">クォータニオンを表す構造体． </td></tr>
<tr id="row_90_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_result_file_constdocs" target="_self">designlab::ResultFileConst</a></td><td class="desc"></td></tr>
<tr id="row_91_" class="odd"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_result_file_exporterdocs" target="_self">designlab::ResultFileExporter</a></td><td class="desc">結果をファイルに出力するクラス． <br  />
 シミュレーション結果をファイルに出力する処理を全てこのクラスにまとめた． </td></tr>
<tr id="row_92_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_result_file_importerdocs" target="_self">designlab::ResultFileImporter</a></td><td class="desc">結果をファイルから読み込むクラス． </td></tr>
<tr id="row_93_" class="odd"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_robot_ground_point_rendererdocs" target="_self">designlab::RobotGroundPointRenderer</a></td><td class="desc">ロボットが接地点した地点の履歴を描画するクラス． </td></tr>
<tr id="row_94_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structdesignlab_1_1_robot_operationdocs" target="_self">designlab::RobotOperation</a></td><td class="desc">探索において目標となる座標や角度，評価する値についてまとめた構造体． </td></tr>
<tr id="row_95_" class="odd"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_robot_operator_factorydocs" target="_self">designlab::RobotOperatorFactory</a></td><td class="desc">TargetUpdaterを生成するファクトリクラス． </td></tr>
<tr id="row_96_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structdesignlab_1_1_robot_state_nodedocs" target="_self">designlab::RobotStateNode</a></td><td class="desc">グラフ構造のためのノード(頂点)．旧名 LNODE </td></tr>
<tr id="row_97_" class="odd"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structdesignlab_1_1_rotation_matrix3x3docs" target="_self">designlab::RotationMatrix3x3</a></td><td class="desc">3次元の回転行列を表す構造体． </td></tr>
<tr id="row_98_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_serial_communication_threaddocs" target="_self">designlab::SerialCommunicationThread</a></td><td class="desc"></td></tr>
<tr id="row_99_" class="odd"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_simulation_end_checker_factorydocs" target="_self">designlab::SimulationEndCheckerFactory</a></td><td class="desc">シミュレーションの終了を判定するクラスを生成するクラス． </td></tr>
<tr id="row_100_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structdesignlab_1_1_simulation_map_parameterdocs" target="_self">designlab::SimulationMapParameter</a></td><td class="desc">マップ生成時のモードとオプションを指定する構造体． </td></tr>
<tr id="row_101_" class="odd"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structdesignlab_1_1_simulation_result_recorddocs" target="_self">designlab::SimulationResultRecord</a></td><td class="desc">シミュレーションの結果を格納する構造体． </td></tr>
<tr id="row_102_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structdesignlab_1_1_simulation_setting_recorddocs" target="_self">designlab::SimulationSettingRecord</a></td><td class="desc"></td></tr>
<tr id="row_103_" class="odd"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_singletondocs" target="_self">designlab::Singleton&lt; _T &gt;</a></td><td class="desc">Singletonクラス作成のためのテンプレートクラス． </td></tr>
<tr id="row_104_" class="even"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_104_" class="arrow" onclick="toggleFolder('104_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_singletondocs" target="_self">designlab::Singleton&lt; FontLoader &gt;</a></td><td class="desc"></td></tr>
<tr id="row_104_0_" class="odd" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_font_loaderdocs" target="_self">designlab::FontLoader</a></td><td class="desc">Dxlibのフォントを読み込むクラス． </td></tr>
<tr id="row_105_" class="odd"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_105_" class="arrow" onclick="toggleFolder('105_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_singletondocs" target="_self">designlab::Singleton&lt; ModelLoader &gt;</a></td><td class="desc"></td></tr>
<tr id="row_105_0_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_model_loaderdocs" target="_self">designlab::ModelLoader</a></td><td class="desc">Dxlibの3Dモデルを読み込むクラス． </td></tr>
<tr id="row_106_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_stopwatchdocs" target="_self">designlab::Stopwatch</a></td><td class="desc">時間計測用のクラス． </td></tr>
<tr id="row_107_" class="odd"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structdesignlab_1_1toml__func_1_1_toml11_descriptiondocs" target="_self">designlab::toml_func::Toml11Description</a></td><td class="desc">Tomlファイルに追加する変数の説明を追加するための構造体． </td></tr>
<tr id="row_108_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_toml_directory_exporterdocs" target="_self">designlab::TomlDirectoryExporter</a></td><td class="desc">TOMLファイルを入れるディレクトリを作成し， TOMLファイル読み込みの準備をするクラス． </td></tr>
<tr id="row_109_" class="odd"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_toml_file_exporterdocs" target="_self">designlab::TomlFileExporter&lt; T &gt;</a></td><td class="desc">TOMLファイルを出力するテンプレートクラス． </td></tr>
<tr id="row_110_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classdesignlab_1_1_toml_file_importerdocs" target="_self">designlab::TomlFileImporter&lt; T &gt;</a></td><td class="desc">Tomlファイルを読み込んで構造体に変換するテンプレートクラス． </td></tr>
<tr id="row_111_" class="odd"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_111_" class="arrow" onclick="toggleFolder('111_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><b>std::true_type</b></td><td class="desc"></td></tr>
<tr id="row_111_0_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structdesignlab_1_1impl_1_1has__from__toml_3_01_t_00_01std_1_1void__t_3_01decltype_07toml_1_1from_3_01_t_01_4_07_08_08_4_01_4docs" target="_self">designlab::impl::has_from_toml&lt; T, std::void_t&lt; decltype(toml::from&lt; T &gt;())&gt; &gt;</a></td><td class="desc">Toml::from&lt;T&gt;()が存在するかどうかを判定するメタ関数． </td></tr>
<tr id="row_111_1_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structdesignlab_1_1impl_1_1has__input__operator_3_01_t_00_01decltype_07std_1_1declval_3_01std_1_60b7592f7ed55b6e64b0a9fbd1e13724docs" target="_self">designlab::impl::has_input_operator&lt; T, decltype(std::declval&lt; std::istream &amp; &gt;() &gt; &gt; std::declval&lt; T &amp; &gt;(), std::declval&lt; void &gt;())&gt;</a></td><td class="desc">入力ストリームが実装されているか判断するメタ関数． </td></tr>
<tr id="row_111_2_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structdesignlab_1_1impl_1_1has__into__toml_3_01_t_00_01std_1_1void__t_3_01decltype_07toml_1_1into_3_01_t_01_4_07_08_08_4_01_4docs" target="_self">designlab::impl::has_into_toml&lt; T, std::void_t&lt; decltype(toml::into&lt; T &gt;())&gt; &gt;</a></td><td class="desc">Toml::into&lt;T&gt;()が存在するかどうかを判定するメタ関数． </td></tr>
<tr id="row_111_3_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structdesignlab_1_1impl_1_1has__output__operator_3_01_t_00_01decltype_07std_1_1declval_3_01std_16aa2661056f7ad96d6591b9b360fa568docs" target="_self">designlab::impl::has_output_operator&lt; T, decltype(std::declval&lt; std::ostream &amp; &gt;()&lt;&lt; std::declval&lt; T &amp; &gt;(), std::declval&lt; void &gt;())&gt;</a></td><td class="desc">出力ストリームが実装されているか判断するメタ関数． </td></tr>
<tr id="row_111_4_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structdesignlab_1_1impl_1_1is__vector_3_01std_1_1vector_3_01_t_01_4_01_4docs" target="_self">designlab::impl::is_vector&lt; std::vector&lt; T &gt; &gt;</a></td><td class="desc">Vector型かどうかを判定するメタ関数． </td></tr>
<tr id="row_112_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structdesignlab_1_1_vector2docs" target="_self">designlab::Vector2</a></td><td class="desc">2次元の位置ベクトルを表す構造体． </td></tr>
<tr id="row_113_" class="odd"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structdesignlab_1_1_vector3docs" target="_self">designlab::Vector3</a></td><td class="desc">3次元の位置ベクトルを表す構造体． </td></tr>
</table>
</div><!-- directory -->
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="footer">構築: <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.8 </li>
  </ul>
</div>
</body>
</html>
