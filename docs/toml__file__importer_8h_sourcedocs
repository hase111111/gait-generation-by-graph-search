<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="ja">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.8"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>GaitGeneration by Graph Search: C:/Users/hasegawa/Desktop/main/program/gait-generation-by-graph-search/DesignLab/toml_file_importer.h ソースファイル</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">GaitGeneration by Graph Search
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- 構築: Doxygen 1.9.8 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search/",'docs');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','検索');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function() { init_codefold(0); });
/* @license-end */
</script>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('toml__file__importer_8h_sourcedocs',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">読み取り中…</div>
<div class="SRStatus" id="Searching">検索中…</div>
<div class="SRStatus" id="NoMatches">一致する文字列を見つけられません</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="headertitle"><div class="title">toml_file_importer.h</div></div>
</div><!--header-->
<div class="contents">
<a href="toml__file__importer_8hdocs">[詳解]</a><div class="fragment"><div class="line"><a id="l00001" name="l00001"></a><span class="lineno">    1</span> </div>
<div class="line"><a id="l00005" name="l00005"></a><span class="lineno">    5</span> </div>
<div class="line"><a id="l00006" name="l00006"></a><span class="lineno">    6</span><span class="preprocessor">#ifndef DESIGNLAB_TOML_FILE_IMPORTER_H_</span></div>
<div class="line"><a id="l00007" name="l00007"></a><span class="lineno">    7</span><span class="preprocessor">#define DESIGNLAB_TOML_FILE_IMPORTER_H_</span></div>
<div class="line"><a id="l00008" name="l00008"></a><span class="lineno">    8</span> </div>
<div class="line"><a id="l00009" name="l00009"></a><span class="lineno">    9</span><span class="preprocessor">#include &lt;concepts&gt;</span></div>
<div class="line"><a id="l00010" name="l00010"></a><span class="lineno">   10</span><span class="preprocessor">#include &lt;filesystem&gt;</span></div>
<div class="line"><a id="l00011" name="l00011"></a><span class="lineno">   11</span><span class="preprocessor">#include &lt;fstream&gt;</span></div>
<div class="line"><a id="l00012" name="l00012"></a><span class="lineno">   12</span><span class="preprocessor">#include &lt;memory&gt;</span></div>
<div class="line"><a id="l00013" name="l00013"></a><span class="lineno">   13</span><span class="preprocessor">#include &lt;optional&gt;</span></div>
<div class="line"><a id="l00014" name="l00014"></a><span class="lineno">   14</span><span class="preprocessor">#include &lt;string&gt;</span></div>
<div class="line"><a id="l00015" name="l00015"></a><span class="lineno">   15</span><span class="preprocessor">#include &lt;utility&gt;</span></div>
<div class="line"><a id="l00016" name="l00016"></a><span class="lineno">   16</span> </div>
<div class="line"><a id="l00017" name="l00017"></a><span class="lineno">   17</span><span class="preprocessor">#include &quot;<a class="code" href="cmdio__util_8hdocs">cmdio_util.h</a>&quot;</span></div>
<div class="line"><a id="l00018" name="l00018"></a><span class="lineno">   18</span><span class="preprocessor">#include &quot;<a class="code" href="implicit__metafunction__for__toml11_8hdocs">implicit_metafunction_for_toml11.h</a>&quot;</span></div>
<div class="line"><a id="l00019" name="l00019"></a><span class="lineno">   19</span><span class="preprocessor">#include &quot;<a class="code" href="interface__toml__data__validator_8hdocs">interface_toml_data_validator.h</a>&quot;</span></div>
<div class="line"><a id="l00020" name="l00020"></a><span class="lineno">   20</span><span class="preprocessor">#include &quot;<a class="code" href="toml__data__validator__always__true_8hdocs">toml_data_validator_always_true.h</a>&quot;</span></div>
<div class="line"><a id="l00021" name="l00021"></a><span class="lineno">   21</span><span class="preprocessor">#include &quot;<a class="code" href="toml__file__exporter_8hdocs">toml_file_exporter.h</a>&quot;</span></div>
<div class="line"><a id="l00022" name="l00022"></a><span class="lineno">   22</span> </div>
<div class="line"><a id="l00023" name="l00023"></a><span class="lineno">   23</span> </div>
<div class="line"><a id="l00024" name="l00024"></a><span class="lineno">   24</span><span class="keyword">namespace </span><a class="code hl_namespace" href="namespacedesignlabdocs">designlab</a></div>
<div class="line"><a id="l00025" name="l00025"></a><span class="lineno">   25</span>{</div>
<div class="line"><a id="l00026" name="l00026"></a><span class="lineno">   26</span> </div>
<div class="line"><a id="l00030" name="l00030"></a><span class="lineno">   30</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a id="l00031" name="l00031"></a><span class="lineno"><a class="line" href="conceptdesignlab_1_1_has_from_tomldocs">   31</a></span><span class="keyword">concept </span><a class="code hl_concept" href="conceptdesignlab_1_1_has_from_tomldocs">HasFromToml</a> = std::is_default_constructible_v&lt;T&gt; &amp;&amp; impl::has_from_toml&lt;T&gt;::value;</div>
<div class="line"><a id="l00032" name="l00032"></a><span class="lineno">   32</span> </div>
<div class="line"><a id="l00033" name="l00033"></a><span class="lineno">   33</span> </div>
<div class="line"><a id="l00038" name="l00038"></a><span class="lineno">   38</span><span class="keyword">template</span> &lt;HasFromToml T&gt;</div>
<div class="foldopen" id="foldopen00039" data-start="{" data-end="};">
<div class="line"><a id="l00039" name="l00039"></a><span class="lineno"><a class="line" href="classdesignlab_1_1_toml_file_importerdocs">   39</a></span><span class="keyword">class </span><a class="code hl_class" href="classdesignlab_1_1_toml_file_importerdocs">TomlFileImporter</a> final</div>
<div class="line"><a id="l00040" name="l00040"></a><span class="lineno">   40</span>{</div>
<div class="line"><a id="l00041" name="l00041"></a><span class="lineno">   41</span><span class="keyword">public</span>:</div>
<div class="line"><a id="l00042" name="l00042"></a><span class="lineno">   42</span>    <a class="code hl_class" href="classdesignlab_1_1_toml_file_importerdocs">TomlFileImporter</a>() : validator_(std::make_unique&lt;<a class="code hl_class" href="classdesignlab_1_1_toml_data_validator_always_truedocs">TomlDataValidatorAlwaysTrue&lt;T&gt;</a>&gt;()) {}</div>
<div class="line"><a id="l00043" name="l00043"></a><span class="lineno">   43</span> </div>
<div class="line"><a id="l00044" name="l00044"></a><span class="lineno">   44</span>    <span class="keyword">explicit</span> <a class="code hl_class" href="classdesignlab_1_1_toml_file_importerdocs">TomlFileImporter</a>(std::unique_ptr&lt;<a class="code hl_class" href="classdesignlab_1_1_i_toml_data_validatordocs">ITomlDataValidator&lt;T&gt;</a>&gt;&amp;&amp; validator) : validator_(std::move(validator)) {}</div>
<div class="line"><a id="l00045" name="l00045"></a><span class="lineno">   45</span> </div>
<div class="line"><a id="l00046" name="l00046"></a><span class="lineno">   46</span> </div>
<div class="foldopen" id="foldopen00050" data-start="{" data-end="}">
<div class="line"><a id="l00050" name="l00050"></a><span class="lineno"><a class="line" href="classdesignlab_1_1_toml_file_importerdocs#a4960e633876bd88dc7433696943734e8">   50</a></span>    std::optional&lt;T&gt; <a class="code hl_function" href="classdesignlab_1_1_toml_file_importerdocs#a4960e633876bd88dc7433696943734e8">Import</a>(<span class="keyword">const</span> std::string&amp; file_path)<span class="keyword"> const</span></div>
<div class="line"><a id="l00051" name="l00051"></a><span class="lineno">   51</span><span class="keyword">    </span>{</div>
<div class="line"><a id="l00052" name="l00052"></a><span class="lineno">   52</span>        <span class="keywordflow">if</span> (do_output_message_)</div>
<div class="line"><a id="l00053" name="l00053"></a><span class="lineno">   53</span>        {</div>
<div class="line"><a id="l00054" name="l00054"></a><span class="lineno">   54</span>            <a class="code hl_function" href="classdesignlab_1_1_cmd_i_o_utildocs#a563e04e0ce3cf7b6c988a94b887a74b9">CmdIOUtil::OutputNewLine</a>(1, <a class="code hl_enumvalue" href="namespacedesignlabdocs#a43f5ea9398e73bc5134e238b7e8c5645a2c9d4d4ca70df56c762f0140f57dbdfb">OutputDetail::kSystem</a>);</div>
<div class="line"><a id="l00055" name="l00055"></a><span class="lineno">   55</span>            <a class="code hl_function" href="classdesignlab_1_1_cmd_i_o_utildocs#a0ebb5b245f90bcc0d1849400d1faa7d2">CmdIOUtil::SystemOutput</a>(<span class="stringliteral">&quot;Loads a file. file_path : &quot;</span> + file_path);</div>
<div class="line"><a id="l00056" name="l00056"></a><span class="lineno">   56</span>        }</div>
<div class="line"><a id="l00057" name="l00057"></a><span class="lineno">   57</span> </div>
<div class="line"><a id="l00058" name="l00058"></a><span class="lineno">   58</span>        <span class="keywordflow">if</span> (!FileIsExist(file_path)) { <span class="keywordflow">return</span> std::nullopt; }</div>
<div class="line"><a id="l00059" name="l00059"></a><span class="lineno">   59</span> </div>
<div class="line"><a id="l00060" name="l00060"></a><span class="lineno">   60</span>        toml::value toml_value;</div>
<div class="line"><a id="l00061" name="l00061"></a><span class="lineno">   61</span> </div>
<div class="line"><a id="l00062" name="l00062"></a><span class="lineno">   62</span>        <span class="keywordflow">if</span> (!ParseTomlFile(file_path, &amp;toml_value)) { <span class="keywordflow">return</span> std::nullopt; }</div>
<div class="line"><a id="l00063" name="l00063"></a><span class="lineno">   63</span> </div>
<div class="line"><a id="l00064" name="l00064"></a><span class="lineno">   64</span>        T data;</div>
<div class="line"><a id="l00065" name="l00065"></a><span class="lineno">   65</span> </div>
<div class="line"><a id="l00066" name="l00066"></a><span class="lineno">   66</span>        <span class="keywordflow">if</span> (!SerializeTomlData(&amp;toml_value, &amp;data)) { <span class="keywordflow">return</span> std::nullopt; }</div>
<div class="line"><a id="l00067" name="l00067"></a><span class="lineno">   67</span> </div>
<div class="line"><a id="l00068" name="l00068"></a><span class="lineno">   68</span>        <span class="keywordflow">if</span> (!ValidateData(data)) { <span class="keywordflow">return</span> std::nullopt; }</div>
<div class="line"><a id="l00069" name="l00069"></a><span class="lineno">   69</span> </div>
<div class="line"><a id="l00070" name="l00070"></a><span class="lineno">   70</span>        <span class="keywordflow">if</span> (do_output_message_)</div>
<div class="line"><a id="l00071" name="l00071"></a><span class="lineno">   71</span>        {</div>
<div class="line"><a id="l00072" name="l00072"></a><span class="lineno">   72</span>            <a class="code hl_function" href="classdesignlab_1_1_cmd_i_o_utildocs#a0ebb5b245f90bcc0d1849400d1faa7d2">CmdIOUtil::SystemOutput</a>(<span class="stringliteral">&quot;Loading completed successfully.&quot;</span>);</div>
<div class="line"><a id="l00073" name="l00073"></a><span class="lineno">   73</span>            <a class="code hl_function" href="classdesignlab_1_1_cmd_i_o_utildocs#a563e04e0ce3cf7b6c988a94b887a74b9">CmdIOUtil::OutputNewLine</a>(1, <a class="code hl_enumvalue" href="namespacedesignlabdocs#a43f5ea9398e73bc5134e238b7e8c5645a2c9d4d4ca70df56c762f0140f57dbdfb">OutputDetail::kSystem</a>);</div>
<div class="line"><a id="l00074" name="l00074"></a><span class="lineno">   74</span>        }</div>
<div class="line"><a id="l00075" name="l00075"></a><span class="lineno">   75</span> </div>
<div class="line"><a id="l00076" name="l00076"></a><span class="lineno">   76</span>        <span class="keywordflow">return</span> data;</div>
<div class="line"><a id="l00077" name="l00077"></a><span class="lineno">   77</span>    }</div>
</div>
<div class="line"><a id="l00078" name="l00078"></a><span class="lineno">   78</span> </div>
<div class="foldopen" id="foldopen00085" data-start="{" data-end="}">
<div class="line"><a id="l00085" name="l00085"></a><span class="lineno"><a class="line" href="classdesignlab_1_1_toml_file_importerdocs#a8ca4fd7bec19dce42d1ab1dfc895ff88">   85</a></span>    T <a class="code hl_function" href="classdesignlab_1_1_toml_file_importerdocs#a8ca4fd7bec19dce42d1ab1dfc895ff88">ImportOrUseDefault</a>(<span class="keyword">const</span> std::string&amp; file_path)<span class="keyword"> const</span></div>
<div class="line"><a id="l00086" name="l00086"></a><span class="lineno">   86</span><span class="keyword">    </span>{</div>
<div class="line"><a id="l00087" name="l00087"></a><span class="lineno">   87</span>        <span class="keyword">const</span> <span class="keyword">auto</span> data = <a class="code hl_function" href="classdesignlab_1_1_toml_file_importerdocs#a4960e633876bd88dc7433696943734e8">Import</a>(file_path);</div>
<div class="line"><a id="l00088" name="l00088"></a><span class="lineno">   88</span> </div>
<div class="line"><a id="l00089" name="l00089"></a><span class="lineno">   89</span>        <span class="keywordflow">if</span> (data.has_value()) { <span class="keywordflow">return</span> data.value(); }</div>
<div class="line"><a id="l00090" name="l00090"></a><span class="lineno">   90</span> </div>
<div class="line"><a id="l00091" name="l00091"></a><span class="lineno">   91</span>        <span class="keywordflow">if</span> (<a class="code hl_function" href="classdesignlab_1_1_cmd_i_o_utildocs#aa27aa18b11d6199f27f82cfe97241336">CmdIOUtil::InputYesNo</a>(<span class="stringliteral">&quot;Do you want to output a default file?&quot;</span>))</div>
<div class="line"><a id="l00092" name="l00092"></a><span class="lineno">   92</span>        {</div>
<div class="line"><a id="l00093" name="l00093"></a><span class="lineno">   93</span>            <a class="code hl_class" href="classdesignlab_1_1_toml_file_exporterdocs">TomlFileExporter&lt;T&gt;</a> exporter;</div>
<div class="line"><a id="l00094" name="l00094"></a><span class="lineno">   94</span>            exporter.<a class="code hl_function" href="classdesignlab_1_1_toml_file_exporterdocs#a095f0d7b33e267b1669a18aa6860522c">Export</a>(file_path, T());</div>
<div class="line"><a id="l00095" name="l00095"></a><span class="lineno">   95</span>        }</div>
<div class="line"><a id="l00096" name="l00096"></a><span class="lineno">   96</span> </div>
<div class="line"><a id="l00097" name="l00097"></a><span class="lineno">   97</span>        <a class="code hl_function" href="classdesignlab_1_1_cmd_i_o_utildocs#a0ebb5b245f90bcc0d1849400d1faa7d2">CmdIOUtil::SystemOutput</a>(<span class="stringliteral">&quot;Use default data.&quot;</span>);</div>
<div class="line"><a id="l00098" name="l00098"></a><span class="lineno">   98</span>        <a class="code hl_function" href="classdesignlab_1_1_cmd_i_o_utildocs#a563e04e0ce3cf7b6c988a94b887a74b9">CmdIOUtil::OutputNewLine</a>(1, <a class="code hl_enumvalue" href="namespacedesignlabdocs#a43f5ea9398e73bc5134e238b7e8c5645a2c9d4d4ca70df56c762f0140f57dbdfb">OutputDetail::kSystem</a>);</div>
<div class="line"><a id="l00099" name="l00099"></a><span class="lineno">   99</span> </div>
<div class="line"><a id="l00100" name="l00100"></a><span class="lineno">  100</span>        <span class="keywordflow">return</span> T();</div>
<div class="line"><a id="l00101" name="l00101"></a><span class="lineno">  101</span>    }</div>
</div>
<div class="line"><a id="l00102" name="l00102"></a><span class="lineno">  102</span> </div>
<div class="line"><a id="l00103" name="l00103"></a><span class="lineno">  103</span><span class="keyword">private</span>:</div>
<div class="line"><a id="l00104" name="l00104"></a><span class="lineno">  104</span>    <span class="keywordtype">bool</span> FileIsExist(<span class="keyword">const</span> std::string&amp; file_path)<span class="keyword"> const</span></div>
<div class="line"><a id="l00105" name="l00105"></a><span class="lineno">  105</span><span class="keyword">    </span>{</div>
<div class="line"><a id="l00106" name="l00106"></a><span class="lineno">  106</span>        <span class="keywordflow">if</span> (do_output_message_)</div>
<div class="line"><a id="l00107" name="l00107"></a><span class="lineno">  107</span>        {</div>
<div class="line"><a id="l00108" name="l00108"></a><span class="lineno">  108</span>            <a class="code hl_function" href="classdesignlab_1_1_cmd_i_o_utildocs#ab913a88b80ef7181aa23f9dce114e3fb">CmdIOUtil::InfoOutput</a>(<span class="stringliteral">&quot;Check if the file exists. &quot;</span>);</div>
<div class="line"><a id="l00109" name="l00109"></a><span class="lineno">  109</span>        }</div>
<div class="line"><a id="l00110" name="l00110"></a><span class="lineno">  110</span> </div>
<div class="line"><a id="l00111" name="l00111"></a><span class="lineno">  111</span>        <span class="keywordflow">if</span> (!std::filesystem::exists(file_path))</div>
<div class="line"><a id="l00112" name="l00112"></a><span class="lineno">  112</span>        {</div>
<div class="line"><a id="l00113" name="l00113"></a><span class="lineno">  113</span>            <span class="keywordflow">if</span> (do_output_message_)</div>
<div class="line"><a id="l00114" name="l00114"></a><span class="lineno">  114</span>            {</div>
<div class="line"><a id="l00115" name="l00115"></a><span class="lineno">  115</span>                <a class="code hl_function" href="classdesignlab_1_1_cmd_i_o_utildocs#a2fe5f9aa287a9bddd51a4b1321d9e2f6">CmdIOUtil::ErrorOutput</a>(<span class="stringliteral">&quot;The file does not exist.&quot;</span>);</div>
<div class="line"><a id="l00116" name="l00116"></a><span class="lineno">  116</span>                <a class="code hl_function" href="classdesignlab_1_1_cmd_i_o_utildocs#a563e04e0ce3cf7b6c988a94b887a74b9">CmdIOUtil::OutputNewLine</a>(1, <a class="code hl_enumvalue" href="namespacedesignlabdocs#a43f5ea9398e73bc5134e238b7e8c5645ae3587c730cc1aa530fa4ddc9c4204e97">OutputDetail::kError</a>);</div>
<div class="line"><a id="l00117" name="l00117"></a><span class="lineno">  117</span>            }</div>
<div class="line"><a id="l00118" name="l00118"></a><span class="lineno">  118</span> </div>
<div class="line"><a id="l00119" name="l00119"></a><span class="lineno">  119</span>            <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a id="l00120" name="l00120"></a><span class="lineno">  120</span>        }</div>
<div class="line"><a id="l00121" name="l00121"></a><span class="lineno">  121</span> </div>
<div class="line"><a id="l00122" name="l00122"></a><span class="lineno">  122</span>        <span class="keywordflow">if</span> (do_output_message_)</div>
<div class="line"><a id="l00123" name="l00123"></a><span class="lineno">  123</span>        {</div>
<div class="line"><a id="l00124" name="l00124"></a><span class="lineno">  124</span>            <a class="code hl_function" href="classdesignlab_1_1_cmd_i_o_utildocs#ab913a88b80ef7181aa23f9dce114e3fb">CmdIOUtil::InfoOutput</a>(<span class="stringliteral">&quot;The file found.&quot;</span>);</div>
<div class="line"><a id="l00125" name="l00125"></a><span class="lineno">  125</span>        }</div>
<div class="line"><a id="l00126" name="l00126"></a><span class="lineno">  126</span> </div>
<div class="line"><a id="l00127" name="l00127"></a><span class="lineno">  127</span>        <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a id="l00128" name="l00128"></a><span class="lineno">  128</span>    }</div>
<div class="line"><a id="l00129" name="l00129"></a><span class="lineno">  129</span> </div>
<div class="line"><a id="l00130" name="l00130"></a><span class="lineno">  130</span>    <span class="keywordtype">bool</span> ParseTomlFile(<span class="keyword">const</span> std::string&amp; file_path, toml::value* toml_value)<span class="keyword"> const</span></div>
<div class="line"><a id="l00131" name="l00131"></a><span class="lineno">  131</span><span class="keyword">    </span>{</div>
<div class="line"><a id="l00132" name="l00132"></a><span class="lineno">  132</span>        <span class="keywordflow">if</span> (do_output_message_)</div>
<div class="line"><a id="l00133" name="l00133"></a><span class="lineno">  133</span>        {</div>
<div class="line"><a id="l00134" name="l00134"></a><span class="lineno">  134</span>            <a class="code hl_function" href="classdesignlab_1_1_cmd_i_o_utildocs#ab913a88b80ef7181aa23f9dce114e3fb">CmdIOUtil::InfoOutput</a>(<span class="stringliteral">&quot;Start parsing.&quot;</span>);</div>
<div class="line"><a id="l00135" name="l00135"></a><span class="lineno">  135</span>        }</div>
<div class="line"><a id="l00136" name="l00136"></a><span class="lineno">  136</span> </div>
<div class="line"><a id="l00137" name="l00137"></a><span class="lineno">  137</span>        <span class="keywordflow">try</span></div>
<div class="line"><a id="l00138" name="l00138"></a><span class="lineno">  138</span>        {</div>
<div class="line"><a id="l00139" name="l00139"></a><span class="lineno">  139</span>            <span class="comment">// バイナリモードで読み込む．</span></div>
<div class="line"><a id="l00140" name="l00140"></a><span class="lineno">  140</span>            std::ifstream ifs(file_path, std::ios::binary);</div>
<div class="line"><a id="l00141" name="l00141"></a><span class="lineno">  141</span> </div>
<div class="line"><a id="l00142" name="l00142"></a><span class="lineno">  142</span>            *toml_value = toml::parse(ifs, file_path);</div>
<div class="line"><a id="l00143" name="l00143"></a><span class="lineno">  143</span>        }</div>
<div class="line"><a id="l00144" name="l00144"></a><span class="lineno">  144</span>        <span class="keywordflow">catch</span> (toml::syntax_error err)</div>
<div class="line"><a id="l00145" name="l00145"></a><span class="lineno">  145</span>        {</div>
<div class="line"><a id="l00146" name="l00146"></a><span class="lineno">  146</span>            <span class="keywordflow">if</span> (do_output_message_)</div>
<div class="line"><a id="l00147" name="l00147"></a><span class="lineno">  147</span>            {</div>
<div class="line"><a id="l00148" name="l00148"></a><span class="lineno">  148</span>                <a class="code hl_function" href="classdesignlab_1_1_cmd_i_o_utildocs#a2fe5f9aa287a9bddd51a4b1321d9e2f6">CmdIOUtil::ErrorOutput</a>(<span class="stringliteral">&quot;File parsing failed.&quot;</span>);</div>
<div class="line"><a id="l00149" name="l00149"></a><span class="lineno">  149</span>                <a class="code hl_function" href="classdesignlab_1_1_cmd_i_o_utildocs#a563e04e0ce3cf7b6c988a94b887a74b9">CmdIOUtil::OutputNewLine</a>(1, <a class="code hl_enumvalue" href="namespacedesignlabdocs#a43f5ea9398e73bc5134e238b7e8c5645ae3587c730cc1aa530fa4ddc9c4204e97">OutputDetail::kError</a>);</div>
<div class="line"><a id="l00150" name="l00150"></a><span class="lineno">  150</span>                <a class="code hl_function" href="classdesignlab_1_1_cmd_i_o_utildocs#a2fe5f9aa287a9bddd51a4b1321d9e2f6">CmdIOUtil::ErrorOutput</a>(<span class="stringliteral">&quot;&lt; Rows that failed to parse &gt;&quot;</span>);</div>
<div class="line"><a id="l00151" name="l00151"></a><span class="lineno">  151</span>                <a class="code hl_function" href="classdesignlab_1_1_cmd_i_o_utildocs#a2fe5f9aa287a9bddd51a4b1321d9e2f6">CmdIOUtil::ErrorOutput</a>(err.what());</div>
<div class="line"><a id="l00152" name="l00152"></a><span class="lineno">  152</span>                <a class="code hl_function" href="classdesignlab_1_1_cmd_i_o_utildocs#a563e04e0ce3cf7b6c988a94b887a74b9">CmdIOUtil::OutputNewLine</a>(1, <a class="code hl_enumvalue" href="namespacedesignlabdocs#a43f5ea9398e73bc5134e238b7e8c5645ae3587c730cc1aa530fa4ddc9c4204e97">OutputDetail::kError</a>);</div>
<div class="line"><a id="l00153" name="l00153"></a><span class="lineno">  153</span>            }</div>
<div class="line"><a id="l00154" name="l00154"></a><span class="lineno">  154</span> </div>
<div class="line"><a id="l00155" name="l00155"></a><span class="lineno">  155</span>            <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a id="l00156" name="l00156"></a><span class="lineno">  156</span>        }</div>
<div class="line"><a id="l00157" name="l00157"></a><span class="lineno">  157</span> </div>
<div class="line"><a id="l00158" name="l00158"></a><span class="lineno">  158</span>        <span class="keywordflow">if</span> (do_output_message_)</div>
<div class="line"><a id="l00159" name="l00159"></a><span class="lineno">  159</span>        {</div>
<div class="line"><a id="l00160" name="l00160"></a><span class="lineno">  160</span>            <a class="code hl_function" href="classdesignlab_1_1_cmd_i_o_utildocs#ab913a88b80ef7181aa23f9dce114e3fb">CmdIOUtil::InfoOutput</a>(<span class="stringliteral">&quot;File parsing succeeded.&quot;</span>);</div>
<div class="line"><a id="l00161" name="l00161"></a><span class="lineno">  161</span>        }</div>
<div class="line"><a id="l00162" name="l00162"></a><span class="lineno">  162</span> </div>
<div class="line"><a id="l00163" name="l00163"></a><span class="lineno">  163</span>        <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a id="l00164" name="l00164"></a><span class="lineno">  164</span>    }</div>
<div class="line"><a id="l00165" name="l00165"></a><span class="lineno">  165</span> </div>
<div class="line"><a id="l00166" name="l00166"></a><span class="lineno">  166</span>    <span class="keywordtype">bool</span> SerializeTomlData(toml::value* toml_value, T* data)<span class="keyword"> const</span></div>
<div class="line"><a id="l00167" name="l00167"></a><span class="lineno">  167</span><span class="keyword">    </span>{</div>
<div class="line"><a id="l00168" name="l00168"></a><span class="lineno">  168</span>        <span class="keywordflow">if</span> (do_output_message_)</div>
<div class="line"><a id="l00169" name="l00169"></a><span class="lineno">  169</span>        {</div>
<div class="line"><a id="l00170" name="l00170"></a><span class="lineno">  170</span>            <a class="code hl_function" href="classdesignlab_1_1_cmd_i_o_utildocs#ab913a88b80ef7181aa23f9dce114e3fb">CmdIOUtil::InfoOutput</a>(<span class="stringliteral">&quot;Serialize data.&quot;</span>);</div>
<div class="line"><a id="l00171" name="l00171"></a><span class="lineno">  171</span>        }</div>
<div class="line"><a id="l00172" name="l00172"></a><span class="lineno">  172</span> </div>
<div class="line"><a id="l00173" name="l00173"></a><span class="lineno">  173</span>        <span class="keywordflow">try</span></div>
<div class="line"><a id="l00174" name="l00174"></a><span class="lineno">  174</span>        {</div>
<div class="line"><a id="l00175" name="l00175"></a><span class="lineno">  175</span>            *data = toml::from&lt;T&gt;::from_toml(*toml_value);</div>
<div class="line"><a id="l00176" name="l00176"></a><span class="lineno">  176</span>        }</div>
<div class="line"><a id="l00177" name="l00177"></a><span class="lineno">  177</span>        <span class="keywordflow">catch</span> (...)</div>
<div class="line"><a id="l00178" name="l00178"></a><span class="lineno">  178</span>        {</div>
<div class="line"><a id="l00179" name="l00179"></a><span class="lineno">  179</span>            <span class="keywordflow">if</span> (do_output_message_)</div>
<div class="line"><a id="l00180" name="l00180"></a><span class="lineno">  180</span>            {</div>
<div class="line"><a id="l00181" name="l00181"></a><span class="lineno">  181</span>                <a class="code hl_function" href="classdesignlab_1_1_cmd_i_o_utildocs#a2fe5f9aa287a9bddd51a4b1321d9e2f6">CmdIOUtil::ErrorOutput</a>(<span class="stringliteral">&quot;Data serialization failed.&quot;</span>);</div>
<div class="line"><a id="l00182" name="l00182"></a><span class="lineno">  182</span>                <a class="code hl_function" href="classdesignlab_1_1_cmd_i_o_utildocs#a563e04e0ce3cf7b6c988a94b887a74b9">CmdIOUtil::OutputNewLine</a>(1, <a class="code hl_enumvalue" href="namespacedesignlabdocs#a43f5ea9398e73bc5134e238b7e8c5645ae3587c730cc1aa530fa4ddc9c4204e97">OutputDetail::kError</a>);</div>
<div class="line"><a id="l00183" name="l00183"></a><span class="lineno">  183</span>            }</div>
<div class="line"><a id="l00184" name="l00184"></a><span class="lineno">  184</span> </div>
<div class="line"><a id="l00185" name="l00185"></a><span class="lineno">  185</span>            <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a id="l00186" name="l00186"></a><span class="lineno">  186</span>        }</div>
<div class="line"><a id="l00187" name="l00187"></a><span class="lineno">  187</span> </div>
<div class="line"><a id="l00188" name="l00188"></a><span class="lineno">  188</span>        <span class="keywordflow">if</span> (do_output_message_)</div>
<div class="line"><a id="l00189" name="l00189"></a><span class="lineno">  189</span>        {</div>
<div class="line"><a id="l00190" name="l00190"></a><span class="lineno">  190</span>            <a class="code hl_function" href="classdesignlab_1_1_cmd_i_o_utildocs#ab913a88b80ef7181aa23f9dce114e3fb">CmdIOUtil::InfoOutput</a>(<span class="stringliteral">&quot;Data serialization succeeded.&quot;</span>);</div>
<div class="line"><a id="l00191" name="l00191"></a><span class="lineno">  191</span>        }</div>
<div class="line"><a id="l00192" name="l00192"></a><span class="lineno">  192</span> </div>
<div class="line"><a id="l00193" name="l00193"></a><span class="lineno">  193</span>        <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a id="l00194" name="l00194"></a><span class="lineno">  194</span>    }</div>
<div class="line"><a id="l00195" name="l00195"></a><span class="lineno">  195</span> </div>
<div class="line"><a id="l00196" name="l00196"></a><span class="lineno">  196</span>    <span class="keywordtype">bool</span> ValidateData(<span class="keyword">const</span> T&amp; data)<span class="keyword"> const</span></div>
<div class="line"><a id="l00197" name="l00197"></a><span class="lineno">  197</span><span class="keyword">    </span>{</div>
<div class="line"><a id="l00198" name="l00198"></a><span class="lineno">  198</span>        <span class="keywordflow">if</span> (do_output_message_)</div>
<div class="line"><a id="l00199" name="l00199"></a><span class="lineno">  199</span>        {</div>
<div class="line"><a id="l00200" name="l00200"></a><span class="lineno">  200</span>            <a class="code hl_function" href="classdesignlab_1_1_cmd_i_o_utildocs#ab913a88b80ef7181aa23f9dce114e3fb">CmdIOUtil::InfoOutput</a>(<span class="stringliteral">&quot;Start data validation.&quot;</span>);</div>
<div class="line"><a id="l00201" name="l00201"></a><span class="lineno">  201</span>        }</div>
<div class="line"><a id="l00202" name="l00202"></a><span class="lineno">  202</span> </div>
<div class="line"><a id="l00203" name="l00203"></a><span class="lineno">  203</span>        <span class="keyword">const</span> <span class="keyword">auto</span> [is_valid, error_message] = validator_-&gt;Validate(data);</div>
<div class="line"><a id="l00204" name="l00204"></a><span class="lineno">  204</span> </div>
<div class="line"><a id="l00205" name="l00205"></a><span class="lineno">  205</span>        <span class="keywordflow">if</span> (!is_valid)</div>
<div class="line"><a id="l00206" name="l00206"></a><span class="lineno">  206</span>        {</div>
<div class="line"><a id="l00207" name="l00207"></a><span class="lineno">  207</span>            <span class="keywordflow">if</span> (do_output_message_)</div>
<div class="line"><a id="l00208" name="l00208"></a><span class="lineno">  208</span>            {</div>
<div class="line"><a id="l00209" name="l00209"></a><span class="lineno">  209</span>                <a class="code hl_function" href="classdesignlab_1_1_cmd_i_o_utildocs#a2fe5f9aa287a9bddd51a4b1321d9e2f6">CmdIOUtil::ErrorOutput</a>(<span class="stringliteral">&quot;Data validation failed.&quot;</span>);</div>
<div class="line"><a id="l00210" name="l00210"></a><span class="lineno">  210</span>                <a class="code hl_function" href="classdesignlab_1_1_cmd_i_o_utildocs#a563e04e0ce3cf7b6c988a94b887a74b9">CmdIOUtil::OutputNewLine</a>(1, <a class="code hl_enumvalue" href="namespacedesignlabdocs#a43f5ea9398e73bc5134e238b7e8c5645ae3587c730cc1aa530fa4ddc9c4204e97">OutputDetail::kError</a>);</div>
<div class="line"><a id="l00211" name="l00211"></a><span class="lineno">  211</span>                <a class="code hl_function" href="classdesignlab_1_1_cmd_i_o_utildocs#a2fe5f9aa287a9bddd51a4b1321d9e2f6">CmdIOUtil::ErrorOutput</a>(<span class="stringliteral">&quot;&lt;Reasons for Failure to Verify&gt;&quot;</span>);</div>
<div class="line"><a id="l00212" name="l00212"></a><span class="lineno">  212</span>                <a class="code hl_function" href="classdesignlab_1_1_cmd_i_o_utildocs#a2fe5f9aa287a9bddd51a4b1321d9e2f6">CmdIOUtil::ErrorOutput</a>(error_message);</div>
<div class="line"><a id="l00213" name="l00213"></a><span class="lineno">  213</span>                <a class="code hl_function" href="classdesignlab_1_1_cmd_i_o_utildocs#a563e04e0ce3cf7b6c988a94b887a74b9">CmdIOUtil::OutputNewLine</a>(1, <a class="code hl_enumvalue" href="namespacedesignlabdocs#a43f5ea9398e73bc5134e238b7e8c5645ae3587c730cc1aa530fa4ddc9c4204e97">OutputDetail::kError</a>);</div>
<div class="line"><a id="l00214" name="l00214"></a><span class="lineno">  214</span>            }</div>
<div class="line"><a id="l00215" name="l00215"></a><span class="lineno">  215</span> </div>
<div class="line"><a id="l00216" name="l00216"></a><span class="lineno">  216</span>            <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a id="l00217" name="l00217"></a><span class="lineno">  217</span>        }</div>
<div class="line"><a id="l00218" name="l00218"></a><span class="lineno">  218</span> </div>
<div class="line"><a id="l00219" name="l00219"></a><span class="lineno">  219</span>        <span class="keywordflow">if</span> (do_output_message_)</div>
<div class="line"><a id="l00220" name="l00220"></a><span class="lineno">  220</span>        {</div>
<div class="line"><a id="l00221" name="l00221"></a><span class="lineno">  221</span>            <a class="code hl_function" href="classdesignlab_1_1_cmd_i_o_utildocs#ab913a88b80ef7181aa23f9dce114e3fb">CmdIOUtil::InfoOutput</a>(<span class="stringliteral">&quot;Data validation succeeded.&quot;</span>);</div>
<div class="line"><a id="l00222" name="l00222"></a><span class="lineno">  222</span>        }</div>
<div class="line"><a id="l00223" name="l00223"></a><span class="lineno">  223</span> </div>
<div class="line"><a id="l00224" name="l00224"></a><span class="lineno">  224</span>        <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a id="l00225" name="l00225"></a><span class="lineno">  225</span>    }</div>
<div class="line"><a id="l00226" name="l00226"></a><span class="lineno">  226</span> </div>
<div class="line"><a id="l00227" name="l00227"></a><span class="lineno">  227</span>    <span class="keywordtype">bool</span> do_output_message_{ <span class="keyword">true</span> };</div>
<div class="line"><a id="l00228" name="l00228"></a><span class="lineno">  228</span> </div>
<div class="line"><a id="l00229" name="l00229"></a><span class="lineno">  229</span>    <span class="keyword">const</span> std::unique_ptr&lt;ITomlDataValidator&lt;T&gt;&gt; validator_;</div>
<div class="line"><a id="l00230" name="l00230"></a><span class="lineno">  230</span>};</div>
</div>
<div class="line"><a id="l00231" name="l00231"></a><span class="lineno">  231</span> </div>
<div class="line"><a id="l00232" name="l00232"></a><span class="lineno">  232</span>}  <span class="comment">// namespace designlab</span></div>
<div class="line"><a id="l00233" name="l00233"></a><span class="lineno">  233</span> </div>
<div class="line"><a id="l00234" name="l00234"></a><span class="lineno">  234</span> </div>
<div class="line"><a id="l00235" name="l00235"></a><span class="lineno">  235</span><span class="preprocessor">#endif  </span><span class="comment">// DESIGNLAB_TOML_FILE_IMPORTER_H_</span></div>
<div class="ttc" id="aclassdesignlab_1_1_cmd_i_o_utildocs_a0ebb5b245f90bcc0d1849400d1faa7d2"><div class="ttname"><a href="classdesignlab_1_1_cmd_i_o_utildocs#a0ebb5b245f90bcc0d1849400d1faa7d2">designlab::CmdIOUtil::SystemOutput</a></div><div class="ttdeci">static void SystemOutput(const std::string &amp;str)</div><div class="ttdoc">コマンドラインに文字を出力する関数．System用の出力．</div><div class="ttdef"><b>Definition</b> cmdio_util.h:103</div></div>
<div class="ttc" id="aclassdesignlab_1_1_cmd_i_o_utildocs_a2fe5f9aa287a9bddd51a4b1321d9e2f6"><div class="ttname"><a href="classdesignlab_1_1_cmd_i_o_utildocs#a2fe5f9aa287a9bddd51a4b1321d9e2f6">designlab::CmdIOUtil::ErrorOutput</a></div><div class="ttdeci">static void ErrorOutput(const std::string &amp;str)</div><div class="ttdoc">コマンドラインに文字を出力する関数．Error用の出力．</div><div class="ttdef"><b>Definition</b> cmdio_util.h:96</div></div>
<div class="ttc" id="aclassdesignlab_1_1_cmd_i_o_utildocs_a563e04e0ce3cf7b6c988a94b887a74b9"><div class="ttname"><a href="classdesignlab_1_1_cmd_i_o_utildocs#a563e04e0ce3cf7b6c988a94b887a74b9">designlab::CmdIOUtil::OutputNewLine</a></div><div class="ttdeci">static void OutputNewLine(int num, OutputDetail detail)</div><div class="ttdoc">コマンドラインで改行をする関数．</div><div class="ttdef"><b>Definition</b> cmdio_util.cpp:171</div></div>
<div class="ttc" id="aclassdesignlab_1_1_cmd_i_o_utildocs_aa27aa18b11d6199f27f82cfe97241336"><div class="ttname"><a href="classdesignlab_1_1_cmd_i_o_utildocs#aa27aa18b11d6199f27f82cfe97241336">designlab::CmdIOUtil::InputYesNo</a></div><div class="ttdeci">static bool InputYesNo(const std::string &amp;str=&quot;Are you sure?&quot;)</div><div class="ttdoc">yesかnoを入力させる関数．返り値で yes なら true，noなら falseを返す．   出力される文字列は，必ず OutputDetail::kSystem で出力される．</div><div class="ttdef"><b>Definition</b> cmdio_util.cpp:259</div></div>
<div class="ttc" id="aclassdesignlab_1_1_cmd_i_o_utildocs_ab913a88b80ef7181aa23f9dce114e3fb"><div class="ttname"><a href="classdesignlab_1_1_cmd_i_o_utildocs#ab913a88b80ef7181aa23f9dce114e3fb">designlab::CmdIOUtil::InfoOutput</a></div><div class="ttdeci">static void InfoOutput(const std::string &amp;str)</div><div class="ttdoc">コマンドラインに文字を出力する関数．Info用の出力．</div><div class="ttdef"><b>Definition</b> cmdio_util.h:82</div></div>
<div class="ttc" id="aclassdesignlab_1_1_i_toml_data_validatordocs"><div class="ttname"><a href="classdesignlab_1_1_i_toml_data_validatordocs">designlab::ITomlDataValidator</a></div><div class="ttdoc">TOMLファイルのデータの検証を行う処理のインターフェース．</div><div class="ttdef"><b>Definition</b> interface_toml_data_validator.h:20</div></div>
<div class="ttc" id="aclassdesignlab_1_1_toml_data_validator_always_truedocs"><div class="ttname"><a href="classdesignlab_1_1_toml_data_validator_always_truedocs">designlab::TomlDataValidatorAlwaysTrue</a></div><div class="ttdoc">常に trueを返す ITomlDataValidator の実装クラス．</div><div class="ttdef"><b>Definition</b> toml_data_validator_always_true.h:24</div></div>
<div class="ttc" id="aclassdesignlab_1_1_toml_file_exporterdocs"><div class="ttname"><a href="classdesignlab_1_1_toml_file_exporterdocs">designlab::TomlFileExporter</a></div><div class="ttdoc">TOMLファイルを出力するテンプレートクラス．</div><div class="ttdef"><b>Definition</b> toml_file_exporter.h:36</div></div>
<div class="ttc" id="aclassdesignlab_1_1_toml_file_exporterdocs_a095f0d7b33e267b1669a18aa6860522c"><div class="ttname"><a href="classdesignlab_1_1_toml_file_exporterdocs#a095f0d7b33e267b1669a18aa6860522c">designlab::TomlFileExporter::Export</a></div><div class="ttdeci">void Export(const std::string &amp;file_path, const T &amp;data)</div><div class="ttdoc">TOMLファイルを出力する．</div><div class="ttdef"><b>Definition</b> toml_file_exporter.h:41</div></div>
<div class="ttc" id="aclassdesignlab_1_1_toml_file_importerdocs"><div class="ttname"><a href="classdesignlab_1_1_toml_file_importerdocs">designlab::TomlFileImporter</a></div><div class="ttdoc">tomlファイルを読み込んで構造体に変換するテンプレートクラス．</div><div class="ttdef"><b>Definition</b> toml_file_importer.h:40</div></div>
<div class="ttc" id="aclassdesignlab_1_1_toml_file_importerdocs_a4960e633876bd88dc7433696943734e8"><div class="ttname"><a href="classdesignlab_1_1_toml_file_importerdocs#a4960e633876bd88dc7433696943734e8">designlab::TomlFileImporter::Import</a></div><div class="ttdeci">std::optional&lt; T &gt; Import(const std::string &amp;file_path) const</div><div class="ttdoc">指定したファイルパスのファイルを読み込み，構造体に変換する．</div><div class="ttdef"><b>Definition</b> toml_file_importer.h:50</div></div>
<div class="ttc" id="aclassdesignlab_1_1_toml_file_importerdocs_a8ca4fd7bec19dce42d1ab1dfc895ff88"><div class="ttname"><a href="classdesignlab_1_1_toml_file_importerdocs#a8ca4fd7bec19dce42d1ab1dfc895ff88">designlab::TomlFileImporter::ImportOrUseDefault</a></div><div class="ttdeci">T ImportOrUseDefault(const std::string &amp;file_path) const</div><div class="ttdoc">指定したファイルパスのファイルを読み込み，構造体に変換する． 読込に失敗した場合は，デフォルトの構造体を返す． また，読込に失敗した場合には， デフォルトの構造体をファイルに出力するかどうかをユーザに問...</div><div class="ttdef"><b>Definition</b> toml_file_importer.h:85</div></div>
<div class="ttc" id="acmdio__util_8hdocs"><div class="ttname"><a href="cmdio__util_8hdocs">cmdio_util.h</a></div></div>
<div class="ttc" id="aconceptdesignlab_1_1_has_from_tomldocs"><div class="ttname"><a href="conceptdesignlab_1_1_has_from_tomldocs">designlab::HasFromToml</a></div><div class="ttdoc">FromTomlを持つか判定するコンセプト．   toml::from&lt;T&gt;::from_toml()が定義されているかどうかを判定する．   また，デフォルトコンストラクタが実装されているかどうかも判...</div><div class="ttdef"><b>Definition</b> toml_file_importer.h:31</div></div>
<div class="ttc" id="aimplicit__metafunction__for__toml11_8hdocs"><div class="ttname"><a href="implicit__metafunction__for__toml11_8hdocs">implicit_metafunction_for_toml11.h</a></div></div>
<div class="ttc" id="ainterface__toml__data__validator_8hdocs"><div class="ttname"><a href="interface__toml__data__validator_8hdocs">interface_toml_data_validator.h</a></div></div>
<div class="ttc" id="anamespacedesignlabdocs"><div class="ttname"><a href="namespacedesignlabdocs">designlab</a></div><div class="ttdef"><b>Definition</b> abstract_dxlib_gui.cpp:16</div></div>
<div class="ttc" id="anamespacedesignlabdocs_a43f5ea9398e73bc5134e238b7e8c5645a2c9d4d4ca70df56c762f0140f57dbdfb"><div class="ttname"><a href="namespacedesignlabdocs#a43f5ea9398e73bc5134e238b7e8c5645a2c9d4d4ca70df56c762f0140f57dbdfb">designlab::OutputDetail::kSystem</a></div><div class="ttdeci">@ kSystem</div><div class="ttdoc">システムメッセージ，常に出力する．</div></div>
<div class="ttc" id="anamespacedesignlabdocs_a43f5ea9398e73bc5134e238b7e8c5645ae3587c730cc1aa530fa4ddc9c4204e97"><div class="ttname"><a href="namespacedesignlabdocs#a43f5ea9398e73bc5134e238b7e8c5645ae3587c730cc1aa530fa4ddc9c4204e97">designlab::OutputDetail::kError</a></div><div class="ttdeci">@ kError</div><div class="ttdoc">エラーメッセージ．</div></div>
<div class="ttc" id="atoml__data__validator__always__true_8hdocs"><div class="ttname"><a href="toml__data__validator__always__true_8hdocs">toml_data_validator_always_true.h</a></div></div>
<div class="ttc" id="atoml__file__exporter_8hdocs"><div class="ttname"><a href="toml__file__exporter_8hdocs">toml_file_exporter.h</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_65b03a49640d0599dba701447d580643docs">hasegawa</a></li><li class="navelem"><a class="el" href="dir_2854940d141de6d3c7cee6483e7afda9docs">Desktop</a></li><li class="navelem"><a class="el" href="dir_fad4873fd0f485db7102df865d883d5cdocs">main</a></li><li class="navelem"><a class="el" href="dir_227eda1db808a252df8518c263632a71docs">program</a></li><li class="navelem"><a class="el" href="dir_c48eef75fce7d1d05a2392783bd08b15docs">gait-generation-by-graph-search</a></li><li class="navelem"><a class="el" href="dir_6970d783dbb606469f8f14a039e83820docs">DesignLab</a></li><li class="navelem"><a class="el" href="toml__file__importer_8hdocs">toml_file_importer.h</a></li>
    <li class="footer">構築: <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.8 </li>
  </ul>
</div>
</body>
</html>
