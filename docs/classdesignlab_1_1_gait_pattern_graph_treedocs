<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="ja">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.8"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>GaitGeneration by Graph Search: designlab::GaitPatternGraphTree クラス</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">GaitGeneration by Graph Search
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- 構築: Doxygen 1.9.8 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search/",'docs');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','検索');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('classdesignlab_1_1_gait_pattern_graph_treedocs',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">読み取り中…</div>
<div class="SRStatus" id="Searching">検索中…</div>
<div class="SRStatus" id="NoMatches">一致する文字列を見つけられません</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">公開メンバ関数</a> &#124;
<a href="classdesignlab_1_1_gait_pattern_graph_tree-membersdocs">全メンバ一覧</a>  </div>
  <div class="headertitle"><div class="title">designlab::GaitPatternGraphTree クラス<span class="mlabels"><span class="mlabel">final</span></span></div></div>
</div><!--header-->
<div class="contents">

<p><a class="el" href="structdesignlab_1_1_robot_state_nodedocs" title="グラフ構造のためのノード(頂点)．旧名 LNODE">RobotStateNode</a> 構造体をノードとする木構造のグラフのクラス．  
 <a href="classdesignlab_1_1_gait_pattern_graph_treedocs#details">[詳解]</a></p>

<p><code>#include &lt;<a class="el" href="gait__pattern__graph__tree_8h_sourcedocs">gait_pattern_graph_tree.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
公開メンバ関数</h2></td></tr>
<tr class="memitem:a949f0a8b3ffbb4b560008055c30436e0" id="r_a949f0a8b3ffbb4b560008055c30436e0"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_gait_pattern_graph_treedocs#a949f0a8b3ffbb4b560008055c30436e0">GaitPatternGraphTree</a> (const int graph_max_size)</td></tr>
<tr class="memdesc:a949f0a8b3ffbb4b560008055c30436e0"><td class="mdescLeft">&#160;</td><td class="mdescRight">コンストラクタ． <br  />
 ノード数の最大値を指定する．  <br /></td></tr>
<tr class="separator:a949f0a8b3ffbb4b560008055c30436e0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af2594414411d9eb5e9103d30dffe9714" id="r_af2594414411d9eb5e9103d30dffe9714"><td class="memItemLeft" align="right" valign="top">constexpr int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_gait_pattern_graph_treedocs#af2594414411d9eb5e9103d30dffe9714">GetGraphSize</a> () const</td></tr>
<tr class="memdesc:af2594414411d9eb5e9103d30dffe9714"><td class="mdescLeft">&#160;</td><td class="mdescRight">グラフのノードの総数を返す．  <br /></td></tr>
<tr class="separator:af2594414411d9eb5e9103d30dffe9714"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5880ef9bfbc41d440c38982aefb08070" id="r_a5880ef9bfbc41d440c38982aefb08070"><td class="memItemLeft" align="right" valign="top">constexpr bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_gait_pattern_graph_treedocs#a5880ef9bfbc41d440c38982aefb08070">IsEmpty</a> () const</td></tr>
<tr class="memdesc:a5880ef9bfbc41d440c38982aefb08070"><td class="mdescLeft">&#160;</td><td class="mdescRight">グラフが空かどうかを返す．  <br /></td></tr>
<tr class="separator:a5880ef9bfbc41d440c38982aefb08070"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adfa3cd34663f368fe3e9e76962b38898" id="r_adfa3cd34663f368fe3e9e76962b38898"><td class="memItemLeft" align="right" valign="top">constexpr bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_gait_pattern_graph_treedocs#adfa3cd34663f368fe3e9e76962b38898">HasRoot</a> () const</td></tr>
<tr class="memdesc:adfa3cd34663f368fe3e9e76962b38898"><td class="mdescLeft">&#160;</td><td class="mdescRight">グラフが根ノードを持つかどうかを返す． <br  />
 根ノードとは，親を持たないノードのこと． <br  />
 一番最初に追加するノードは必ず根になるため， 根を持つかどうかはノードの総数が0でないかどうかで判定できる．  <br /></td></tr>
<tr class="separator:adfa3cd34663f368fe3e9e76962b38898"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a73bf65cc639ab02f0356f1ee6b1c6f10" id="r_a73bf65cc639ab02f0356f1ee6b1c6f10"><td class="memItemLeft" align="right" valign="top">constexpr int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_gait_pattern_graph_treedocs#a73bf65cc639ab02f0356f1ee6b1c6f10">GetRootIndex</a> () const</td></tr>
<tr class="memdesc:a73bf65cc639ab02f0356f1ee6b1c6f10"><td class="mdescLeft">&#160;</td><td class="mdescRight">グラフの根ノードのインデックスを返す． <br  />
 ノードがない場合を考慮していないため， <a class="el" href="classdesignlab_1_1_gait_pattern_graph_treedocs#adfa3cd34663f368fe3e9e76962b38898" title="グラフが根ノードを持つかどうかを返す．   根ノードとは，親を持たないノードのこと．   一番最初に追加するノードは必ず根になるため， 根を持つかどうかはノードの総数が0でないかどうかで判定できる．">HasRoot()</a>で根ノードを持つかどうかを確認すること． <br  />
 一番最初に追加されたノードは必ず根ノードになるため， 根ノードのインデックスは0で固定される．  <br /></td></tr>
<tr class="separator:a73bf65cc639ab02f0356f1ee6b1c6f10"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a58dc796c0ec1334efff0cbcaee77eb6e" id="r_a58dc796c0ec1334efff0cbcaee77eb6e"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="structdesignlab_1_1_robot_state_nodedocs">RobotStateNode</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_gait_pattern_graph_treedocs#a58dc796c0ec1334efff0cbcaee77eb6e">GetRootNode</a> () const</td></tr>
<tr class="memdesc:a58dc796c0ec1334efff0cbcaee77eb6e"><td class="mdescLeft">&#160;</td><td class="mdescRight">グラフの根ノードの参照を返す．  <br /></td></tr>
<tr class="separator:a58dc796c0ec1334efff0cbcaee77eb6e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac9d24a79c7d5e3db0eb943cd9ecd446d" id="r_ac9d24a79c7d5e3db0eb943cd9ecd446d"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="structdesignlab_1_1_robot_state_nodedocs">RobotStateNode</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_gait_pattern_graph_treedocs#ac9d24a79c7d5e3db0eb943cd9ecd446d">GetNode</a> (const int index) const</td></tr>
<tr class="memdesc:ac9d24a79c7d5e3db0eb943cd9ecd446d"><td class="mdescLeft">&#160;</td><td class="mdescRight">グラフのノードの参照を返す．  <br /></td></tr>
<tr class="separator:ac9d24a79c7d5e3db0eb943cd9ecd446d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7d5f0968cb4718d9baf449222e0ec7d8" id="r_a7d5f0968cb4718d9baf449222e0ec7d8"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="structdesignlab_1_1_robot_state_nodedocs">RobotStateNode</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_gait_pattern_graph_treedocs#a7d5f0968cb4718d9baf449222e0ec7d8">GetParentNode</a> (const int index, const int depth) const</td></tr>
<tr class="memdesc:a7d5f0968cb4718d9baf449222e0ec7d8"><td class="mdescLeft">&#160;</td><td class="mdescRight">指定したノードの親ノードの参照を返す．depthは親ノードの深さを指定する．  <br /></td></tr>
<tr class="separator:a7d5f0968cb4718d9baf449222e0ec7d8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a69eaf1ffd9772f8ea1063c36ee7bbcaa" id="r_a69eaf1ffd9772f8ea1063c36ee7bbcaa"><td class="memItemLeft" align="right" valign="top">const int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_gait_pattern_graph_treedocs#a69eaf1ffd9772f8ea1063c36ee7bbcaa">GetParentNodeIndex</a> (const int index, const int depth) const</td></tr>
<tr class="memdesc:a69eaf1ffd9772f8ea1063c36ee7bbcaa"><td class="mdescLeft">&#160;</td><td class="mdescRight">指定したノードの親ノードの参照を返す．depthは親ノードの深さを指定する．  <br /></td></tr>
<tr class="separator:a69eaf1ffd9772f8ea1063c36ee7bbcaa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac0d2e4ec3bd05e0092f8f27b34e88908" id="r_ac0d2e4ec3bd05e0092f8f27b34e88908"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_gait_pattern_graph_treedocs#ac0d2e4ec3bd05e0092f8f27b34e88908">AddNode</a> (const <a class="el" href="structdesignlab_1_1_robot_state_nodedocs">RobotStateNode</a> &amp;node)</td></tr>
<tr class="memdesc:ac0d2e4ec3bd05e0092f8f27b34e88908"><td class="mdescLeft">&#160;</td><td class="mdescRight">ノードを追加する． <br  />
 追加するノードは親ノードのインデックスと，depthの指定が適切にされている必要がある． <br  />
 これらが適切にされていない場合，アサーションに引っかかる． <br  />
 また，あらかじめ確保したノード数を超えて追加しようとするとアサーションに引っかかる． <br  />
 この条件下では一番最初に追加されるノードは必ず根ノード(親を持たず，深さ0)になる，  <br /></td></tr>
<tr class="separator:ac0d2e4ec3bd05e0092f8f27b34e88908"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3a2e1f65d243cc24527387bc52a651ae" id="r_a3a2e1f65d243cc24527387bc52a651ae"><td class="memItemLeft" align="right" valign="top"><a id="a3a2e1f65d243cc24527387bc52a651ae" name="a3a2e1f65d243cc24527387bc52a651ae"></a>
constexpr void&#160;</td><td class="memItemRight" valign="bottom"><b>Reset</b> ()</td></tr>
<tr class="memdesc:a3a2e1f65d243cc24527387bc52a651ae"><td class="mdescLeft">&#160;</td><td class="mdescRight">グラフをリセットする． <br /></td></tr>
<tr class="separator:a3a2e1f65d243cc24527387bc52a651ae"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7d02defb2f3e78885277442fb32282d7" id="r_a7d02defb2f3e78885277442fb32282d7"><td class="memItemLeft" align="right" valign="top">std::vector&lt; float &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_gait_pattern_graph_treedocs#a7d02defb2f3e78885277442fb32282d7">GetCoMVerticalTrajectory</a> (const int index) const</td></tr>
<tr class="memdesc:a7d02defb2f3e78885277442fb32282d7"><td class="mdescLeft">&#160;</td><td class="mdescRight">指定したノードの重心の上下移動軌跡を返す．  <br /></td></tr>
<tr class="separator:a7d02defb2f3e78885277442fb32282d7"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">詳解</h2>
<div class="textblock"><p><a class="el" href="structdesignlab_1_1_robot_state_nodedocs" title="グラフ構造のためのノード(頂点)．旧名 LNODE">RobotStateNode</a> 構造体をノードとする木構造のグラフのクラス． </p>
<p>論文でいうところの歩容パターングラフ． </p>
</div><h2 class="groupheader">構築子と解体子</h2>
<a id="a949f0a8b3ffbb4b560008055c30436e0" name="a949f0a8b3ffbb4b560008055c30436e0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a949f0a8b3ffbb4b560008055c30436e0">&#9670;&#160;</a></span>GaitPatternGraphTree()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">designlab::GaitPatternGraphTree::GaitPatternGraphTree </td>
          <td>(</td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>graph_max_size</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">explicit</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>コンストラクタ． <br  />
 ノード数の最大値を指定する． </p>
<dl class="params"><dt>引数</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">graph_max_size</td><td>ノード数の最大値． </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<h2 class="groupheader">関数詳解</h2>
<a id="ac0d2e4ec3bd05e0092f8f27b34e88908" name="ac0d2e4ec3bd05e0092f8f27b34e88908"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac0d2e4ec3bd05e0092f8f27b34e88908">&#9670;&#160;</a></span>AddNode()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void designlab::GaitPatternGraphTree::AddNode </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structdesignlab_1_1_robot_state_nodedocs">RobotStateNode</a> &amp;&#160;</td>
          <td class="paramname"><em>node</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>ノードを追加する． <br  />
 追加するノードは親ノードのインデックスと，depthの指定が適切にされている必要がある． <br  />
 これらが適切にされていない場合，アサーションに引っかかる． <br  />
 また，あらかじめ確保したノード数を超えて追加しようとするとアサーションに引っかかる． <br  />
 この条件下では一番最初に追加されるノードは必ず根ノード(親を持たず，深さ0)になる， </p>
<dl class="params"><dt>引数</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">node</td><td>追加するノード． </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
被呼び出し関係図:</div>
<div class="dyncontent">
<div class="center"><img src="classdesignlab_1_1_gait_pattern_graph_tree_ac0d2e4ec3bd05e0092f8f27b34e88908_icgraph.png" border="0" usemap="#aclassdesignlab_1_1_gait_pattern_graph_tree_ac0d2e4ec3bd05e0092f8f27b34e88908_icgraph" alt=""/></div>
<map name="aclassdesignlab_1_1_gait_pattern_graph_tree_ac0d2e4ec3bd05e0092f8f27b34e88908_icgraph" id="aclassdesignlab_1_1_gait_pattern_graph_tree_ac0d2e4ec3bd05e0092f8f27b34e88908_icgraph">
<area shape="rect" title="ノードを追加する． &#160;&#160;追加するノードは親ノードのインデックスと，depthの指定が適切にされている必要がある． &#160;&#160;これらが適切にされていない場合，アサーションに引っかかる． &#160;&#160;また，あらかじめ確保..." alt="" coords="572,64,757,107"/>
<area shape="rect" href="classdesignlab_1_1_graph_tree_creatordocs#a9a8a2cff8af6b99342e88c5cb1cd52ab" title="歩容パターングラフを作成する．" alt="" coords="315,5,501,48"/>
<area shape="poly" title=" " alt="" coords="556,63,501,51,502,45,558,58"/>
<area shape="rect" href="classdesignlab_1_1_gait_pattern_generator_threaddocs#af6729bdafbd310f762733e7fa10f8df5" title="グラフ探索を行い，次の動作として最適なノードを返す．" alt="" coords="5,35,244,77"/>
<area shape="poly" title=" " alt="" coords="556,82,244,65,244,60,556,77"/>
<area shape="rect" href="classdesignlab_1_1_gait_pattern_generator_basicdocs#a3b957e224a453c5fc85bd15684560043" title="グラフ探索を行い，次の動作として最適なノードを返す．" alt="" coords="292,123,524,165"/>
<area shape="poly" title=" " alt="" coords="558,112,505,125,504,119,556,107"/>
<area shape="poly" title=" " alt="" coords="300,41,245,46,244,41,299,35"/>
</map>
</div>

</div>
</div>
<a id="a7d02defb2f3e78885277442fb32282d7" name="a7d02defb2f3e78885277442fb32282d7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7d02defb2f3e78885277442fb32282d7">&#9670;&#160;</a></span>GetCoMVerticalTrajectory()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt; float &gt; designlab::GaitPatternGraphTree::GetCoMVerticalTrajectory </td>
          <td>(</td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>index</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>指定したノードの重心の上下移動軌跡を返す． </p>
<dl class="params"><dt>引数</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">index</td><td>参照したいノードのインデックス． 最大ノード数を超える数を指定するとアサーションに引っかかる． </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>戻り値</dt><dd>指定したノードの重心の上下移動軌跡． </dd></dl>
<div class="dynheader">
被呼び出し関係図:</div>
<div class="dyncontent">
<div class="center"><img src="classdesignlab_1_1_gait_pattern_graph_tree_a7d02defb2f3e78885277442fb32282d7_icgraph.png" border="0" usemap="#aclassdesignlab_1_1_gait_pattern_graph_tree_a7d02defb2f3e78885277442fb32282d7_icgraph" alt=""/></div>
<map name="aclassdesignlab_1_1_gait_pattern_graph_tree_a7d02defb2f3e78885277442fb32282d7_icgraph" id="aclassdesignlab_1_1_gait_pattern_graph_tree_a7d02defb2f3e78885277442fb32282d7_icgraph">
<area shape="rect" title="指定したノードの重心の上下移動軌跡を返す．" alt="" coords="259,5,462,48"/>
<area shape="rect" href="classdesignlab_1_1_graph_searcher_straight_movedocs#a64643a2293909dc6b0166a916c5b26ee" title="グラフを受け取り，その中から最適な次の動作を出力する．" alt="" coords="5,5,211,48"/>
<area shape="poly" title=" " alt="" coords="243,29,211,29,211,24,243,24"/>
</map>
</div>

</div>
</div>
<a id="af2594414411d9eb5e9103d30dffe9714" name="af2594414411d9eb5e9103d30dffe9714"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af2594414411d9eb5e9103d30dffe9714">&#9670;&#160;</a></span>GetGraphSize()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr int designlab::GaitPatternGraphTree::GetGraphSize </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>グラフのノードの総数を返す． </p>
<dl class="section return"><dt>戻り値</dt><dd>グラフのノードの総数． </dd></dl>
<div class="dynheader">
被呼び出し関係図:</div>
<div class="dyncontent">
<div class="center"><img src="classdesignlab_1_1_gait_pattern_graph_tree_af2594414411d9eb5e9103d30dffe9714_icgraph.png" border="0" usemap="#aclassdesignlab_1_1_gait_pattern_graph_tree_af2594414411d9eb5e9103d30dffe9714_icgraph" alt=""/></div>
<map name="aclassdesignlab_1_1_gait_pattern_graph_tree_af2594414411d9eb5e9103d30dffe9714_icgraph" id="aclassdesignlab_1_1_gait_pattern_graph_tree_af2594414411d9eb5e9103d30dffe9714_icgraph">
<area shape="rect" title="グラフのノードの総数を返す．" alt="" coords="545,123,730,165"/>
<area shape="rect" href="classdesignlab_1_1_graph_tree_creatordocs#a9a8a2cff8af6b99342e88c5cb1cd52ab" title="歩容パターングラフを作成する．" alt="" coords="301,5,488,48"/>
<area shape="poly" title=" " alt="" coords="586,117,496,69,454,51,456,46,498,64,589,112"/>
<area shape="rect" href="classdesignlab_1_1_gait_pattern_generator_threaddocs#af6729bdafbd310f762733e7fa10f8df5" title="グラフ探索を行い，次の動作として最適なノードを返す．" alt="" coords="5,35,244,77"/>
<area shape="poly" title=" " alt="" coords="534,121,497,113,366,91,244,73,245,68,367,86,497,108,535,116"/>
<area shape="rect" href="classdesignlab_1_1_graph_searcher_spot_turndocs#a14d0f85dce3acf5c7715e52f03cb4701" title="グラフを受け取り，その中から最適な次の動作を出力する．" alt="" coords="303,123,486,165"/>
<area shape="poly" title=" " alt="" coords="530,147,486,147,486,141,530,141"/>
<area shape="rect" href="classdesignlab_1_1_graph_searcher_straight_movedocs#a64643a2293909dc6b0166a916c5b26ee" title="グラフを受け取り，その中から最適な次の動作を出力する．" alt="" coords="292,189,497,232"/>
<area shape="poly" title=" " alt="" coords="543,173,476,191,474,186,542,167"/>
<area shape="rect" href="classdesignlab_1_1_graph_searcher_turndocs#ac22fbad22f153e4d367575fe6cc55197" title="グラフを受け取り，その中から最適な次の動作を出力する．" alt="" coords="309,256,480,299"/>
<area shape="poly" title=" " alt="" coords="601,177,554,213,498,246,472,258,470,253,496,242,551,208,598,173"/>
<area shape="poly" title=" " alt="" coords="286,41,244,46,244,40,285,36"/>
</map>
</div>

</div>
</div>
<a id="ac9d24a79c7d5e3db0eb943cd9ecd446d" name="ac9d24a79c7d5e3db0eb943cd9ecd446d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac9d24a79c7d5e3db0eb943cd9ecd446d">&#9670;&#160;</a></span>GetNode()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="structdesignlab_1_1_robot_state_nodedocs">RobotStateNode</a> &amp; designlab::GaitPatternGraphTree::GetNode </td>
          <td>(</td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>index</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>グラフのノードの参照を返す． </p>
<dl class="params"><dt>引数</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">index</td><td>参照したいノードのインデックス． 最大ノード数を超える数を指定するとアサーションに引っかかる． </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>戻り値</dt><dd>インデックスで指定したノードの参照． </dd></dl>
<div class="dynheader">
被呼び出し関係図:</div>
<div class="dyncontent">
<div class="center"><img src="classdesignlab_1_1_gait_pattern_graph_tree_ac9d24a79c7d5e3db0eb943cd9ecd446d_icgraph.png" border="0" usemap="#aclassdesignlab_1_1_gait_pattern_graph_tree_ac9d24a79c7d5e3db0eb943cd9ecd446d_icgraph" alt=""/></div>
<map name="aclassdesignlab_1_1_gait_pattern_graph_tree_ac9d24a79c7d5e3db0eb943cd9ecd446d_icgraph" id="aclassdesignlab_1_1_gait_pattern_graph_tree_ac9d24a79c7d5e3db0eb943cd9ecd446d_icgraph">
<area shape="rect" title="グラフのノードの参照を返す．" alt="" coords="545,123,730,165"/>
<area shape="rect" href="classdesignlab_1_1_graph_tree_creatordocs#a9a8a2cff8af6b99342e88c5cb1cd52ab" title="歩容パターングラフを作成する．" alt="" coords="301,5,488,48"/>
<area shape="poly" title=" " alt="" coords="586,117,496,69,454,51,456,46,498,64,589,112"/>
<area shape="rect" href="classdesignlab_1_1_gait_pattern_generator_threaddocs#af6729bdafbd310f762733e7fa10f8df5" title="グラフ探索を行い，次の動作として最適なノードを返す．" alt="" coords="5,35,244,77"/>
<area shape="poly" title=" " alt="" coords="534,121,497,113,366,91,244,73,245,68,367,86,497,108,535,116"/>
<area shape="rect" href="classdesignlab_1_1_graph_searcher_spot_turndocs#a14d0f85dce3acf5c7715e52f03cb4701" title="グラフを受け取り，その中から最適な次の動作を出力する．" alt="" coords="303,123,486,165"/>
<area shape="poly" title=" " alt="" coords="530,147,486,147,486,141,530,141"/>
<area shape="rect" href="classdesignlab_1_1_graph_searcher_straight_movedocs#a64643a2293909dc6b0166a916c5b26ee" title="グラフを受け取り，その中から最適な次の動作を出力する．" alt="" coords="292,189,497,232"/>
<area shape="poly" title=" " alt="" coords="543,173,476,191,474,186,542,167"/>
<area shape="rect" href="classdesignlab_1_1_graph_searcher_turndocs#ac22fbad22f153e4d367575fe6cc55197" title="グラフを受け取り，その中から最適な次の動作を出力する．" alt="" coords="309,256,480,299"/>
<area shape="poly" title=" " alt="" coords="601,177,554,213,498,246,472,258,470,253,496,242,551,208,598,173"/>
<area shape="poly" title=" " alt="" coords="286,41,244,46,244,40,285,36"/>
</map>
</div>

</div>
</div>
<a id="a7d5f0968cb4718d9baf449222e0ec7d8" name="a7d5f0968cb4718d9baf449222e0ec7d8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7d5f0968cb4718d9baf449222e0ec7d8">&#9670;&#160;</a></span>GetParentNode()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="structdesignlab_1_1_robot_state_nodedocs">RobotStateNode</a> &amp; designlab::GaitPatternGraphTree::GetParentNode </td>
          <td>(</td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>index</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>depth</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>指定したノードの親ノードの参照を返す．depthは親ノードの深さを指定する． </p>
<dl class="params"><dt>引数</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">index</td><td>参照したいノードのインデックス． 最大ノード数を超える数を指定するとアサーションに引っかかる． </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">depth</td><td>親ノードの深さ． </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>戻り値</dt><dd>インデックスで指定したノードの親ノードの参照． </dd></dl>
<div class="dynheader">
被呼び出し関係図:</div>
<div class="dyncontent">
<div class="center"><img src="classdesignlab_1_1_gait_pattern_graph_tree_a7d5f0968cb4718d9baf449222e0ec7d8_icgraph.png" border="0" usemap="#aclassdesignlab_1_1_gait_pattern_graph_tree_a7d5f0968cb4718d9baf449222e0ec7d8_icgraph" alt=""/></div>
<map name="aclassdesignlab_1_1_gait_pattern_graph_tree_a7d5f0968cb4718d9baf449222e0ec7d8_icgraph" id="aclassdesignlab_1_1_gait_pattern_graph_tree_a7d5f0968cb4718d9baf449222e0ec7d8_icgraph">
<area shape="rect" title="指定したノードの親ノードの参照を返す．depthは親ノードの深さを指定する．" alt="" coords="259,72,444,115"/>
<area shape="rect" href="classdesignlab_1_1_graph_searcher_spot_turndocs#a14d0f85dce3acf5c7715e52f03cb4701" title="グラフを受け取り，その中から最適な次の動作を出力する．" alt="" coords="17,5,199,48"/>
<area shape="poly" title=" " alt="" coords="256,70,188,51,189,46,257,65"/>
<area shape="rect" href="classdesignlab_1_1_graph_searcher_straight_movedocs#a64643a2293909dc6b0166a916c5b26ee" title="グラフを受け取り，その中から最適な次の動作を出力する．" alt="" coords="5,72,211,115"/>
<area shape="poly" title=" " alt="" coords="243,96,211,96,211,91,243,91"/>
<area shape="rect" href="classdesignlab_1_1_graph_searcher_turndocs#ac22fbad22f153e4d367575fe6cc55197" title="グラフを受け取り，その中から最適な次の動作を出力する．" alt="" coords="22,139,194,181"/>
<area shape="poly" title=" " alt="" coords="257,122,189,141,188,135,256,117"/>
</map>
</div>

</div>
</div>
<a id="a69eaf1ffd9772f8ea1063c36ee7bbcaa" name="a69eaf1ffd9772f8ea1063c36ee7bbcaa"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a69eaf1ffd9772f8ea1063c36ee7bbcaa">&#9670;&#160;</a></span>GetParentNodeIndex()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const int designlab::GaitPatternGraphTree::GetParentNodeIndex </td>
          <td>(</td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>index</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>depth</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>指定したノードの親ノードの参照を返す．depthは親ノードの深さを指定する． </p>
<dl class="params"><dt>引数</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">index</td><td>参照したいノードのインデックス． 最大ノード数を超える数を指定するとアサーションに引っかかる． </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">depth</td><td>親ノードの深さ． </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>戻り値</dt><dd>indexで指定したノードの親ノードのインデックス． </dd></dl>

</div>
</div>
<a id="a73bf65cc639ab02f0356f1ee6b1c6f10" name="a73bf65cc639ab02f0356f1ee6b1c6f10"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a73bf65cc639ab02f0356f1ee6b1c6f10">&#9670;&#160;</a></span>GetRootIndex()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr int designlab::GaitPatternGraphTree::GetRootIndex </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>グラフの根ノードのインデックスを返す． <br  />
 ノードがない場合を考慮していないため， <a class="el" href="classdesignlab_1_1_gait_pattern_graph_treedocs#adfa3cd34663f368fe3e9e76962b38898" title="グラフが根ノードを持つかどうかを返す．   根ノードとは，親を持たないノードのこと．   一番最初に追加するノードは必ず根になるため， 根を持つかどうかはノードの総数が0でないかどうかで判定できる．">HasRoot()</a>で根ノードを持つかどうかを確認すること． <br  />
 一番最初に追加されたノードは必ず根ノードになるため， 根ノードのインデックスは0で固定される． </p>
<dl class="section return"><dt>戻り値</dt><dd>グラフの根ノードのインデックス． </dd></dl>

</div>
</div>
<a id="a58dc796c0ec1334efff0cbcaee77eb6e" name="a58dc796c0ec1334efff0cbcaee77eb6e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a58dc796c0ec1334efff0cbcaee77eb6e">&#9670;&#160;</a></span>GetRootNode()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="structdesignlab_1_1_robot_state_nodedocs">RobotStateNode</a> &amp; designlab::GaitPatternGraphTree::GetRootNode </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>グラフの根ノードの参照を返す． </p>
<dl class="section return"><dt>戻り値</dt><dd>const <a class="el" href="structdesignlab_1_1_robot_state_nodedocs" title="グラフ構造のためのノード(頂点)．旧名 LNODE">RobotStateNode</a>&amp; グラフの根ノードの参照． </dd></dl>
<div class="dynheader">
被呼び出し関係図:</div>
<div class="dyncontent">
<div class="center"><img src="classdesignlab_1_1_gait_pattern_graph_tree_a58dc796c0ec1334efff0cbcaee77eb6e_icgraph.png" border="0" usemap="#aclassdesignlab_1_1_gait_pattern_graph_tree_a58dc796c0ec1334efff0cbcaee77eb6e_icgraph" alt=""/></div>
<map name="aclassdesignlab_1_1_gait_pattern_graph_tree_a58dc796c0ec1334efff0cbcaee77eb6e_icgraph" id="aclassdesignlab_1_1_gait_pattern_graph_tree_a58dc796c0ec1334efff0cbcaee77eb6e_icgraph">
<area shape="rect" title="グラフの根ノードの参照を返す．" alt="" coords="259,72,444,115"/>
<area shape="rect" href="classdesignlab_1_1_graph_searcher_spot_turndocs#a14d0f85dce3acf5c7715e52f03cb4701" title="グラフを受け取り，その中から最適な次の動作を出力する．" alt="" coords="17,5,199,48"/>
<area shape="poly" title=" " alt="" coords="256,70,188,51,189,46,257,65"/>
<area shape="rect" href="classdesignlab_1_1_graph_searcher_straight_movedocs#a64643a2293909dc6b0166a916c5b26ee" title="グラフを受け取り，その中から最適な次の動作を出力する．" alt="" coords="5,72,211,115"/>
<area shape="poly" title=" " alt="" coords="243,96,211,96,211,91,243,91"/>
<area shape="rect" href="classdesignlab_1_1_graph_searcher_turndocs#ac22fbad22f153e4d367575fe6cc55197" title="グラフを受け取り，その中から最適な次の動作を出力する．" alt="" coords="22,139,194,181"/>
<area shape="poly" title=" " alt="" coords="257,122,189,141,188,135,256,117"/>
</map>
</div>

</div>
</div>
<a id="adfa3cd34663f368fe3e9e76962b38898" name="adfa3cd34663f368fe3e9e76962b38898"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adfa3cd34663f368fe3e9e76962b38898">&#9670;&#160;</a></span>HasRoot()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr bool designlab::GaitPatternGraphTree::HasRoot </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>グラフが根ノードを持つかどうかを返す． <br  />
 根ノードとは，親を持たないノードのこと． <br  />
 一番最初に追加するノードは必ず根になるため， 根を持つかどうかはノードの総数が0でないかどうかで判定できる． </p>
<dl class="retval"><dt>戻り値</dt><dd>
  <table class="retval">
    <tr><td class="paramname">true</td><td>グラフが根ノードを持つ． </td></tr>
    <tr><td class="paramname">false</td><td>グラフが根ノードを持たない． </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
被呼び出し関係図:</div>
<div class="dyncontent">
<div class="center"><img src="classdesignlab_1_1_gait_pattern_graph_tree_adfa3cd34663f368fe3e9e76962b38898_icgraph.png" border="0" usemap="#aclassdesignlab_1_1_gait_pattern_graph_tree_adfa3cd34663f368fe3e9e76962b38898_icgraph" alt=""/></div>
<map name="aclassdesignlab_1_1_gait_pattern_graph_tree_adfa3cd34663f368fe3e9e76962b38898_icgraph" id="aclassdesignlab_1_1_gait_pattern_graph_tree_adfa3cd34663f368fe3e9e76962b38898_icgraph">
<area shape="rect" title="グラフが根ノードを持つかどうかを返す． &#160;&#160;根ノードとは，親を持たないノードのこと． &#160;&#160;一番最初に追加するノードは必ず根になるため， 根を持つかどうかはノードの総数が0でないかどうかで判定できる．" alt="" coords="259,72,444,115"/>
<area shape="rect" href="classdesignlab_1_1_graph_searcher_spot_turndocs#a14d0f85dce3acf5c7715e52f03cb4701" title="グラフを受け取り，その中から最適な次の動作を出力する．" alt="" coords="17,5,199,48"/>
<area shape="poly" title=" " alt="" coords="256,70,188,51,189,46,257,65"/>
<area shape="rect" href="classdesignlab_1_1_graph_searcher_straight_movedocs#a64643a2293909dc6b0166a916c5b26ee" title="グラフを受け取り，その中から最適な次の動作を出力する．" alt="" coords="5,72,211,115"/>
<area shape="poly" title=" " alt="" coords="243,96,211,96,211,91,243,91"/>
<area shape="rect" href="classdesignlab_1_1_graph_searcher_turndocs#ac22fbad22f153e4d367575fe6cc55197" title="グラフを受け取り，その中から最適な次の動作を出力する．" alt="" coords="22,139,194,181"/>
<area shape="poly" title=" " alt="" coords="257,122,189,141,188,135,256,117"/>
</map>
</div>

</div>
</div>
<a id="a5880ef9bfbc41d440c38982aefb08070" name="a5880ef9bfbc41d440c38982aefb08070"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5880ef9bfbc41d440c38982aefb08070">&#9670;&#160;</a></span>IsEmpty()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr bool designlab::GaitPatternGraphTree::IsEmpty </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>グラフが空かどうかを返す． </p>
<dl class="retval"><dt>戻り値</dt><dd>
  <table class="retval">
    <tr><td class="paramname">true</td><td>グラフが空． </td></tr>
    <tr><td class="paramname">false</td><td>グラフが空でない． </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
被呼び出し関係図:</div>
<div class="dyncontent">
<div class="center"><img src="classdesignlab_1_1_gait_pattern_graph_tree_a5880ef9bfbc41d440c38982aefb08070_icgraph.png" border="0" usemap="#aclassdesignlab_1_1_gait_pattern_graph_tree_a5880ef9bfbc41d440c38982aefb08070_icgraph" alt=""/></div>
<map name="aclassdesignlab_1_1_gait_pattern_graph_tree_a5880ef9bfbc41d440c38982aefb08070_icgraph" id="aclassdesignlab_1_1_gait_pattern_graph_tree_a5880ef9bfbc41d440c38982aefb08070_icgraph">
<area shape="rect" title="グラフが空かどうかを返す．" alt="" coords="526,5,711,48"/>
<area shape="rect" href="classdesignlab_1_1_graph_tree_creatordocs#a9a8a2cff8af6b99342e88c5cb1cd52ab" title="歩容パターングラフを作成する．" alt="" coords="292,5,478,48"/>
<area shape="poly" title=" " alt="" coords="511,29,478,29,478,24,511,24"/>
<area shape="rect" href="classdesignlab_1_1_gait_pattern_generator_threaddocs#af6729bdafbd310f762733e7fa10f8df5" title="グラフ探索を行い，次の動作として最適なノードを返す．" alt="" coords="5,5,244,48"/>
<area shape="poly" title=" " alt="" coords="276,29,244,29,244,24,276,24"/>
</map>
</div>

</div>
</div>
<hr/>このクラス詳解は次のファイルから抽出されました:<ul>
<li>C:/Users/hasegawa/Desktop/main/program/gait-generation-by-graph-search/DesignLab/<a class="el" href="gait__pattern__graph__tree_8h_sourcedocs">gait_pattern_graph_tree.h</a></li>
<li>C:/Users/hasegawa/Desktop/main/program/gait-generation-by-graph-search/DesignLab/<b>gait_pattern_graph_tree.cpp</b></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacedesignlabdocs">designlab</a></li><li class="navelem"><a class="el" href="classdesignlab_1_1_gait_pattern_graph_treedocs">GaitPatternGraphTree</a></li>
    <li class="footer">構築: <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.8 </li>
  </ul>
</div>
</body>
</html>
