<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="ja">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.8"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>GaitGeneration by Graph Search: designlab 名前空間</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">GaitGeneration by Graph Search
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- 構築: Doxygen 1.9.8 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search/",'docs');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','検索');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('namespacedesignlabdocs',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">読み取り中…</div>
<div class="SRStatus" id="Searching">検索中…</div>
<div class="SRStatus" id="NoMatches">一致する文字列を見つけられません</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#namespaces">名前空間</a> &#124;
<a href="#nested-classes">クラス</a> &#124;
<a href="#concepts">Concepts</a> &#124;
<a href="#enum-members">列挙型</a> &#124;
<a href="#func-members">関数</a> &#124;
<a href="#var-members">変数</a>  </div>
  <div class="headertitle"><div class="title">designlab 名前空間</div></div>
</div><!--header-->
<div class="contents">
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="namespaces" name="namespaces"></a>
名前空間</h2></td></tr>
<tr class="memitem:namespacedesignlab_1_1com__func" id="r_namespacedesignlab_1_1com__func"><td class="memItemLeft" align="right" valign="top">namespace &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacedesignlab_1_1com__funcdocs">com_func</a></td></tr>
<tr class="memdesc:namespacedesignlab_1_1com__func"><td class="mdescLeft">&#160;</td><td class="mdescRight">重心タイプに関する名前空間．Center of Mass Function の略． <br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:namespacedesignlab_1_1dxlib__util" id="r_namespacedesignlab_1_1dxlib__util"><td class="memItemLeft" align="right" valign="top">namespace &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacedesignlab_1_1dxlib__utildocs">dxlib_util</a></td></tr>
<tr class="memdesc:namespacedesignlab_1_1dxlib__util"><td class="mdescLeft">&#160;</td><td class="mdescRight">Dxlibの3D表示を行う処理を書き直した関数をまとめた名前空間． <br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:namespacedesignlab_1_1impl" id="r_namespacedesignlab_1_1impl"><td class="memItemLeft" align="right" valign="top">namespace &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacedesignlab_1_1impldocs">impl</a></td></tr>
<tr class="memdesc:namespacedesignlab_1_1impl"><td class="mdescLeft">&#160;</td><td class="mdescRight">明示的に使用することのない関数をまとめた名前空間． <br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:namespacedesignlab_1_1leg__func" id="r_namespacedesignlab_1_1leg__func"><td class="memItemLeft" align="right" valign="top">namespace &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacedesignlab_1_1leg__funcdocs">leg_func</a></td></tr>
<tr class="memdesc:namespacedesignlab_1_1leg__func"><td class="mdescLeft">&#160;</td><td class="mdescRight">このプログラムでは脚状態をビット(28bit)の情報で表す． そのデータを処理するための関数． <br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:namespacedesignlab_1_1math__util" id="r_namespacedesignlab_1_1math__util"><td class="memItemLeft" align="right" valign="top">namespace &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacedesignlab_1_1math__utildocs">math_util</a></td></tr>
<tr class="memdesc:namespacedesignlab_1_1math__util"><td class="mdescLeft">&#160;</td><td class="mdescRight">基本的な計算を行う関数をまとめた名前空間． <br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:namespacedesignlab_1_1toml__func" id="r_namespacedesignlab_1_1toml__func"><td class="memItemLeft" align="right" valign="top">namespace &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacedesignlab_1_1toml__funcdocs">toml_func</a></td></tr>
<tr class="memdesc:namespacedesignlab_1_1toml__func"><td class="mdescLeft">&#160;</td><td class="mdescRight">tomlファイルのシリアライズ/デシリアライズを行うための関数群． <br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="nested-classes" name="nested-classes"></a>
クラス</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_abstract_dxlib_guidocs">AbstractDxlibGui</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Dxlibを使ったGUIの抽象クラス．  <a href="classdesignlab_1_1_abstract_dxlib_guidocs#details">[詳解]</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structdesignlab_1_1_application_setting_recorddocs">ApplicationSettingRecord</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">アプリの設定を記録する構造体．  <a href="structdesignlab_1_1_application_setting_recorddocs#details">[詳解]</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_application_setting_record_validatordocs">ApplicationSettingRecordValidator</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="structdesignlab_1_1_application_setting_recorddocs" title="アプリの設定を記録する構造体．">ApplicationSettingRecord</a> のバリデータ．  <a href="classdesignlab_1_1_application_setting_record_validatordocs#details">[詳解]</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_approximated_motion_range_renderdocs">ApproximatedMotionRangeRender</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">6脚歩行ロボットの近似された脚の動作範囲を描画するクラス．  <a href="classdesignlab_1_1_approximated_motion_range_renderdocs#details">[詳解]</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_asyncable_datadocs">AsyncableData</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">非同期処理を行う際に，データの更新回数とデータをまとめて扱うためのクラス．  <a href="classdesignlab_1_1_asyncable_datadocs#details">[詳解]</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_asyncable_data_3_01std_1_1vector_3_01_t_01_4_01_4docs">AsyncableData&lt; std::vector&lt; T &gt; &gt;</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">非同期処理を行う際に， データの更新回数とデータをまとめて扱うための構造体．( vector 版)  <a href="classdesignlab_1_1_asyncable_data_3_01std_1_1vector_3_01_t_01_4_01_4docs#details">[詳解]</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_average_calculatordocs">AverageCalculator</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">平均値，分散，標準偏差を求めるテンプレートクラス．  <a href="classdesignlab_1_1_average_calculatordocs#details">[詳解]</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_boot_mode_selectordocs">BootModeSelector</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">起動モードを選択するクラス．  <a href="classdesignlab_1_1_boot_mode_selectordocs#details">[詳解]</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_camera_draggerdocs">CameraDragger</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">マウスの入力でカメラを動かすクラス．  <a href="classdesignlab_1_1_camera_draggerdocs#details">[詳解]</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_cmd_i_o_utildocs">CmdIOUtil</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">標準入出力の std::cout，std::cinを使った コマンドライン入出力を行うシングルトンクラス．  <a href="classdesignlab_1_1_cmd_i_o_utildocs#details">[詳解]</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_com_candidate_polygon_makerdocs">ComCandidatePolygonMaker</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">重心位置の候補地点を示す多角形を作成するクラス．  <a href="classdesignlab_1_1_com_candidate_polygon_makerdocs#details">[詳解]</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structdesignlab_1_1_com_pos_and_polygondocs">ComPosAndPolygon</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">離散化された重心位置とその重心位置を含む多角形の組み合わせを表す構造体．  <a href="structdesignlab_1_1_com_pos_and_polygondocs#details">[詳解]</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_com_selectordocs">ComSelector</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">重心の候補領域から重心位置を選択するクラス．  <a href="classdesignlab_1_1_com_selectordocs#details">[詳解]</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_dead_lock_checkerdocs">DeadLockChecker</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">動作のループを感知するクラス．  <a href="classdesignlab_1_1_dead_lock_checkerdocs#details">[詳解]</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_divided_map_statedocs">DividedMapState</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">マップを格子状に分割して管理するクラス．  <a href="classdesignlab_1_1_divided_map_statedocs#details">[詳解]</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_double_int_rangedocs">DoubleIntRange</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_dxlib3d_renderer_groupdocs">Dxlib3dRendererGroup</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">dxlib_renderer の draw 関数を呼ぶためのクラス．  <a href="classdesignlab_1_1_dxlib3d_renderer_groupdocs#details">[詳解]</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_dxlib_cameradocs">DxlibCamera</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Dxlib の3Dのカメラの状態を管理するクラス．  <a href="classdesignlab_1_1_dxlib_cameradocs#details">[詳解]</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_dxlib_gui_cameradocs">DxlibGuiCamera</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">カメラの操作・管理を行うGUIの処理・描画を行うクラス．  <a href="classdesignlab_1_1_dxlib_gui_cameradocs#details">[詳解]</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_dxlib_gui_camera_parameter_displayerdocs">DxlibGuiCameraParameterDisplayer</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">カメラの情報を表示するGUIの処理・描画を行うクラス．  <a href="classdesignlab_1_1_dxlib_gui_camera_parameter_displayerdocs#details">[詳解]</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_dxlib_gui_display_node_switcherdocs">DxlibGuiDisplayNodeSwitcher</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">ノードの表示・切り替えを行うGUIのクラス．  <a href="classdesignlab_1_1_dxlib_gui_display_node_switcherdocs#details">[詳解]</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_dxlib_gui_node_displayerdocs">DxlibGuiNodeDisplayer</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">ノードの情報を表示するGUIのクラス．  <a href="classdesignlab_1_1_dxlib_gui_node_displayerdocs#details">[詳解]</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_dxlib_gui_robot_controldocs">DxlibGuiRobotControl</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">カメラの操作・管理を行うGUIの処理・描画を行うクラス．  <a href="classdesignlab_1_1_dxlib_gui_robot_controldocs#details">[詳解]</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_dxlib_gui_terminaldocs">DxlibGuiTerminal</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">×ボタンを押して消えたGUIを復活させるためのクラス．  <a href="classdesignlab_1_1_dxlib_gui_terminaldocs#details">[詳解]</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_dxlib_gui_updaterdocs">DxlibGuiUpdater</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">クリック判定を行うクラス．  <a href="classdesignlab_1_1_dxlib_gui_updaterdocs#details">[詳解]</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structdesignlab_1_1_dxlib_mouse_statedocs">DxlibMouseState</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">マウスの状態を表す構造体．  <a href="structdesignlab_1_1_dxlib_mouse_statedocs#details">[詳解]</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_dxlib_node_setter_groupdocs">DxlibNodeSetterGroup</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">DxLibでノードの設定を行うクラスをまとめるクラス．  <a href="classdesignlab_1_1_dxlib_node_setter_groupdocs#details">[詳解]</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structdesignlab_1_1_euler_x_y_zdocs">EulerXYZ</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">XYZオイラー角を用いた回転を表す構造体．  <a href="structdesignlab_1_1_euler_x_y_zdocs#details">[詳解]</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_file_treedocs">FileTree</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">ファイルツリーを作成するクラス．  <a href="classdesignlab_1_1_file_treedocs#details">[詳解]</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_font_loaderdocs">FontLoader</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Dxlibのフォントを読み込むクラス．  <a href="classdesignlab_1_1_font_loaderdocs#details">[詳解]</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_fps_controllerdocs">FpsController</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">FPSを一定にキープするためのクラス．  <a href="classdesignlab_1_1_fps_controllerdocs#details">[詳解]</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_gait_pattern_generator_basicdocs">GaitPatternGeneratorBasic</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">普通にグラフ探索を行い，歩容パターン生成を行うクラス．  <a href="classdesignlab_1_1_gait_pattern_generator_basicdocs#details">[詳解]</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_gait_pattern_generator_revaluationdocs">GaitPatternGeneratorRevaluation</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">再評価手法を実装したクラス．  <a href="classdesignlab_1_1_gait_pattern_generator_revaluationdocs#details">[詳解]</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_gait_pattern_generator_switch_movedocs">GaitPatternGeneratorSwitchMove</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">複数の種類の歩容パターンの生成方法を切り替えるためのクラス．  <a href="classdesignlab_1_1_gait_pattern_generator_switch_movedocs#details">[詳解]</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_gait_pattern_generator_threaddocs">GaitPatternGeneratorThread</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">普通にグラフ探索を行い，歩容パターン生成を行うクラス．  <a href="classdesignlab_1_1_gait_pattern_generator_threaddocs#details">[詳解]</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_gait_pattern_graph_treedocs">GaitPatternGraphTree</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="structdesignlab_1_1_robot_state_nodedocs" title="グラフ構造のためのノード(頂点)．旧名 LNODE">RobotStateNode</a> 構造体をノードとする木構造のグラフのクラス．  <a href="classdesignlab_1_1_gait_pattern_graph_treedocs#details">[詳解]</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_graph_com_plotterdocs">GraphComPlotter</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_graphic_constdocs">GraphicConst</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">画像表示処理用の定数クラス．  <a href="classdesignlab_1_1_graphic_constdocs#details">[詳解]</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structdesignlab_1_1_graphic_data_brokerdocs">GraphicDataBroker</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">グラフ探索の結果を別スレッドのグラフィッククラスに連絡するための構造体．  <a href="structdesignlab_1_1_graphic_data_brokerdocs#details">[詳解]</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_graphic_main_basicdocs">GraphicMainBasic</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">シミュレーションの一覧表示，ロボットの動きの軌跡の表示 などベーシックな機能を提供するクラス．  <a href="classdesignlab_1_1_graphic_main_basicdocs#details">[詳解]</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_graphic_main_display_modeldocs">GraphicMainDisplayModel</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">ロボットのモデルを表示して，正しく動作しているかを確認するためのクラス．  <a href="classdesignlab_1_1_graphic_main_display_modeldocs#details">[詳解]</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_graphic_main_graph_viewerdocs">GraphicMainGraphViewer</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">GraphViewerの画面を表示するクラス．  <a href="classdesignlab_1_1_graphic_main_graph_viewerdocs#details">[詳解]</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_graphic_main_robot_controldocs">GraphicMainRobotControl</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">ロボットの制御を行うGUIの処理，描画を行うクラス．  <a href="classdesignlab_1_1_graphic_main_robot_controldocs#details">[詳解]</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_graphic_systemdocs">GraphicSystem</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Dxlibの処理を行うクラス．  <a href="classdesignlab_1_1_graphic_systemdocs#details">[詳解]</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_graph_search_constdocs">GraphSearchConst</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">グラフ探索の定数をまとめたクラス． <br  />
 先行研究のマクロをまとめたもの．  <a href="classdesignlab_1_1_graph_search_constdocs#details">[詳解]</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_graph_searcher_spot_turndocs">GraphSearcherSpotTurn</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">グラフ探索を行い，直進する動作を評価するクラス．  <a href="classdesignlab_1_1_graph_searcher_spot_turndocs#details">[詳解]</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_graph_searcher_straight_movedocs">GraphSearcherStraightMove</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">グラフ探索を行い，直進する動作を評価するクラス．  <a href="classdesignlab_1_1_graph_searcher_straight_movedocs#details">[詳解]</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_graph_searcher_turndocs">GraphSearcherTurn</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">グラフ探索を行い，直進する動作を評価するクラス．  <a href="classdesignlab_1_1_graph_searcher_turndocs#details">[詳解]</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structdesignlab_1_1_graph_search_evaluation_valuedocs">GraphSearchEvaluationValue</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">グラフ探索の評価値を格納する構造体．  <a href="structdesignlab_1_1_graph_search_evaluation_valuedocs#details">[詳解]</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_graph_search_evaluatordocs">GraphSearchEvaluator</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structdesignlab_1_1_graph_search_resultdocs">GraphSearchResult</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">グラフ探索の評価値を評価するクラス．  <a href="structdesignlab_1_1_graph_search_resultdocs#details">[詳解]</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structdesignlab_1_1_graph_search_result_recorddocs">GraphSearchResultRecord</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">グラフ探索の結果を格納する構造体．  <a href="structdesignlab_1_1_graph_search_result_recorddocs#details">[詳解]</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_graph_tree_creatordocs">GraphTreeCreator</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">歩容パターングラフを作成するクラス．  <a href="classdesignlab_1_1_graph_tree_creatordocs#details">[詳解]</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_graph_viewer_g_u_i_controllerdocs">GraphViewerGUIController</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">グラフのノードのデータを表示するGUIのコントローラークラス．  <a href="classdesignlab_1_1_graph_viewer_g_u_i_controllerdocs#details">[詳解]</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_hexapod_constdocs">HexapodConst</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Hexapodの定数をまとめたクラス．  <a href="classdesignlab_1_1_hexapod_constdocs#details">[詳解]</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structdesignlab_1_1_hexapod_joint_statedocs">HexapodJointState</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">ロボットの関節の状態を表す構造体．  <a href="structdesignlab_1_1_hexapod_joint_statedocs#details">[詳解]</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_hexapod_renderer_builderdocs">HexapodRendererBuilder</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">HexapodRendererクラスのインスタンスを作成するクラス．  <a href="classdesignlab_1_1_hexapod_renderer_builderdocs#details">[詳解]</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_i_dxlib3d_rendererdocs">IDxlib3dRenderer</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">DxLibの描画処理を行うクラスのインターフェース．  <a href="classdesignlab_1_1_i_dxlib3d_rendererdocs#details">[詳解]</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_i_dxlib_clickabledocs">IDxlibClickable</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">クリック可能なGUIのインターフェース．  <a href="classdesignlab_1_1_i_dxlib_clickabledocs#details">[詳解]</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_i_dxlib_draggabledocs">IDxlibDraggable</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">ドラッグ可能なGUIのインターフェース．  <a href="classdesignlab_1_1_i_dxlib_draggabledocs#details">[詳解]</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_i_dxlib_guidocs">IDxlibGui</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Dxlibの画面に表示するGUIのインターフェース．  <a href="classdesignlab_1_1_i_dxlib_guidocs#details">[詳解]</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_i_dxlib_node_setterdocs">IDxlibNodeSetter</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">DxLibのGuiやRendererでノードのセットを行うためのインターフェース．  <a href="classdesignlab_1_1_i_dxlib_node_setterdocs#details">[詳解]</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_i_dxlib_wheel_handlerdocs">IDxlibWheelHandler</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">マウスホイールの入力を受け取るためのインターフェース．  <a href="classdesignlab_1_1_i_dxlib_wheel_handlerdocs#details">[詳解]</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_i_gait_pattern_generatordocs">IGaitPatternGenerator</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">グラフ探索による歩容パターン生成を行うクラスのインターフェース．  <a href="classdesignlab_1_1_i_gait_pattern_generatordocs#details">[詳解]</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_i_graphic_maindocs">IGraphicMain</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">GraphicMainのインターフェース．  <a href="classdesignlab_1_1_i_graphic_maindocs#details">[詳解]</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_i_graph_searcherdocs">IGraphSearcher</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">グラフ探索の処理のインターフェース．  <a href="classdesignlab_1_1_i_graph_searcherdocs#details">[詳解]</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_i_hexapod_coordinate_converterdocs">IHexapodCoordinateConverter</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">ロボットは重心位置・アクチュエータなど様々な点を基準とする座標系を持つ． これらを相互に変換する処理のインターフェース．  <a href="classdesignlab_1_1_i_hexapod_coordinate_converterdocs#details">[詳解]</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_i_hexapod_joint_calculatordocs">IHexapodJointCalculator</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">間接角度や角速度を計算する処理のインターフェース．  <a href="classdesignlab_1_1_i_hexapod_joint_calculatordocs#details">[詳解]</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_i_hexapod_posture_validatordocs">IHexapodPostureValidator</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">6脚ロボットが有効な姿勢をとっているかを チェックする処理のインターフェース．  <a href="classdesignlab_1_1_i_hexapod_posture_validatordocs#details">[詳解]</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_i_hexapod_state_presenterdocs">IHexapodStatePresenter</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">6脚ロボットの状態を表示するクラス．  <a href="classdesignlab_1_1_i_hexapod_state_presenterdocs#details">[詳解]</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_i_map_creatordocs">IMapCreator</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">マップ生成クラスのインターフェース．  <a href="classdesignlab_1_1_i_map_creatordocs#details">[詳解]</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_i_node_creatordocs">INodeCreator</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">ノード生成処理のインターフェース．  <a href="classdesignlab_1_1_i_node_creatordocs#details">[詳解]</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_i_node_creator_builderdocs">INodeCreatorBuilder</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">INodeCreatorを生成するためのビルダークラス．  <a href="classdesignlab_1_1_i_node_creator_builderdocs#details">[詳解]</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_interpolated_node_creatordocs">InterpolatedNodeCreator</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">矩形軌道を生成し，ノード間を補間するクラス．  <a href="classdesignlab_1_1_interpolated_node_creatordocs#details">[詳解]</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_interpolate_validatordocs">InterpolateValidator</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">補間の妥当性を検証するクラス．  <a href="classdesignlab_1_1_interpolate_validatordocs#details">[詳解]</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_i_robot_operatordocs">IRobotOperator</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">ロボットの動作を決定する処理のインターフェース．  <a href="classdesignlab_1_1_i_robot_operatordocs#details">[詳解]</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_i_simulation_end_checkerdocs">ISimulationEndChecker</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">シミュレーションの終了を判定するクラスのインターフェース．  <a href="classdesignlab_1_1_i_simulation_end_checkerdocs#details">[詳解]</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_i_system_maindocs">ISystemMain</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">プログラムの面の処理のインターフェース．  <a href="classdesignlab_1_1_i_system_maindocs#details">[詳解]</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_i_toml_data_validatordocs">ITomlDataValidator</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">TOMLファイルのデータの検証を行う処理のインターフェース．  <a href="classdesignlab_1_1_i_toml_data_validatordocs#details">[詳解]</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_keyboarddocs">Keyboard</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Dxlibのキーボード入力を取得するクラス．  <a href="classdesignlab_1_1_keyboarddocs#details">[詳解]</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structdesignlab_1_1_line_segment2docs">LineSegment2</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">2次元の線分を表す構造体．  <a href="structdesignlab_1_1_line_segment2docs#details">[詳解]</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_map_creator_by_csvdocs">MapCreatorByCsv</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">CSV ファイルからマップを生成するクラス．  <a href="classdesignlab_1_1_map_creator_by_csvdocs#details">[詳解]</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_map_creator_factorydocs">MapCreatorFactory</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">マップを生成するクラスを生成するクラス．  <a href="classdesignlab_1_1_map_creator_factorydocs#details">[詳解]</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_map_creator_for_simulationdocs">MapCreatorForSimulation</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">シミュレーション用のマップを生成するクラス．  <a href="classdesignlab_1_1_map_creator_for_simulationdocs#details">[詳解]</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_map_file_exporterdocs">MapFileExporter</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">マップを csv に出力するクラス． <br  />
 マップには脚接地可能点が羅列されているので，1行ずつ出力する．  <a href="classdesignlab_1_1_map_file_exporterdocs#details">[詳解]</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_map_file_importerdocs">MapFileImporter</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">マップを csv に出力したものを読み込むクラス． <br  />
 マップには脚接地可能点が羅列されているので，1行ずつ読み込み，それぞれマップに追加する．  <a href="classdesignlab_1_1_map_file_importerdocs#details">[詳解]</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_map_rendererdocs">MapRenderer</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">マップの描画を行うクラス．  <a href="classdesignlab_1_1_map_rendererdocs#details">[詳解]</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_map_statedocs">MapState</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">マップを表すクラス．  <a href="classdesignlab_1_1_map_statedocs#details">[詳解]</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structdesignlab_1_1_math_constdocs">MathConst</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">float 型と double 型の定数を提供するクラス．  <a href="structdesignlab_1_1_math_constdocs#details">[詳解]</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structdesignlab_1_1_math_const_3_01double_01_4docs">MathConst&lt; double &gt;</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">double型の定数を提供するクラス．  <a href="structdesignlab_1_1_math_const_3_01double_01_4docs#details">[詳解]</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structdesignlab_1_1_math_const_3_01float_01_4docs">MathConst&lt; float &gt;</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">float型の定数を提供するクラス．  <a href="structdesignlab_1_1_math_const_3_01float_01_4docs#details">[詳解]</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_model_loaderdocs">ModelLoader</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Dxlibの3Dモデルを読み込むクラス．  <a href="classdesignlab_1_1_model_loaderdocs#details">[詳解]</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_mousedocs">Mouse</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Dxlibでマウス入力を取得するクラス．  <a href="classdesignlab_1_1_mousedocs#details">[詳解]</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_movement_locus_rendererdocs">MovementLocusRenderer</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">ロボットの移動軌跡を描画するクラス．  <a href="classdesignlab_1_1_movement_locus_rendererdocs#details">[詳解]</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_node_creator_body_rotdocs">NodeCreatorBodyRot</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">ロボットの回転を表すノードを生成するクラス．  <a href="classdesignlab_1_1_node_creator_body_rotdocs#details">[詳解]</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_node_creator_builder_body_rotdocs">NodeCreatorBuilderBodyRot</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">ノード作成ビルダーのボディ回転クラス  <a href="classdesignlab_1_1_node_creator_builder_body_rotdocs#details">[詳解]</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_node_creator_builder_straight_movedocs">NodeCreatorBuilderStraightMove</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">波東さんが行った処理と同様の方法になるようにノード生成クラスを生成するクラス．  <a href="classdesignlab_1_1_node_creator_builder_straight_movedocs#details">[詳解]</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_node_creator_builder_turndocs">NodeCreatorBuilderTurn</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">旋回動作用のノード生成クラスのビルダー．  <a href="classdesignlab_1_1_node_creator_builder_turndocs#details">[詳解]</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_node_creator_builder_turn_spotdocs">NodeCreatorBuilderTurnSpot</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">旋回動作用のノード生成クラスを生成するクラス．  <a href="classdesignlab_1_1_node_creator_builder_turn_spotdocs#details">[詳解]</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_node_creator_com_movedocs">NodeCreatorComMove</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">波東さんの手法で重心の平行移動を行うクラス．  <a href="classdesignlab_1_1_node_creator_com_movedocs#details">[詳解]</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_node_creator_com_move_straightdocs">NodeCreatorComMoveStraight</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">直線方向に重心の平行移動を行うクラス．  <a href="classdesignlab_1_1_node_creator_com_move_straightdocs#details">[詳解]</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_node_creator_com_up_downdocs">NodeCreatorComUpDown</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">重心の上げ下げをするエッジ(辺，ノードとノードを繋ぐ物)の処理をするクラス．  <a href="classdesignlab_1_1_node_creator_com_up_downdocs#details">[詳解]</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_node_creator_leg_hierarchydocs">NodeCreatorLegHierarchy</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">脚の階層構造を作るためのクラス．  <a href="classdesignlab_1_1_node_creator_leg_hierarchydocs#details">[詳解]</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_node_creator_leg_up_downdocs">NodeCreatorLegUpDown</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">脚の上げ下げをするエッジ(辺，ノードとノードを繋ぐ物)の処理をするクラス．  <a href="classdesignlab_1_1_node_creator_leg_up_downdocs#details">[詳解]</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_node_creator_leg_up_down2ddocs">NodeCreatorLegUpDown2d</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">脚の上げ下げをするエッジ(辺，ノードとノードを繋ぐ物)の処理をするクラス．  <a href="classdesignlab_1_1_node_creator_leg_up_down2ddocs#details">[詳解]</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_node_creator_leg_up_down_radiusdocs">NodeCreatorLegUpDownRadius</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">脚の上げ下げをするエッジ(辺，ノードとノードを繋ぐ物)の処理をするクラス．  <a href="classdesignlab_1_1_node_creator_leg_up_down_radiusdocs#details">[詳解]</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_node_initializerdocs">NodeInitializer</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">ノードの初期化を行うクラス． <br  />
 シミュレーション時にノードの初期値を設定するために使用する．  <a href="classdesignlab_1_1_node_initializerdocs#details">[詳解]</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_phantom_x_mk_i_idocs">PhantomXMkII</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">PhantomX mk-2 の状態を計算するクラス．  <a href="classdesignlab_1_1_phantom_x_mk_i_idocs#details">[詳解]</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_phantom_x_mk_i_i_constdocs">PhantomXMkIIConst</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">PhantomX mk-Ⅱ のパラメータを定数で表現したもの．  <a href="classdesignlab_1_1_phantom_x_mk_i_i_constdocs#details">[詳解]</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structdesignlab_1_1_phantom_x_mk_i_i_parameter_recorddocs">PhantomXMkIIParameterRecord</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_phantom_x_mk_i_i_renderer_modeldocs">PhantomXMkIIRendererModel</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">3Dモデルを使用して PhantomX の描画を行うクラス．  <a href="classdesignlab_1_1_phantom_x_mk_i_i_renderer_modeldocs#details">[詳解]</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_phantom_x_renderer_simpledocs">PhantomXRendererSimple</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">3Dモデルを使用せず，多角形を組み合わせてPhantomXの描画を行うクラス．  <a href="classdesignlab_1_1_phantom_x_renderer_simpledocs#details">[詳解]</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structdesignlab_1_1_polygon2docs">Polygon2</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">2次元の多角形を表す構造体．  <a href="structdesignlab_1_1_polygon2docs#details">[詳解]</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structdesignlab_1_1_quaterniondocs">Quaternion</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">クォータニオンを表す構造体．  <a href="structdesignlab_1_1_quaterniondocs#details">[詳解]</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_result_file_constdocs">ResultFileConst</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_result_file_exporterdocs">ResultFileExporter</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">結果をファイルに出力するクラス． <br  />
 シミュレーション結果をファイルに出力する処理を全てこのクラスにまとめた．  <a href="classdesignlab_1_1_result_file_exporterdocs#details">[詳解]</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_result_file_importerdocs">ResultFileImporter</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">結果をファイルから読み込むクラス．  <a href="classdesignlab_1_1_result_file_importerdocs#details">[詳解]</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_robot_ground_point_rendererdocs">RobotGroundPointRenderer</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">ロボットが接地点した地点の履歴を描画するクラス．  <a href="classdesignlab_1_1_robot_ground_point_rendererdocs#details">[詳解]</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structdesignlab_1_1_robot_operationdocs">RobotOperation</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">探索において目標となる座標や角度，評価する値についてまとめた構造体．  <a href="structdesignlab_1_1_robot_operationdocs#details">[詳解]</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_robot_operator_factorydocs">RobotOperatorFactory</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">TargetUpdaterを生成するファクトリクラス．  <a href="classdesignlab_1_1_robot_operator_factorydocs#details">[詳解]</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_robot_operator_fixeddocs">RobotOperatorFixed</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">命令の更新をせず，初期化時の命令を送り続けるクラス．  <a href="classdesignlab_1_1_robot_operator_fixeddocs#details">[詳解]</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_robot_operator_for_gpgdocs">RobotOperatorForGpg</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">global path generator を行うための仮置きクラス．  <a href="classdesignlab_1_1_robot_operator_for_gpgdocs#details">[詳解]</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_robot_operator_for_pathdocs">RobotOperatorForPath</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">指定した中継地点を通るようにロボットを動かすクラス．  <a href="classdesignlab_1_1_robot_operator_for_pathdocs#details">[詳解]</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structdesignlab_1_1_robot_state_nodedocs">RobotStateNode</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">グラフ構造のためのノード(頂点)．旧名 LNODE  <a href="structdesignlab_1_1_robot_state_nodedocs#details">[詳解]</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structdesignlab_1_1_rotation_matrix3x3docs">RotationMatrix3x3</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">3次元の回転行列を表す構造体．  <a href="structdesignlab_1_1_rotation_matrix3x3docs#details">[詳解]</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_serial_communication_threaddocs">SerialCommunicationThread</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_simple_buttondocs">SimpleButton</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Dxlibのウィンドウのボタンの処理・描画を管理するクラス．  <a href="classdesignlab_1_1_simple_buttondocs#details">[詳解]</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_simulation_end_checker_by_goal_tapedocs">SimulationEndCheckerByGoalTape</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">ゴールテープによるシミュレーション終了判定クラス．  <a href="classdesignlab_1_1_simulation_end_checker_by_goal_tapedocs#details">[詳解]</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_simulation_end_checker_by_positiondocs">SimulationEndCheckerByPosition</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">最終位置によるシミュレーション終了判定クラス．  <a href="classdesignlab_1_1_simulation_end_checker_by_positiondocs#details">[詳解]</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_simulation_end_checker_by_posturedocs">SimulationEndCheckerByPosture</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">最終姿勢によるシミュレーション終了判定クラス．  <a href="classdesignlab_1_1_simulation_end_checker_by_posturedocs#details">[詳解]</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_simulation_end_checker_factorydocs">SimulationEndCheckerFactory</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">シミュレーションの終了を判定するクラスを生成するクラス．  <a href="classdesignlab_1_1_simulation_end_checker_factorydocs#details">[詳解]</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structdesignlab_1_1_simulation_map_parameterdocs">SimulationMapParameter</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">マップ生成時のモードとオプションを指定する構造体．  <a href="structdesignlab_1_1_simulation_map_parameterdocs#details">[詳解]</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_simulation_map_parameter_validatordocs">SimulationMapParameterValidator</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="structdesignlab_1_1_simulation_map_parameterdocs" title="マップ生成時のモードとオプションを指定する構造体．">SimulationMapParameter</a> のバリデータ．  <a href="classdesignlab_1_1_simulation_map_parameter_validatordocs#details">[詳解]</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structdesignlab_1_1_simulation_result_recorddocs">SimulationResultRecord</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">シミュレーションの結果を格納する構造体．  <a href="structdesignlab_1_1_simulation_result_recorddocs#details">[詳解]</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structdesignlab_1_1_simulation_setting_recorddocs">SimulationSettingRecord</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_singletondocs">Singleton</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Singletonクラス作成のためのテンプレートクラス．  <a href="classdesignlab_1_1_singletondocs#details">[詳解]</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_stability_margin_rendererdocs">StabilityMarginRenderer</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">ロボットの静的安定余裕(支持脚多角形)を描画するクラス．  <a href="classdesignlab_1_1_stability_margin_rendererdocs#details">[詳解]</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_stopwatchdocs">Stopwatch</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">時間計測用のクラス．  <a href="classdesignlab_1_1_stopwatchdocs#details">[詳解]</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_system_main_graph_viewerdocs">SystemMainGraphViewer</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">グラフを表示するシステムのメインクラス．  <a href="classdesignlab_1_1_system_main_graph_viewerdocs#details">[詳解]</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_system_main_result_viewerdocs">SystemMainResultViewer</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">結果を表示するシステムのクラス．  <a href="classdesignlab_1_1_system_main_result_viewerdocs#details">[詳解]</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_system_main_robot_controldocs">SystemMainRobotControl</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_system_main_simulationdocs">SystemMainSimulation</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">先行研究における int main()で行われていた処理をまとめたもので， 歩容生成シミュレーションを行うクラス．  <a href="classdesignlab_1_1_system_main_simulationdocs#details">[詳解]</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_toml_data_validator_always_truedocs">TomlDataValidatorAlwaysTrue</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">常に trueを返す <a class="el" href="classdesignlab_1_1_i_toml_data_validatordocs" title="TOMLファイルのデータの検証を行う処理のインターフェース．">ITomlDataValidator</a> の実装クラス．  <a href="classdesignlab_1_1_toml_data_validator_always_truedocs#details">[詳解]</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_toml_directory_exporterdocs">TomlDirectoryExporter</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">TOMLファイルを入れるディレクトリを作成し， TOMLファイル読み込みの準備をするクラス．  <a href="classdesignlab_1_1_toml_directory_exporterdocs#details">[詳解]</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_toml_file_exporterdocs">TomlFileExporter</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">TOMLファイルを出力するテンプレートクラス．  <a href="classdesignlab_1_1_toml_file_exporterdocs#details">[詳解]</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_toml_file_importerdocs">TomlFileImporter</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">tomlファイルを読み込んで構造体に変換するテンプレートクラス．  <a href="classdesignlab_1_1_toml_file_importerdocs#details">[詳解]</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structdesignlab_1_1_vector2docs">Vector2</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">2次元の位置ベクトルを表す構造体．  <a href="structdesignlab_1_1_vector2docs#details">[詳解]</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structdesignlab_1_1_vector3docs">Vector3</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">3次元の位置ベクトルを表す構造体．  <a href="structdesignlab_1_1_vector3docs#details">[詳解]</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_world_grid_rendererdocs">WorldGridRenderer</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">ワールドの格子線を描画するクラス．  <a href="classdesignlab_1_1_world_grid_rendererdocs#details">[詳解]</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="concepts" name="concepts"></a>
Concepts</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">concept &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="conceptdesignlab_1_1_copy_assignabledocs">CopyAssignable</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">concept &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="conceptdesignlab_1_1_is_dxlib_guidocs">IsDxlibGui</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">IDxlibGuiを継承しているかどうかを判定する． <br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">concept &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="conceptdesignlab_1_1_is_dxlib_clickabledocs">IsDxlibClickable</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">IDxlibClickableを継承しているかどうかを判定する． <br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">concept &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="conceptdesignlab_1_1_is_dxlib_draggabledocs">IsDxlibDraggable</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">IDxlibDraggableを継承しているかどうかを判定する． <br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">concept &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="conceptdesignlab_1_1_is_dxlib_wheel_handlerdocs">IsDxlibWheelHandler</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">IDxlibWheelHandlerを継承しているかどうかを判定する． <br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">concept &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="conceptdesignlab_1_1_is_dxlib_updatabledocs">IsDxlibUpdatable</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">IDxlibGui, IDxlibClickable, IDxlibDraggable, IDxlibWheelHandlerのうちいずれかを継承しているかどうかを判定する． <br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">concept &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="conceptdesignlab_1_1_has_into_tomldocs">HasIntoToml</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">into&lt;T&gt;を持つか判定するコンセプト． <br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">concept &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="conceptdesignlab_1_1_has_from_tomldocs">HasFromToml</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">FromTomlを持つか判定するコンセプト． <br  />
 toml::from&lt;T&gt;::from_toml()が定義されているかどうかを判定する． <br  />
 また，デフォルトコンストラクタが実装されているかどうかも判定する． <br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="enum-members" name="enum-members"></a>
列挙型</h2></td></tr>
<tr class="memitem:a1c0bd326dd9c0d2105ada8e416781a2d" id="r_a1c0bd326dd9c0d2105ada8e416781a2d"><td class="memItemLeft" align="right" valign="top">enum class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacedesignlabdocs#a1c0bd326dd9c0d2105ada8e416781a2d">BootMode</a> : int { <br />
&#160;&#160;<a class="el" href="namespacedesignlabdocs#a1c0bd326dd9c0d2105ada8e416781a2da2fa097ed9ce9f4197ea504a3cfb6e64c">kSimulation</a> = 0
, <a class="el" href="namespacedesignlabdocs#a1c0bd326dd9c0d2105ada8e416781a2da7733091bca48e4a6b229c03f2e9822b3">kViewer</a>
, <a class="el" href="namespacedesignlabdocs#a1c0bd326dd9c0d2105ada8e416781a2da3d96f89a15b643bab17db0d85e517426">kDisplayModel</a>
, <a class="el" href="namespacedesignlabdocs#a1c0bd326dd9c0d2105ada8e416781a2dadfb97d663a8c7f7610682c58b25dadc0">kResultViewer</a>
, <br />
&#160;&#160;<a class="el" href="namespacedesignlabdocs#a1c0bd326dd9c0d2105ada8e416781a2da209d9dada7daadcd6fbb065ff6a80a2e">kRobotControl</a>
<br />
 }</td></tr>
<tr class="memdesc:a1c0bd326dd9c0d2105ada8e416781a2d"><td class="mdescLeft">&#160;</td><td class="mdescRight">起動モードを表す列挙型．  <a href="namespacedesignlabdocs#a1c0bd326dd9c0d2105ada8e416781a2d">[詳解]</a><br /></td></tr>
<tr class="separator:a1c0bd326dd9c0d2105ada8e416781a2d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a53323f0d14b3c1aef6879f5b9ceffc3d" id="r_a53323f0d14b3c1aef6879f5b9ceffc3d"><td class="memItemLeft" align="right" valign="top">enum class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacedesignlabdocs#a53323f0d14b3c1aef6879f5b9ceffc3d">DisplayQuality</a> : int { <a class="el" href="namespacedesignlabdocs#a53323f0d14b3c1aef6879f5b9ceffc3dacd8fe42741a3bbc973bbf1d404afeff4">kLow</a> = 0
, <a class="el" href="namespacedesignlabdocs#a53323f0d14b3c1aef6879f5b9ceffc3da3ce9d817402b59f65fb01ea044bb1ee9">kMedium</a>
, <a class="el" href="namespacedesignlabdocs#a53323f0d14b3c1aef6879f5b9ceffc3daa022f15e910eb36278094efb6e808a07">kHigh</a>
 }</td></tr>
<tr class="memdesc:a53323f0d14b3c1aef6879f5b9ceffc3d"><td class="mdescLeft">&#160;</td><td class="mdescRight">描画の品質設定を示す列挙体．  <a href="namespacedesignlabdocs#a53323f0d14b3c1aef6879f5b9ceffc3d">[詳解]</a><br /></td></tr>
<tr class="separator:a53323f0d14b3c1aef6879f5b9ceffc3d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acc7368f4060dfdf3589ada8d62dd8a81" id="r_acc7368f4060dfdf3589ada8d62dd8a81"><td class="memItemLeft" align="right" valign="top">enum class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacedesignlabdocs#acc7368f4060dfdf3589ada8d62dd8a81">HexapodMove</a> : int { <br />
&#160;&#160;<a class="el" href="namespacedesignlabdocs#acc7368f4060dfdf3589ada8d62dd8a81a35c3ace1970663a16e5c65baa5941b13">kNone</a>
, <a class="el" href="namespacedesignlabdocs#acc7368f4060dfdf3589ada8d62dd8a81a4a6461c86ef75a5e573c7159b8f899af">kLegUpDown</a>
, <a class="el" href="namespacedesignlabdocs#acc7368f4060dfdf3589ada8d62dd8a81a7a0d289d2c7258b2f617388cded82812">kLegHierarchyChange</a>
, <a class="el" href="namespacedesignlabdocs#acc7368f4060dfdf3589ada8d62dd8a81a54a0fd06169e7dc14648d41420e7385c">kComMove</a>
, <br />
&#160;&#160;<a class="el" href="namespacedesignlabdocs#acc7368f4060dfdf3589ada8d62dd8a81a6428915b783a686f1dfed18358d57bc7">kComUpDown</a>
, <a class="el" href="namespacedesignlabdocs#acc7368f4060dfdf3589ada8d62dd8a81a182913de9e1d9a06377ab8c7e93c9800">kBodyPitchRot</a>
, <a class="el" href="namespacedesignlabdocs#acc7368f4060dfdf3589ada8d62dd8a81ad3c33ddfb2a26d82caa154fcf33350a5">kBodyYawRot</a>
<br />
 }</td></tr>
<tr class="memdesc:acc7368f4060dfdf3589ada8d62dd8a81"><td class="mdescLeft">&#160;</td><td class="mdescRight">ロボットが次にどの動作をするのかを表す列挙体．  <a href="namespacedesignlabdocs#acc7368f4060dfdf3589ada8d62dd8a81">[詳解]</a><br /></td></tr>
<tr class="separator:acc7368f4060dfdf3589ada8d62dd8a81"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a43f5ea9398e73bc5134e238b7e8c5645" id="r_a43f5ea9398e73bc5134e238b7e8c5645"><td class="memItemLeft" align="right" valign="top">enum class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacedesignlabdocs#a43f5ea9398e73bc5134e238b7e8c5645">OutputDetail</a> : int { <br />
&#160;&#160;<a class="el" href="namespacedesignlabdocs#a43f5ea9398e73bc5134e238b7e8c5645a2c9d4d4ca70df56c762f0140f57dbdfb">kSystem</a> = 0
, <a class="el" href="namespacedesignlabdocs#a43f5ea9398e73bc5134e238b7e8c5645ae3587c730cc1aa530fa4ddc9c4204e97">kError</a>
, <a class="el" href="namespacedesignlabdocs#a43f5ea9398e73bc5134e238b7e8c5645aec0da41f4e48b52c362303eb27ed5dee">kWarning</a>
, <a class="el" href="namespacedesignlabdocs#a43f5ea9398e73bc5134e238b7e8c5645a176a473e63c17ccdac91640c67f149bf">kInfo</a>
, <br />
&#160;&#160;<a class="el" href="namespacedesignlabdocs#a43f5ea9398e73bc5134e238b7e8c5645abb53ce21b7c0b7c8a8f7860a41901d29">kDebug</a>
<br />
 }</td></tr>
<tr class="memdesc:a43f5ea9398e73bc5134e238b7e8c5645"><td class="mdescLeft">&#160;</td><td class="mdescRight">コマンドラインに文字を出力する際に，その詳細を指定するための列挙体．  <a href="namespacedesignlabdocs#a43f5ea9398e73bc5134e238b7e8c5645">[詳解]</a><br /></td></tr>
<tr class="separator:a43f5ea9398e73bc5134e238b7e8c5645"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3f1608338ad72e7ffe1024af10173b73" id="r_a3f1608338ad72e7ffe1024af10173b73"><td class="memItemLeft" align="right" valign="top">enum class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacedesignlabdocs#a3f1608338ad72e7ffe1024af10173b73">RobotOperationType</a> : int { <br />
&#160;&#160;<a class="el" href="namespacedesignlabdocs#a3f1608338ad72e7ffe1024af10173b73a35c3ace1970663a16e5c65baa5941b13">kNone</a>
, <a class="el" href="namespacedesignlabdocs#a3f1608338ad72e7ffe1024af10173b73a59375d9badbbc17fc1acf25a5276e38f">kStraightMoveVector</a>
, <a class="el" href="namespacedesignlabdocs#a3f1608338ad72e7ffe1024af10173b73a8738b1472ce83f22b2b53b1d59030ebe">kStraightMovePosition</a>
, <a class="el" href="namespacedesignlabdocs#a3f1608338ad72e7ffe1024af10173b73af8407776554fc79437feff37aead8538">kSpotTurnLastPosture</a>
, <br />
&#160;&#160;<a class="el" href="namespacedesignlabdocs#a3f1608338ad72e7ffe1024af10173b73a32efdb36a9070a5a5042b2db2a492f61">kSpotTurnRotAxis</a>
, <a class="el" href="namespacedesignlabdocs#a3f1608338ad72e7ffe1024af10173b73a93e026b035316bd2e27673dccb7bda19">kTurn</a>
<br />
 }</td></tr>
<tr class="memdesc:a3f1608338ad72e7ffe1024af10173b73"><td class="mdescLeft">&#160;</td><td class="mdescRight">Robotをどのように動かすかを表す列挙体．  <a href="namespacedesignlabdocs#a3f1608338ad72e7ffe1024af10173b73">[詳解]</a><br /></td></tr>
<tr class="separator:a3f1608338ad72e7ffe1024af10173b73"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="func-members" name="func-members"></a>
関数</h2></td></tr>
<tr class="memitem:a2ec06ac611f5f34c473130c5453685ef" id="r_a2ec06ac611f5f34c473130c5453685ef"><td class="memItemLeft" align="right" valign="top"><a id="a2ec06ac611f5f34c473130c5453685ef" name="a2ec06ac611f5f34c473130c5453685ef"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>DESIGNLAB_TOML11_DESCRIPTION_CLASS</b> (<a class="el" href="structdesignlab_1_1_application_setting_recorddocs">ApplicationSettingRecord</a>)</td></tr>
<tr class="separator:a2ec06ac611f5f34c473130c5453685ef"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7de9ff5ecd1d94f3be60898e2be78f40" id="r_a7de9ff5ecd1d94f3be60898e2be78f40"><td class="memTemplParams" colspan="2"><a id="a7de9ff5ecd1d94f3be60898e2be78f40" name="a7de9ff5ecd1d94f3be60898e2be78f40"></a>
template&lt;typename T , typename ... Args&gt; </td></tr>
<tr class="memitem:a7de9ff5ecd1d94f3be60898e2be78f40"><td class="memTemplItemLeft" align="right" valign="top">constexpr std::array&lt; T, sizeof...(Args)&gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><b>MakeArray</b> (Args &amp;&amp;... args)</td></tr>
<tr class="memdesc:a7de9ff5ecd1d94f3be60898e2be78f40"><td class="mdescLeft">&#160;</td><td class="mdescRight">std::arrayを作成する関数． <br  />
 この関数を作成したモチベーションとしては， std::arrayを constexprで初期化する際に苦戦したため． <br  />
 この関数を使うことで，std::arrayを constexprで初期化することができる． <br  />
 例えば，std::array&lt;int, 3&gt;を作成する場合は，MakeArray&lt;int&gt;(1, 2, 3)とする． <br /></td></tr>
<tr class="separator:a7de9ff5ecd1d94f3be60898e2be78f40"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a703ec0b7e06057a8997a4b22d50c5c9d" id="r_a703ec0b7e06057a8997a4b22d50c5c9d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structdesignlab_1_1_vector3docs">Vector3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacedesignlabdocs#a703ec0b7e06057a8997a4b22d50c5c9d">RotateVector3</a> (const <a class="el" href="structdesignlab_1_1_vector3docs">Vector3</a> &amp;vec, const <a class="el" href="structdesignlab_1_1_euler_x_y_zdocs">EulerXYZ</a> &amp;rot)</td></tr>
<tr class="memdesc:a703ec0b7e06057a8997a4b22d50c5c9d"><td class="mdescLeft">&#160;</td><td class="mdescRight">回転させたベクトルを返す．三角関数の処理が多く重たいので注意．  <br /></td></tr>
<tr class="separator:a703ec0b7e06057a8997a4b22d50c5c9d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad72e69d1733944ac21af3b646beed735" id="r_ad72e69d1733944ac21af3b646beed735"><td class="memTemplParams" colspan="2"><a id="ad72e69d1733944ac21af3b646beed735" name="ad72e69d1733944ac21af3b646beed735"></a>
template&lt;class Char &gt; </td></tr>
<tr class="memitem:ad72e69d1733944ac21af3b646beed735"><td class="memTemplItemLeft" align="right" valign="top">std::basic_ostream&lt; Char &gt; &amp;&#160;</td><td class="memTemplItemRight" valign="bottom"><b>operator&lt;&lt;</b> (std::basic_ostream&lt; Char &gt; &amp;os, const <a class="el" href="structdesignlab_1_1_euler_x_y_zdocs">EulerXYZ</a> &amp;r)</td></tr>
<tr class="memdesc:ad72e69d1733944ac21af3b646beed735"><td class="mdescLeft">&#160;</td><td class="mdescRight">出力ストリーム．Csv形式で出力する．カンマ区切り．単位は [rad]． <br /></td></tr>
<tr class="separator:ad72e69d1733944ac21af3b646beed735"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7d4ed47aac7769446f5267afd49ba4d3" id="r_a7d4ed47aac7769446f5267afd49ba4d3"><td class="memTemplParams" colspan="2"><a id="a7d4ed47aac7769446f5267afd49ba4d3" name="a7d4ed47aac7769446f5267afd49ba4d3"></a>
template&lt;class Char &gt; </td></tr>
<tr class="memitem:a7d4ed47aac7769446f5267afd49ba4d3"><td class="memTemplItemLeft" align="right" valign="top">std::basic_istream&lt; Char &gt; &amp;&#160;</td><td class="memTemplItemRight" valign="bottom"><b>operator&gt;&gt;</b> (std::basic_istream&lt; Char &gt; &amp;is, <a class="el" href="structdesignlab_1_1_euler_x_y_zdocs">EulerXYZ</a> &amp;r)</td></tr>
<tr class="memdesc:a7d4ed47aac7769446f5267afd49ba4d3"><td class="mdescLeft">&#160;</td><td class="mdescRight">入力ストリーム <br /></td></tr>
<tr class="separator:a7d4ed47aac7769446f5267afd49ba4d3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5207cad34c817e504ecc4e8f9063c209" id="r_a5207cad34c817e504ecc4e8f9063c209"><td class="memTemplParams" colspan="2"><a id="a5207cad34c817e504ecc4e8f9063c209" name="a5207cad34c817e504ecc4e8f9063c209"></a>
template&lt;class Char &gt; </td></tr>
<tr class="memitem:a5207cad34c817e504ecc4e8f9063c209"><td class="memTemplItemLeft" align="right" valign="top">std::basic_ostream&lt; Char &gt; &amp;&#160;</td><td class="memTemplItemRight" valign="bottom"><b>operator&lt;&lt;</b> (std::basic_ostream&lt; Char &gt; &amp;os, const <a class="el" href="structdesignlab_1_1_polygon2docs">Polygon2</a> &amp;poly)</td></tr>
<tr class="memdesc:a5207cad34c817e504ecc4e8f9063c209"><td class="mdescLeft">&#160;</td><td class="mdescRight">出力ストリーム． <br /></td></tr>
<tr class="separator:a5207cad34c817e504ecc4e8f9063c209"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa6386f09017c25f59fbdf0fa7088ec90" id="r_aa6386f09017c25f59fbdf0fa7088ec90"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structdesignlab_1_1_quaterniondocs">Quaternion</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacedesignlabdocs#aa6386f09017c25f59fbdf0fa7088ec90">SlerpQuaternion</a> (const <a class="el" href="structdesignlab_1_1_quaterniondocs">Quaternion</a> &amp;q1, const <a class="el" href="structdesignlab_1_1_quaterniondocs">Quaternion</a> &amp;q2, float t)</td></tr>
<tr class="memdesc:aa6386f09017c25f59fbdf0fa7088ec90"><td class="mdescLeft">&#160;</td><td class="mdescRight">球面線形補間を行う．  <br /></td></tr>
<tr class="separator:aa6386f09017c25f59fbdf0fa7088ec90"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1329cb082c6b47a47150da24f72b15ee" id="r_a1329cb082c6b47a47150da24f72b15ee"><td class="memItemLeft" align="right" valign="top"><a id="a1329cb082c6b47a47150da24f72b15ee" name="a1329cb082c6b47a47150da24f72b15ee"></a>
constexpr <a class="el" href="structdesignlab_1_1_quaterniondocs">Quaternion</a>&#160;</td><td class="memItemRight" valign="bottom"><b>operator*</b> (float s, const <a class="el" href="structdesignlab_1_1_quaterniondocs">Quaternion</a> &amp;q)</td></tr>
<tr class="separator:a1329cb082c6b47a47150da24f72b15ee"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6c8ec68376a3beec354bf93fba4e7db3" id="r_a6c8ec68376a3beec354bf93fba4e7db3"><td class="memTemplParams" colspan="2"><a id="a6c8ec68376a3beec354bf93fba4e7db3" name="a6c8ec68376a3beec354bf93fba4e7db3"></a>
template&lt;class Char &gt; </td></tr>
<tr class="memitem:a6c8ec68376a3beec354bf93fba4e7db3"><td class="memTemplItemLeft" align="right" valign="top">std::basic_ostream&lt; Char &gt; &amp;&#160;</td><td class="memTemplItemRight" valign="bottom"><b>operator&lt;&lt;</b> (std::basic_ostream&lt; Char &gt; &amp;os, const <a class="el" href="structdesignlab_1_1_quaterniondocs">Quaternion</a> &amp;q)</td></tr>
<tr class="memdesc:a6c8ec68376a3beec354bf93fba4e7db3"><td class="mdescLeft">&#160;</td><td class="mdescRight">出力ストリーム． <br /></td></tr>
<tr class="separator:a6c8ec68376a3beec354bf93fba4e7db3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a18441706734367bf04cf9b8e865fc7ed" id="r_a18441706734367bf04cf9b8e865fc7ed"><td class="memTemplParams" colspan="2"><a id="a18441706734367bf04cf9b8e865fc7ed" name="a18441706734367bf04cf9b8e865fc7ed"></a>
template&lt;class Char &gt; </td></tr>
<tr class="memitem:a18441706734367bf04cf9b8e865fc7ed"><td class="memTemplItemLeft" align="right" valign="top">std::basic_istream&lt; Char &gt; &amp;&#160;</td><td class="memTemplItemRight" valign="bottom"><b>operator&gt;&gt;</b> (std::basic_istream&lt; Char &gt; &amp;is, <a class="el" href="structdesignlab_1_1_quaterniondocs">Quaternion</a> &amp;q)</td></tr>
<tr class="memdesc:a18441706734367bf04cf9b8e865fc7ed"><td class="mdescLeft">&#160;</td><td class="mdescRight">入力ストリーム． <br /></td></tr>
<tr class="separator:a18441706734367bf04cf9b8e865fc7ed"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a60f10cf89b782d822987acc6e655a2a7" id="r_a60f10cf89b782d822987acc6e655a2a7"><td class="memItemLeft" align="right" valign="top">constexpr <a class="el" href="structdesignlab_1_1_vector3docs">Vector3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacedesignlabdocs#a60f10cf89b782d822987acc6e655a2a7">RotateVector3</a> (const <a class="el" href="structdesignlab_1_1_vector3docs">Vector3</a> &amp;vec, const <a class="el" href="structdesignlab_1_1_quaterniondocs">Quaternion</a> &amp;q)</td></tr>
<tr class="memdesc:a60f10cf89b782d822987acc6e655a2a7"><td class="mdescLeft">&#160;</td><td class="mdescRight">3次元の位置ベクトルを回転させる．必ず正規化クォータニオンを用いること．  <br /></td></tr>
<tr class="separator:a60f10cf89b782d822987acc6e655a2a7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa1c6fabbe9cbddd910f4578751c0ec86" id="r_aa1c6fabbe9cbddd910f4578751c0ec86"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structdesignlab_1_1_quaterniondocs">Quaternion</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacedesignlabdocs#aa1c6fabbe9cbddd910f4578751c0ec86">ToQuaternion</a> (const <a class="el" href="structdesignlab_1_1_rotation_matrix3x3docs">RotationMatrix3x3</a> &amp;rot)</td></tr>
<tr class="memdesc:aa1c6fabbe9cbddd910f4578751c0ec86"><td class="mdescLeft">&#160;</td><td class="mdescRight">回転角行列からクォータニオンへの変換．  <br /></td></tr>
<tr class="separator:aa1c6fabbe9cbddd910f4578751c0ec86"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a54d940e1e1adcbeeec8594a7f542fdef" id="r_a54d940e1e1adcbeeec8594a7f542fdef"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structdesignlab_1_1_quaterniondocs">Quaternion</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacedesignlabdocs#a54d940e1e1adcbeeec8594a7f542fdef">ToQuaternion</a> (const <a class="el" href="structdesignlab_1_1_euler_x_y_zdocs">EulerXYZ</a> &amp;e)</td></tr>
<tr class="memdesc:a54d940e1e1adcbeeec8594a7f542fdef"><td class="mdescLeft">&#160;</td><td class="mdescRight">オイラー角からクォータニオンへの変換．  <br /></td></tr>
<tr class="separator:a54d940e1e1adcbeeec8594a7f542fdef"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8183abef6391dd2b5c396f1fa3062294" id="r_a8183abef6391dd2b5c396f1fa3062294"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structdesignlab_1_1_rotation_matrix3x3docs">RotationMatrix3x3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacedesignlabdocs#a8183abef6391dd2b5c396f1fa3062294">ToRotationMatrix</a> (const <a class="el" href="structdesignlab_1_1_quaterniondocs">Quaternion</a> &amp;q)</td></tr>
<tr class="memdesc:a8183abef6391dd2b5c396f1fa3062294"><td class="mdescLeft">&#160;</td><td class="mdescRight">クォータニオンから回転角行列への変換．  <br /></td></tr>
<tr class="separator:a8183abef6391dd2b5c396f1fa3062294"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3aa3e315aa55ffe66c5cc4fef3c1b04f" id="r_a3aa3e315aa55ffe66c5cc4fef3c1b04f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structdesignlab_1_1_rotation_matrix3x3docs">RotationMatrix3x3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacedesignlabdocs#a3aa3e315aa55ffe66c5cc4fef3c1b04f">ToRotationMatrix</a> (const <a class="el" href="structdesignlab_1_1_euler_x_y_zdocs">EulerXYZ</a> &amp;e)</td></tr>
<tr class="memdesc:a3aa3e315aa55ffe66c5cc4fef3c1b04f"><td class="mdescLeft">&#160;</td><td class="mdescRight">XYZオイラー角から回転角行列への変換．  <br /></td></tr>
<tr class="separator:a3aa3e315aa55ffe66c5cc4fef3c1b04f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a78f534befd80ba94ea6c6058487d2596" id="r_a78f534befd80ba94ea6c6058487d2596"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structdesignlab_1_1_euler_x_y_zdocs">EulerXYZ</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacedesignlabdocs#a78f534befd80ba94ea6c6058487d2596">ToEulerXYZ</a> (const <a class="el" href="structdesignlab_1_1_rotation_matrix3x3docs">RotationMatrix3x3</a> &amp;rot)</td></tr>
<tr class="memdesc:a78f534befd80ba94ea6c6058487d2596"><td class="mdescLeft">&#160;</td><td class="mdescRight">回転角行列からXYZオイラー角への変換．  <br /></td></tr>
<tr class="separator:a78f534befd80ba94ea6c6058487d2596"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6078399857761c9309ce7d7fcdf3a90b" id="r_a6078399857761c9309ce7d7fcdf3a90b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structdesignlab_1_1_euler_x_y_zdocs">EulerXYZ</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacedesignlabdocs#a6078399857761c9309ce7d7fcdf3a90b">ToEulerXYZ</a> (const <a class="el" href="structdesignlab_1_1_quaterniondocs">Quaternion</a> &amp;q)</td></tr>
<tr class="memdesc:a6078399857761c9309ce7d7fcdf3a90b"><td class="mdescLeft">&#160;</td><td class="mdescRight">クォータニオンからXYZオイラー角への変換．  <br /></td></tr>
<tr class="separator:a6078399857761c9309ce7d7fcdf3a90b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a48a4ef221b2d87e2ea61724322d778be" id="r_a48a4ef221b2d87e2ea61724322d778be"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structdesignlab_1_1_vector3docs">Vector3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacedesignlabdocs#a48a4ef221b2d87e2ea61724322d778be">RotateVector3</a> (const <a class="el" href="structdesignlab_1_1_vector3docs">Vector3</a> &amp;vec, const <a class="el" href="structdesignlab_1_1_rotation_matrix3x3docs">RotationMatrix3x3</a> &amp;rot)</td></tr>
<tr class="memdesc:a48a4ef221b2d87e2ea61724322d778be"><td class="mdescLeft">&#160;</td><td class="mdescRight">回転させたベクトルを返す．  <br /></td></tr>
<tr class="separator:a48a4ef221b2d87e2ea61724322d778be"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5c0b111e17683a8a0fc71d3500672211" id="r_a5c0b111e17683a8a0fc71d3500672211"><td class="memItemLeft" align="right" valign="top">constexpr <a class="el" href="structdesignlab_1_1_vector2docs">Vector2</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacedesignlabdocs#a5c0b111e17683a8a0fc71d3500672211">operator*</a> (float s, const <a class="el" href="structdesignlab_1_1_vector2docs">Vector2</a> &amp;v)</td></tr>
<tr class="memdesc:a5c0b111e17683a8a0fc71d3500672211"><td class="mdescLeft">&#160;</td><td class="mdescRight">スカラーが先に来る場合の掛け算演算子．  <br /></td></tr>
<tr class="separator:a5c0b111e17683a8a0fc71d3500672211"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1fcdad0fb1e81af7282759914d483e73" id="r_a1fcdad0fb1e81af7282759914d483e73"><td class="memTemplParams" colspan="2"><a id="a1fcdad0fb1e81af7282759914d483e73" name="a1fcdad0fb1e81af7282759914d483e73"></a>
template&lt;class Char &gt; </td></tr>
<tr class="memitem:a1fcdad0fb1e81af7282759914d483e73"><td class="memTemplItemLeft" align="right" valign="top">std::basic_ostream&lt; Char &gt; &amp;&#160;</td><td class="memTemplItemRight" valign="bottom"><b>operator&lt;&lt;</b> (std::basic_ostream&lt; Char &gt; &amp;os, const <a class="el" href="structdesignlab_1_1_vector2docs">Vector2</a> &amp;v)</td></tr>
<tr class="separator:a1fcdad0fb1e81af7282759914d483e73"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2651e0505414525c2aa5671f395cfa83" id="r_a2651e0505414525c2aa5671f395cfa83"><td class="memTemplParams" colspan="2"><a id="a2651e0505414525c2aa5671f395cfa83" name="a2651e0505414525c2aa5671f395cfa83"></a>
template&lt;class Char &gt; </td></tr>
<tr class="memitem:a2651e0505414525c2aa5671f395cfa83"><td class="memTemplItemLeft" align="right" valign="top">std::basic_istream&lt; Char &gt; &amp;&#160;</td><td class="memTemplItemRight" valign="bottom"><b>operator&gt;&gt;</b> (std::basic_istream&lt; Char &gt; &amp;is, <a class="el" href="structdesignlab_1_1_vector2docs">Vector2</a> &amp;v)</td></tr>
<tr class="separator:a2651e0505414525c2aa5671f395cfa83"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4344242853579d856797b3b8c48bbe24" id="r_a4344242853579d856797b3b8c48bbe24"><td class="memItemLeft" align="right" valign="top">constexpr <a class="el" href="structdesignlab_1_1_vector3docs">Vector3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacedesignlabdocs#a4344242853579d856797b3b8c48bbe24">operator*</a> (const float s, const <a class="el" href="structdesignlab_1_1_vector3docs">Vector3</a> &amp;vec) noexcept</td></tr>
<tr class="memdesc:a4344242853579d856797b3b8c48bbe24"><td class="mdescLeft">&#160;</td><td class="mdescRight">スカラーが先に来る場合の掛け算演算子．  <br /></td></tr>
<tr class="separator:a4344242853579d856797b3b8c48bbe24"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a267d1ab3d8486e12343e425b81bbd08d" id="r_a267d1ab3d8486e12343e425b81bbd08d"><td class="memTemplParams" colspan="2"><a id="a267d1ab3d8486e12343e425b81bbd08d" name="a267d1ab3d8486e12343e425b81bbd08d"></a>
template&lt;class Char &gt; </td></tr>
<tr class="memitem:a267d1ab3d8486e12343e425b81bbd08d"><td class="memTemplItemLeft" align="right" valign="top">std::basic_ostream&lt; Char &gt; &amp;&#160;</td><td class="memTemplItemRight" valign="bottom"><b>operator&lt;&lt;</b> (std::basic_ostream&lt; Char &gt; &amp;os, const <a class="el" href="structdesignlab_1_1_vector3docs">Vector3</a> &amp;v)</td></tr>
<tr class="memdesc:a267d1ab3d8486e12343e425b81bbd08d"><td class="mdescLeft">&#160;</td><td class="mdescRight">出力ストリーム． ToCsvString と同じ形式で出力する． <br /></td></tr>
<tr class="separator:a267d1ab3d8486e12343e425b81bbd08d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a135718838a3b93b4ad0d0e45bec98fff" id="r_a135718838a3b93b4ad0d0e45bec98fff"><td class="memTemplParams" colspan="2"><a id="a135718838a3b93b4ad0d0e45bec98fff" name="a135718838a3b93b4ad0d0e45bec98fff"></a>
template&lt;class Char &gt; </td></tr>
<tr class="memitem:a135718838a3b93b4ad0d0e45bec98fff"><td class="memTemplItemLeft" align="right" valign="top">std::basic_istream&lt; Char &gt; &amp;&#160;</td><td class="memTemplItemRight" valign="bottom"><b>operator&gt;&gt;</b> (std::basic_istream&lt; Char &gt; &amp;is, <a class="el" href="structdesignlab_1_1_vector3docs">Vector3</a> &amp;v)</td></tr>
<tr class="memdesc:a135718838a3b93b4ad0d0e45bec98fff"><td class="mdescLeft">&#160;</td><td class="mdescRight">入力ストリーム． <br /></td></tr>
<tr class="separator:a135718838a3b93b4ad0d0e45bec98fff"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a41aab70c5a873baa6d3c016ea44a70cc" id="r_a41aab70c5a873baa6d3c016ea44a70cc"><td class="memItemLeft" align="right" valign="top"><a id="a41aab70c5a873baa6d3c016ea44a70cc" name="a41aab70c5a873baa6d3c016ea44a70cc"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>DESIGNLAB_TOML11_DESCRIPTION_CLASS</b> (<a class="el" href="structdesignlab_1_1_phantom_x_mk_i_i_parameter_recorddocs">PhantomXMkIIParameterRecord</a>)</td></tr>
<tr class="separator:a41aab70c5a873baa6d3c016ea44a70cc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adca931d9254e9249001b2f7728f53ab4" id="r_adca931d9254e9249001b2f7728f53ab4"><td class="memItemLeft" align="right" valign="top"><a id="adca931d9254e9249001b2f7728f53ab4" name="adca931d9254e9249001b2f7728f53ab4"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>DESIGNLAB_TOML11_DESCRIPTION_CLASS</b> (<a class="el" href="structdesignlab_1_1_robot_operationdocs">RobotOperation</a>)</td></tr>
<tr class="separator:adca931d9254e9249001b2f7728f53ab4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a544838e1c21678697fe16489f01767ba" id="r_a544838e1c21678697fe16489f01767ba"><td class="memTemplParams" colspan="2"><a id="a544838e1c21678697fe16489f01767ba" name="a544838e1c21678697fe16489f01767ba"></a>
template&lt;class Char &gt; </td></tr>
<tr class="memitem:a544838e1c21678697fe16489f01767ba"><td class="memTemplItemLeft" align="right" valign="top">std::basic_ostream&lt; Char &gt; &amp;&#160;</td><td class="memTemplItemRight" valign="bottom"><b>operator&lt;&lt;</b> (std::basic_ostream&lt; Char &gt; &amp;os, const <a class="el" href="structdesignlab_1_1_robot_state_nodedocs">RobotStateNode</a> &amp;value)</td></tr>
<tr class="separator:a544838e1c21678697fe16489f01767ba"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7ec25f4a6b0bca8300fbb5ebde6e5ac4" id="r_a7ec25f4a6b0bca8300fbb5ebde6e5ac4"><td class="memItemLeft" align="right" valign="top"><a id="a7ec25f4a6b0bca8300fbb5ebde6e5ac4" name="a7ec25f4a6b0bca8300fbb5ebde6e5ac4"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>DESIGNLAB_TOML11_DESCRIPTION_CLASS</b> (<a class="el" href="structdesignlab_1_1_simulation_map_parameterdocs">SimulationMapParameter</a>)</td></tr>
<tr class="separator:a7ec25f4a6b0bca8300fbb5ebde6e5ac4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a055b520ef1015136ed13b09a537efb44" id="r_a055b520ef1015136ed13b09a537efb44"><td class="memItemLeft" align="right" valign="top"><a id="a055b520ef1015136ed13b09a537efb44" name="a055b520ef1015136ed13b09a537efb44"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>DESIGNLAB_TOML11_DESCRIPTION_CLASS</b> (<a class="el" href="structdesignlab_1_1_simulation_setting_recorddocs">SimulationSettingRecord</a>)</td></tr>
<tr class="separator:a055b520ef1015136ed13b09a537efb44"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="var-members" name="var-members"></a>
変数</h2></td></tr>
<tr class="memitem:ab11bb3b4e663eaabdebee5dddcea6d7d" id="r_ab11bb3b4e663eaabdebee5dddcea6d7d"><td class="memItemLeft" align="right" valign="top"><a id="ab11bb3b4e663eaabdebee5dddcea6d7d" name="ab11bb3b4e663eaabdebee5dddcea6d7d"></a>
constexpr unsigned int&#160;</td><td class="memItemRight" valign="bottom"><b>kDxlibGuiAnchorLeft</b> = 1 &lt;&lt; 0</td></tr>
<tr class="separator:ab11bb3b4e663eaabdebee5dddcea6d7d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a47768117974f9a4cfc656172b7883567" id="r_a47768117974f9a4cfc656172b7883567"><td class="memItemLeft" align="right" valign="top"><a id="a47768117974f9a4cfc656172b7883567" name="a47768117974f9a4cfc656172b7883567"></a>
constexpr unsigned int&#160;</td><td class="memItemRight" valign="bottom"><b>kDxlibGuiAnchorMiddleX</b> = 1 &lt;&lt; 1</td></tr>
<tr class="separator:a47768117974f9a4cfc656172b7883567"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac38bbd15d0858800247199b87816bdc6" id="r_ac38bbd15d0858800247199b87816bdc6"><td class="memItemLeft" align="right" valign="top"><a id="ac38bbd15d0858800247199b87816bdc6" name="ac38bbd15d0858800247199b87816bdc6"></a>
constexpr unsigned int&#160;</td><td class="memItemRight" valign="bottom"><b>kDxlibGuiAnchorRight</b> = 1 &lt;&lt; 2</td></tr>
<tr class="separator:ac38bbd15d0858800247199b87816bdc6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a243f54073ec0650e2a5670f53002e909" id="r_a243f54073ec0650e2a5670f53002e909"><td class="memItemLeft" align="right" valign="top"><a id="a243f54073ec0650e2a5670f53002e909" name="a243f54073ec0650e2a5670f53002e909"></a>
constexpr unsigned int&#160;</td><td class="memItemRight" valign="bottom"><b>kDxlibGuiAnchorTop</b> = 1 &lt;&lt; 3</td></tr>
<tr class="separator:a243f54073ec0650e2a5670f53002e909"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af564d187d154a9c518be92e179bd7b03" id="r_af564d187d154a9c518be92e179bd7b03"><td class="memItemLeft" align="right" valign="top"><a id="af564d187d154a9c518be92e179bd7b03" name="af564d187d154a9c518be92e179bd7b03"></a>
constexpr unsigned int&#160;</td><td class="memItemRight" valign="bottom"><b>kDxlibGuiAnchorMiddleY</b> = 1 &lt;&lt; 4</td></tr>
<tr class="separator:af564d187d154a9c518be92e179bd7b03"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a50191ffbef8cb53dd9ff2885e73fcd1f" id="r_a50191ffbef8cb53dd9ff2885e73fcd1f"><td class="memItemLeft" align="right" valign="top"><a id="a50191ffbef8cb53dd9ff2885e73fcd1f" name="a50191ffbef8cb53dd9ff2885e73fcd1f"></a>
constexpr unsigned int&#160;</td><td class="memItemRight" valign="bottom"><b>kDxlibGuiAnchorBottom</b> = 1 &lt;&lt; 5</td></tr>
<tr class="separator:a50191ffbef8cb53dd9ff2885e73fcd1f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adece34d16ec2a1d25a21b89cf6f1aa44" id="r_adece34d16ec2a1d25a21b89cf6f1aa44"><td class="memItemLeft" align="right" valign="top"><a id="adece34d16ec2a1d25a21b89cf6f1aa44" name="adece34d16ec2a1d25a21b89cf6f1aa44"></a>
constexpr unsigned int&#160;</td><td class="memItemRight" valign="bottom"><b>kDxlibGuiAnchorLeftTop</b> = kDxlibGuiAnchorLeft | kDxlibGuiAnchorTop</td></tr>
<tr class="separator:adece34d16ec2a1d25a21b89cf6f1aa44"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac20eeb869ebeff1677b0f028bf6443d6" id="r_ac20eeb869ebeff1677b0f028bf6443d6"><td class="memItemLeft" align="right" valign="top"><a id="ac20eeb869ebeff1677b0f028bf6443d6" name="ac20eeb869ebeff1677b0f028bf6443d6"></a>
constexpr unsigned int&#160;</td><td class="memItemRight" valign="bottom"><b>kDxlibGuiAnchorLeftMiddleY</b> = kDxlibGuiAnchorLeft | kDxlibGuiAnchorMiddleY</td></tr>
<tr class="separator:ac20eeb869ebeff1677b0f028bf6443d6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac23615ac07844d3fc2b751c88101820b" id="r_ac23615ac07844d3fc2b751c88101820b"><td class="memItemLeft" align="right" valign="top"><a id="ac23615ac07844d3fc2b751c88101820b" name="ac23615ac07844d3fc2b751c88101820b"></a>
constexpr unsigned int&#160;</td><td class="memItemRight" valign="bottom"><b>kDxlibGuiAnchorLeftBottom</b> = kDxlibGuiAnchorLeft | kDxlibGuiAnchorBottom</td></tr>
<tr class="separator:ac23615ac07844d3fc2b751c88101820b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af7ec6a0027f92a1ad0031e183cf2bf9b" id="r_af7ec6a0027f92a1ad0031e183cf2bf9b"><td class="memItemLeft" align="right" valign="top"><a id="af7ec6a0027f92a1ad0031e183cf2bf9b" name="af7ec6a0027f92a1ad0031e183cf2bf9b"></a>
constexpr unsigned int&#160;</td><td class="memItemRight" valign="bottom"><b>kDxlibGuiAnchorMiddleXTop</b> = kDxlibGuiAnchorMiddleX | kDxlibGuiAnchorTop</td></tr>
<tr class="separator:af7ec6a0027f92a1ad0031e183cf2bf9b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa522c1f6c02a7246a1dd9f1c6f6dd61a" id="r_aa522c1f6c02a7246a1dd9f1c6f6dd61a"><td class="memItemLeft" align="right" valign="top"><a id="aa522c1f6c02a7246a1dd9f1c6f6dd61a" name="aa522c1f6c02a7246a1dd9f1c6f6dd61a"></a>
constexpr unsigned int&#160;</td><td class="memItemRight" valign="bottom"><b>kDxlibGuiAnchorMiddleXMiddleY</b> = kDxlibGuiAnchorMiddleX | kDxlibGuiAnchorMiddleY</td></tr>
<tr class="separator:aa522c1f6c02a7246a1dd9f1c6f6dd61a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad6d1e343b192f40f00ea3b7086c5e0a0" id="r_ad6d1e343b192f40f00ea3b7086c5e0a0"><td class="memItemLeft" align="right" valign="top"><a id="ad6d1e343b192f40f00ea3b7086c5e0a0" name="ad6d1e343b192f40f00ea3b7086c5e0a0"></a>
constexpr unsigned int&#160;</td><td class="memItemRight" valign="bottom"><b>kDxlibGuiAnchorMiddleXBottom</b> = kDxlibGuiAnchorMiddleX | kDxlibGuiAnchorBottom</td></tr>
<tr class="separator:ad6d1e343b192f40f00ea3b7086c5e0a0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac90cba7815066edcd14353985f91b616" id="r_ac90cba7815066edcd14353985f91b616"><td class="memItemLeft" align="right" valign="top"><a id="ac90cba7815066edcd14353985f91b616" name="ac90cba7815066edcd14353985f91b616"></a>
constexpr unsigned int&#160;</td><td class="memItemRight" valign="bottom"><b>kDxlibGuiAnchorRightTop</b> = kDxlibGuiAnchorRight | kDxlibGuiAnchorTop</td></tr>
<tr class="separator:ac90cba7815066edcd14353985f91b616"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abbade721813e4348c7e040ae0489d90b" id="r_abbade721813e4348c7e040ae0489d90b"><td class="memItemLeft" align="right" valign="top"><a id="abbade721813e4348c7e040ae0489d90b" name="abbade721813e4348c7e040ae0489d90b"></a>
constexpr unsigned int&#160;</td><td class="memItemRight" valign="bottom"><b>kDxlibGuiAnchorRightMiddleY</b> = kDxlibGuiAnchorRight | kDxlibGuiAnchorMiddleY</td></tr>
<tr class="separator:abbade721813e4348c7e040ae0489d90b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad91a516e8d4f0a66944ffb0e5927fc0b" id="r_ad91a516e8d4f0a66944ffb0e5927fc0b"><td class="memItemLeft" align="right" valign="top"><a id="ad91a516e8d4f0a66944ffb0e5927fc0b" name="ad91a516e8d4f0a66944ffb0e5927fc0b"></a>
constexpr unsigned int&#160;</td><td class="memItemRight" valign="bottom"><b>kDxlibGuiAnchorRightBottom</b> = kDxlibGuiAnchorRight | kDxlibGuiAnchorBottom</td></tr>
<tr class="separator:ad91a516e8d4f0a66944ffb0e5927fc0b"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">詳解</h2>
<div class="textblock"><dl class="section author"><dt>著者</dt><dd>hasegawa </dd></dl>
<dl class="section copyright"><dt>著作権所有</dt><dd>(C) 2023 Design Engineering Laboratory, Saitama University All right reserved.</dd></dl>
<dl class="section author"><dt>著者</dt><dd>Hasegawa </dd></dl>
<dl class="section copyright"><dt>著作権所有</dt><dd>(C) 2023 Design Engineering Laboratory, Saitama University All right reserved.</dd></dl>
<dl class="section author"><dt>著者</dt><dd>hasegawa </dd></dl>
<dl class="section copyright"><dt>著作権所有</dt><dd>© 埼玉大学 設計工学研究室 2024. All right reserved.</dd></dl>
<dl class="section author"><dt>著者</dt><dd>Hasegawa </dd></dl>
<dl class="section copyright"><dt>著作権所有</dt><dd>埼玉大学 設計工学研究室 2023. All right reserved.</dd></dl>
<dl class="section author"><dt>著者</dt><dd>hasegawa </dd></dl>
<dl class="section copyright"><dt>著作権所有</dt><dd>埼玉大学 設計工学研究室 2024. All right reserved.</dd></dl>
<dl class="section author"><dt>著者</dt><dd>Hasegawa </dd></dl>
<dl class="section copyright"><dt>著作権所有</dt><dd>(C) 2024 Design Engineering Laboratory, Saitama University All right reserved.</dd></dl>
<dl class="section author"><dt>著者</dt><dd>Hasegawa </dd></dl>
<dl class="section copyright"><dt>著作権所有</dt><dd>© 埼玉大学 設計工学研究室 2024. All right reserved.</dd></dl>
<dl class="todo"><dt><b><a class="el" href="tododocs#_todo000008">todo:</a></b></dt><dd>仮置きのはずが，本実装になっているので，後で直す </dd></dl>
</div><h2 class="groupheader">列挙型詳解</h2>
<a id="a1c0bd326dd9c0d2105ada8e416781a2d" name="a1c0bd326dd9c0d2105ada8e416781a2d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1c0bd326dd9c0d2105ada8e416781a2d">&#9670;&#160;</a></span>BootMode</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">enum class <a class="el" href="namespacedesignlabdocs#a1c0bd326dd9c0d2105ada8e416781a2d">designlab::BootMode</a> : int</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">strong</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>起動モードを表す列挙型． </p>
<dl class="section see"><dt>参照</dt><dd><a class="el" href="classdesignlab_1_1_boot_mode_selectordocs" title="起動モードを選択するクラス．">BootModeSelector</a> </dd></dl>
<table class="fieldtable">
<tr><th colspan="2">列挙値</th></tr><tr><td class="fieldname"><a id="a1c0bd326dd9c0d2105ada8e416781a2da2fa097ed9ce9f4197ea504a3cfb6e64c" name="a1c0bd326dd9c0d2105ada8e416781a2da2fa097ed9ce9f4197ea504a3cfb6e64c"></a>kSimulation&#160;</td><td class="fielddoc"><p>シミュレーションモード． </p>
</td></tr>
<tr><td class="fieldname"><a id="a1c0bd326dd9c0d2105ada8e416781a2da7733091bca48e4a6b229c03f2e9822b3" name="a1c0bd326dd9c0d2105ada8e416781a2da7733091bca48e4a6b229c03f2e9822b3"></a>kViewer&#160;</td><td class="fielddoc"><p>ビューワーモード． </p>
</td></tr>
<tr><td class="fieldname"><a id="a1c0bd326dd9c0d2105ada8e416781a2da3d96f89a15b643bab17db0d85e517426" name="a1c0bd326dd9c0d2105ada8e416781a2da3d96f89a15b643bab17db0d85e517426"></a>kDisplayModel&#160;</td><td class="fielddoc"><p>ディスプレイモード． </p>
</td></tr>
<tr><td class="fieldname"><a id="a1c0bd326dd9c0d2105ada8e416781a2dadfb97d663a8c7f7610682c58b25dadc0" name="a1c0bd326dd9c0d2105ada8e416781a2dadfb97d663a8c7f7610682c58b25dadc0"></a>kResultViewer&#160;</td><td class="fielddoc"><p>リザルトビューワーモード． </p>
</td></tr>
<tr><td class="fieldname"><a id="a1c0bd326dd9c0d2105ada8e416781a2da209d9dada7daadcd6fbb065ff6a80a2e" name="a1c0bd326dd9c0d2105ada8e416781a2da209d9dada7daadcd6fbb065ff6a80a2e"></a>kRobotControl&#160;</td><td class="fielddoc"><p>ロボットコントロールモード． </p>
</td></tr>
</table>

</div>
</div>
<a id="a53323f0d14b3c1aef6879f5b9ceffc3d" name="a53323f0d14b3c1aef6879f5b9ceffc3d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a53323f0d14b3c1aef6879f5b9ceffc3d">&#9670;&#160;</a></span>DisplayQuality</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">enum class <a class="el" href="namespacedesignlabdocs#a53323f0d14b3c1aef6879f5b9ceffc3d">designlab::DisplayQuality</a> : int</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">strong</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>描画の品質設定を示す列挙体． </p>
<p>enum DisplayQuality </p>
<table class="fieldtable">
<tr><th colspan="2">列挙値</th></tr><tr><td class="fieldname"><a id="a53323f0d14b3c1aef6879f5b9ceffc3dacd8fe42741a3bbc973bbf1d404afeff4" name="a53323f0d14b3c1aef6879f5b9ceffc3dacd8fe42741a3bbc973bbf1d404afeff4"></a>kLow&#160;</td><td class="fielddoc"><p>低品質． </p>
</td></tr>
<tr><td class="fieldname"><a id="a53323f0d14b3c1aef6879f5b9ceffc3da3ce9d817402b59f65fb01ea044bb1ee9" name="a53323f0d14b3c1aef6879f5b9ceffc3da3ce9d817402b59f65fb01ea044bb1ee9"></a>kMedium&#160;</td><td class="fielddoc"><p>中品質． </p>
</td></tr>
<tr><td class="fieldname"><a id="a53323f0d14b3c1aef6879f5b9ceffc3daa022f15e910eb36278094efb6e808a07" name="a53323f0d14b3c1aef6879f5b9ceffc3daa022f15e910eb36278094efb6e808a07"></a>kHigh&#160;</td><td class="fielddoc"><p>高品質． </p>
</td></tr>
</table>

</div>
</div>
<a id="acc7368f4060dfdf3589ada8d62dd8a81" name="acc7368f4060dfdf3589ada8d62dd8a81"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acc7368f4060dfdf3589ada8d62dd8a81">&#9670;&#160;</a></span>HexapodMove</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">enum class <a class="el" href="namespacedesignlabdocs#acc7368f4060dfdf3589ada8d62dd8a81">designlab::HexapodMove</a> : int</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">strong</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>ロボットが次にどの動作をするのかを表す列挙体． </p>
<p>先行研究では int型の変数 debug を用いていたが，可読性が低いので列挙体を用いる． </p>
<table class="fieldtable">
<tr><th colspan="2">列挙値</th></tr><tr><td class="fieldname"><a id="acc7368f4060dfdf3589ada8d62dd8a81a35c3ace1970663a16e5c65baa5941b13" name="acc7368f4060dfdf3589ada8d62dd8a81a35c3ace1970663a16e5c65baa5941b13"></a>kNone&#160;</td><td class="fielddoc"><p>何も動作をしない． </p>
</td></tr>
<tr><td class="fieldname"><a id="acc7368f4060dfdf3589ada8d62dd8a81a4a6461c86ef75a5e573c7159b8f899af" name="acc7368f4060dfdf3589ada8d62dd8a81a4a6461c86ef75a5e573c7159b8f899af"></a>kLegUpDown&#160;</td><td class="fielddoc"><p>脚の上下移動. </p>
</td></tr>
<tr><td class="fieldname"><a id="acc7368f4060dfdf3589ada8d62dd8a81a7a0d289d2c7258b2f617388cded82812" name="acc7368f4060dfdf3589ada8d62dd8a81a7a0d289d2c7258b2f617388cded82812"></a>kLegHierarchyChange&#160;</td><td class="fielddoc"><p>脚の平行移動．脚の階層を変更する． </p>
</td></tr>
<tr><td class="fieldname"><a id="acc7368f4060dfdf3589ada8d62dd8a81a54a0fd06169e7dc14648d41420e7385c" name="acc7368f4060dfdf3589ada8d62dd8a81a54a0fd06169e7dc14648d41420e7385c"></a>kComMove&#160;</td><td class="fielddoc"><p>重心の平行移動．Center Of Massで重心のこと． </p>
</td></tr>
<tr><td class="fieldname"><a id="acc7368f4060dfdf3589ada8d62dd8a81a6428915b783a686f1dfed18358d57bc7" name="acc7368f4060dfdf3589ada8d62dd8a81a6428915b783a686f1dfed18358d57bc7"></a>kComUpDown&#160;</td><td class="fielddoc"><p>重心の上下移動． </p>
</td></tr>
<tr><td class="fieldname"><a id="acc7368f4060dfdf3589ada8d62dd8a81a182913de9e1d9a06377ab8c7e93c9800" name="acc7368f4060dfdf3589ada8d62dd8a81a182913de9e1d9a06377ab8c7e93c9800"></a>kBodyPitchRot&#160;</td><td class="fielddoc"><p>ピッチ軸周りの回転． </p>
</td></tr>
<tr><td class="fieldname"><a id="acc7368f4060dfdf3589ada8d62dd8a81ad3c33ddfb2a26d82caa154fcf33350a5" name="acc7368f4060dfdf3589ada8d62dd8a81ad3c33ddfb2a26d82caa154fcf33350a5"></a>kBodyYawRot&#160;</td><td class="fielddoc"><p>ヨー軸周りの回転． </p>
</td></tr>
</table>

</div>
</div>
<a id="a43f5ea9398e73bc5134e238b7e8c5645" name="a43f5ea9398e73bc5134e238b7e8c5645"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a43f5ea9398e73bc5134e238b7e8c5645">&#9670;&#160;</a></span>OutputDetail</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">enum class <a class="el" href="namespacedesignlabdocs#a43f5ea9398e73bc5134e238b7e8c5645">designlab::OutputDetail</a> : int</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">strong</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>コマンドラインに文字を出力する際に，その詳細を指定するための列挙体． </p>
<p>設定ファイルで指定されたもの以上のメッセージのみ出力する． </p>
<table class="fieldtable">
<tr><th colspan="2">列挙値</th></tr><tr><td class="fieldname"><a id="a43f5ea9398e73bc5134e238b7e8c5645a2c9d4d4ca70df56c762f0140f57dbdfb" name="a43f5ea9398e73bc5134e238b7e8c5645a2c9d4d4ca70df56c762f0140f57dbdfb"></a>kSystem&#160;</td><td class="fielddoc"><p>システムメッセージ，常に出力する． </p>
</td></tr>
<tr><td class="fieldname"><a id="a43f5ea9398e73bc5134e238b7e8c5645ae3587c730cc1aa530fa4ddc9c4204e97" name="a43f5ea9398e73bc5134e238b7e8c5645ae3587c730cc1aa530fa4ddc9c4204e97"></a>kError&#160;</td><td class="fielddoc"><p>エラーメッセージ． </p>
</td></tr>
<tr><td class="fieldname"><a id="a43f5ea9398e73bc5134e238b7e8c5645aec0da41f4e48b52c362303eb27ed5dee" name="a43f5ea9398e73bc5134e238b7e8c5645aec0da41f4e48b52c362303eb27ed5dee"></a>kWarning&#160;</td><td class="fielddoc"><p>警告メッセージ，エラーではないが注意が必要なメッセージ． </p>
</td></tr>
<tr><td class="fieldname"><a id="a43f5ea9398e73bc5134e238b7e8c5645a176a473e63c17ccdac91640c67f149bf" name="a43f5ea9398e73bc5134e238b7e8c5645a176a473e63c17ccdac91640c67f149bf"></a>kInfo&#160;</td><td class="fielddoc"><p>優先度低めの情報． </p>
</td></tr>
<tr><td class="fieldname"><a id="a43f5ea9398e73bc5134e238b7e8c5645abb53ce21b7c0b7c8a8f7860a41901d29" name="a43f5ea9398e73bc5134e238b7e8c5645abb53ce21b7c0b7c8a8f7860a41901d29"></a>kDebug&#160;</td><td class="fielddoc"><p>デバッグ時のみ出力，一番優先度が低い． </p>
</td></tr>
</table>

</div>
</div>
<a id="a3f1608338ad72e7ffe1024af10173b73" name="a3f1608338ad72e7ffe1024af10173b73"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3f1608338ad72e7ffe1024af10173b73">&#9670;&#160;</a></span>RobotOperationType</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">enum class <a class="el" href="namespacedesignlabdocs#a3f1608338ad72e7ffe1024af10173b73">designlab::RobotOperationType</a> : int</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">strong</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Robotをどのように動かすかを表す列挙体． </p>
<table class="fieldtable">
<tr><th colspan="2">列挙値</th></tr><tr><td class="fieldname"><a id="a3f1608338ad72e7ffe1024af10173b73a35c3ace1970663a16e5c65baa5941b13" name="a3f1608338ad72e7ffe1024af10173b73a35c3ace1970663a16e5c65baa5941b13"></a>kNone&#160;</td><td class="fielddoc"><p>無効値． </p>
</td></tr>
<tr><td class="fieldname"><a id="a3f1608338ad72e7ffe1024af10173b73a59375d9badbbc17fc1acf25a5276e38f" name="a3f1608338ad72e7ffe1024af10173b73a59375d9badbbc17fc1acf25a5276e38f"></a>kStraightMoveVector&#160;</td><td class="fielddoc"><p>直線移動をさせる（移動したい方向をベクトルで示す） </p>
</td></tr>
<tr><td class="fieldname"><a id="a3f1608338ad72e7ffe1024af10173b73a8738b1472ce83f22b2b53b1d59030ebe" name="a3f1608338ad72e7ffe1024af10173b73a8738b1472ce83f22b2b53b1d59030ebe"></a>kStraightMovePosition&#160;</td><td class="fielddoc"><p>直線移動をさせる（移動したい座標を示す） </p>
</td></tr>
<tr><td class="fieldname"><a id="a3f1608338ad72e7ffe1024af10173b73af8407776554fc79437feff37aead8538" name="a3f1608338ad72e7ffe1024af10173b73af8407776554fc79437feff37aead8538"></a>kSpotTurnLastPosture&#160;</td><td class="fielddoc"><p>その場で旋回させる（最終的な姿勢 Posture を示す） </p>
</td></tr>
<tr><td class="fieldname"><a id="a3f1608338ad72e7ffe1024af10173b73a32efdb36a9070a5a5042b2db2a492f61" name="a3f1608338ad72e7ffe1024af10173b73a32efdb36a9070a5a5042b2db2a492f61"></a>kSpotTurnRotAxis&#160;</td><td class="fielddoc"><p>その場で旋回させる（回転軸を示し，その軸周りの右ねじの回転） </p>
</td></tr>
<tr><td class="fieldname"><a id="a3f1608338ad72e7ffe1024af10173b73a93e026b035316bd2e27673dccb7bda19" name="a3f1608338ad72e7ffe1024af10173b73a93e026b035316bd2e27673dccb7bda19"></a>kTurn&#160;</td><td class="fielddoc"><p>旋回中心と，旋回半径と，旋回方向を与えて旋回させる． </p>
</td></tr>
</table>

</div>
</div>
<h2 class="groupheader">関数詳解</h2>
<a id="a4344242853579d856797b3b8c48bbe24" name="a4344242853579d856797b3b8c48bbe24"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4344242853579d856797b3b8c48bbe24">&#9670;&#160;</a></span>operator*() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr <a class="el" href="structdesignlab_1_1_vector3docs">Vector3</a> designlab::operator* </td>
          <td>(</td>
          <td class="paramtype">const float&#160;</td>
          <td class="paramname"><em>s</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structdesignlab_1_1_vector3docs">Vector3</a> &amp;&#160;</td>
          <td class="paramname"><em>vec</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">constexpr</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>スカラーが先に来る場合の掛け算演算子． </p>
<dl class="params"><dt>引数</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">s</td><td>スカラー． </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">vec</td><td>ベクトル． </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>戻り値</dt><dd>スカラーとベクトルの掛け算結果． </dd></dl>

</div>
</div>
<a id="a5c0b111e17683a8a0fc71d3500672211" name="a5c0b111e17683a8a0fc71d3500672211"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5c0b111e17683a8a0fc71d3500672211">&#9670;&#160;</a></span>operator*() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr <a class="el" href="structdesignlab_1_1_vector2docs">Vector2</a> designlab::operator* </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>s</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structdesignlab_1_1_vector2docs">Vector2</a> &amp;&#160;</td>
          <td class="paramname"><em>v</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>スカラーが先に来る場合の掛け算演算子． </p>
<dl class="params"><dt>引数</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">s</td><td>スカラー． </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">v</td><td>ベクトル． </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>戻り値</dt><dd>s * v． </dd></dl>

</div>
</div>
<a id="a703ec0b7e06057a8997a4b22d50c5c9d" name="a703ec0b7e06057a8997a4b22d50c5c9d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a703ec0b7e06057a8997a4b22d50c5c9d">&#9670;&#160;</a></span>RotateVector3() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structdesignlab_1_1_vector3docs">Vector3</a> designlab::RotateVector3 </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structdesignlab_1_1_vector3docs">Vector3</a> &amp;&#160;</td>
          <td class="paramname"><em>vec</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structdesignlab_1_1_euler_x_y_zdocs">EulerXYZ</a> &amp;&#160;</td>
          <td class="paramname"><em>rot</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>回転させたベクトルを返す．三角関数の処理が多く重たいので注意． </p>
<dl class="params"><dt>引数</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">vec</td><td>位置ベクトル． </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rot</td><td>回転ベクトル． </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>戻り値</dt><dd>回転した後の位置ベクトル． </dd></dl>
<div class="dynheader">
呼び出し関係図:</div>
<div class="dyncontent">
<div class="center"><img src="namespacedesignlab_a703ec0b7e06057a8997a4b22d50c5c9d_cgraph.png" border="0" usemap="#anamespacedesignlab_a703ec0b7e06057a8997a4b22d50c5c9d_cgraph" alt=""/></div>
<map name="anamespacedesignlab_a703ec0b7e06057a8997a4b22d50c5c9d_cgraph" id="anamespacedesignlab_a703ec0b7e06057a8997a4b22d50c5c9d_cgraph">
<area shape="rect" title="回転させたベクトルを返す．三角関数の処理が多く重たいので注意．" alt="" coords="5,29,173,56"/>
<area shape="poly" title=" " alt="" coords="51,30,45,21,49,11,64,5,89,3,115,5,130,12,127,16,114,10,89,8,66,10,53,15,50,20,56,27"/>
<area shape="rect" href="namespacedesignlabdocs#a8183abef6391dd2b5c396f1fa3062294" title="クォータニオンから回転角行列への変換．" alt="" coords="221,29,403,56"/>
<area shape="poly" title=" " alt="" coords="173,40,205,40,205,45,173,45"/>
<area shape="rect" href="structdesignlab_1_1_quaterniondocs#a2c504d31353e189b1fa7a83cfd60deba" title="正規化したクォータニオンを返す． &#160;&#160;クォータニオンの正規化とは，ノルムを1にすることを表す． &#160;&#160;クォータニオンqの正規化は，q / |q| で求められる．" alt="" coords="451,21,598,64"/>
<area shape="poly" title=" " alt="" coords="404,40,436,40,436,45,404,45"/>
<area shape="rect" href="structdesignlab_1_1_quaterniondocs#a56bbbd522805450144f54aae7dbd117e" title="クォータニオンのノルムを返す． &#160;&#160;ノルムとは，ベクトルの大きさのこと． クォータニオンのノルムは，w^2 + x^2 + y^2 + z^2 の平方根で求められる．" alt="" coords="646,21,794,64"/>
<area shape="poly" title=" " alt="" coords="599,40,630,40,630,45,599,45"/>
</map>
</div>
<div class="dynheader">
被呼び出し関係図:</div>
<div class="dyncontent">
<div class="center"><img src="namespacedesignlab_a703ec0b7e06057a8997a4b22d50c5c9d_icgraph.png" border="0" usemap="#anamespacedesignlab_a703ec0b7e06057a8997a4b22d50c5c9d_icgraph" alt=""/></div>
<map name="anamespacedesignlab_a703ec0b7e06057a8997a4b22d50c5c9d_icgraph" id="anamespacedesignlab_a703ec0b7e06057a8997a4b22d50c5c9d_icgraph">
<area shape="rect" title="回転させたベクトルを返す．三角関数の処理が多く重たいので注意．" alt="" coords="507,305,674,332"/>
<area shape="poly" title=" " alt="" coords="633,293,618,286,591,284,565,286,551,291,548,296,554,303,550,307,543,297,548,287,564,281,591,279,620,281,635,288"/>
<area shape="rect" href="structdesignlab_1_1_robot_state_nodedocs#a28bedf0298ebf8f315a21294dd111f45" title="重心位置を変更する関数．" alt="" coords="253,76,446,119"/>
<area shape="poly" title=" " alt="" coords="574,293,528,219,495,179,457,143,419,121,422,117,461,139,499,175,532,216,578,290"/>
<area shape="rect" href="classdesignlab_1_1_node_creator_com_move_straightdocs#a3e2fd67280dd581a695a09cea4f816a4" title="現在のノードから次のノード群を生成する．" alt="" coords="7,139,190,181"/>
<area shape="poly" title=" " alt="" coords="571,294,525,238,493,210,458,188,391,165,321,153,252,150,191,152,190,146,252,144,322,148,393,160,460,183,497,205,528,234,575,291"/>
<area shape="rect" href="structdesignlab_1_1_robot_state_nodedocs#a73efce324f3ffd5ead5fbc663acd96a2" title="クォータニオンを変更し，胴体を回転させる関数．" alt="" coords="260,197,439,240"/>
<area shape="poly" title=" " alt="" coords="551,300,458,254,427,243,429,238,460,250,553,295"/>
<area shape="rect" href="classdesignlab_1_1_phantom_x_mk_i_idocs#a0630fa1d537f7e00aa422a83c98ebdda" title="グローバル座標系で表現されている座標を，脚座標系に変換する．" alt="" coords="246,264,453,307"/>
<area shape="poly" title=" " alt="" coords="491,308,453,302,453,297,492,302"/>
<area shape="rect" href="classdesignlab_1_1_phantom_x_mk_i_idocs#a028f4e024ebebca50325beef3444bfc5" title="脚座標系で表現されている座標を，グローバル座標系に変換する．" alt="" coords="246,331,453,373"/>
<area shape="poly" title=" " alt="" coords="492,335,453,340,453,335,491,330"/>
<area shape="rect" href="classdesignlab_1_1_phantom_x_mk_i_idocs#ae4b923566d06eef5f765b1e7afdd57ae" title="ロボット座標系で表現されている座標を，グローバル座標系に変換する．" alt="" coords="240,397,459,440"/>
<area shape="poly" title=" " alt="" coords="553,342,460,388,429,399,427,394,458,383,551,337"/>
<area shape="rect" href="classdesignlab_1_1_camera_draggerdocs#ad9f9da3070ea76a8ae205590e5599d10" title="ドラッグ中の処理を行う． &#160;&#160;カーソルは上にあるけど，ドラッグ中ではない場合でも呼び出される．" alt="" coords="262,464,437,507"/>
<area shape="poly" title=" " alt="" coords="573,346,526,401,495,429,460,454,438,466,435,461,458,450,491,425,522,397,569,343"/>
<area shape="rect" href="classdesignlab_1_1_com_selectordocs#afe154bc35f0971d6c2c2a649299b23c3" title="重心を求める．" alt="" coords="270,531,429,573"/>
<area shape="poly" title=" " alt="" coords="581,347,563,386,537,433,503,480,461,521,431,537,428,533,457,517,499,477,533,430,559,384,576,345"/>
<area shape="rect" href="classdesignlab_1_1_node_creator_com_movedocs#a3fc5ccbce7199f0c7a7ce9ca5f4c221a" title="現在のノードから次のノード群を生成する．" alt="" coords="7,5,190,48"/>
<area shape="poly" title=" " alt="" coords="255,74,176,51,178,46,257,69"/>
<area shape="poly" title=" " alt="" coords="247,125,187,141,186,136,246,120"/>
<area shape="rect" href="classdesignlab_1_1_node_initializerdocs#a717aea9fc00fcb51c5ba3518fac717fc" title="地形に適した初期姿勢を設定する．" alt="" coords="16,72,181,115"/>
<area shape="poly" title=" " alt="" coords="237,98,182,97,182,92,237,93"/>
<area shape="rect" href="classdesignlab_1_1_node_creator_body_rotdocs#a162277203f0422a351c4d24e8167d43d" title="現在のノードから次のノード群を生成する．" alt="" coords="5,205,192,248"/>
<area shape="poly" title=" " alt="" coords="244,225,192,226,192,221,244,219"/>
</map>
</div>

</div>
</div>
<a id="a60f10cf89b782d822987acc6e655a2a7" name="a60f10cf89b782d822987acc6e655a2a7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a60f10cf89b782d822987acc6e655a2a7">&#9670;&#160;</a></span>RotateVector3() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr <a class="el" href="structdesignlab_1_1_vector3docs">Vector3</a> designlab::RotateVector3 </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structdesignlab_1_1_vector3docs">Vector3</a> &amp;&#160;</td>
          <td class="paramname"><em>vec</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structdesignlab_1_1_quaterniondocs">Quaternion</a> &amp;&#160;</td>
          <td class="paramname"><em>q</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>3次元の位置ベクトルを回転させる．必ず正規化クォータニオンを用いること． </p>
<dl class="params"><dt>引数</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">vec</td><td>回転させるベクトル． </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">q</td><td>回転させるクォータニオン． <br  />
 正規化クォータニオンならば，共役と逆数が等しいので， 計算量を減らすことができる． </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>戻り値</dt><dd>回転後のベクトル． </dd></dl>
<div class="dynheader">
呼び出し関係図:</div>
<div class="dyncontent">
<div class="center"><img src="namespacedesignlab_a60f10cf89b782d822987acc6e655a2a7_cgraph.png" border="0" usemap="#anamespacedesignlab_a60f10cf89b782d822987acc6e655a2a7_cgraph" alt=""/></div>
<map name="anamespacedesignlab_a60f10cf89b782d822987acc6e655a2a7_cgraph" id="anamespacedesignlab_a60f10cf89b782d822987acc6e655a2a7_cgraph">
<area shape="rect" title="3次元の位置ベクトルを回転させる．必ず正規化クォータニオンを用いること．" alt="" coords="5,80,173,107"/>
<area shape="rect" href="structdesignlab_1_1_quaterniondocs#a893ee3dc143f059822f17ead2f716de1" title="クォータニオンの共役を返す． 共役なクォータニオンとは，ベクトル成分の符号を反転させたもの &#160;&#160;q = w + xi + yj + zk とすると， qの共役は w &#45; xi &#45; yj &#45; zk となる..." alt="" coords="221,5,368,48"/>
<area shape="poly" title=" " alt="" coords="132,77,211,51,213,56,134,82"/>
<area shape="rect" href="structdesignlab_1_1_quaterniondocs#a56bbbd522805450144f54aae7dbd117e" title="クォータニオンのノルムを返す． &#160;&#160;ノルムとは，ベクトルの大きさのこと． クォータニオンのノルムは，w^2 + x^2 + y^2 + z^2 の平方根で求められる．" alt="" coords="221,72,368,115"/>
<area shape="poly" title=" " alt="" coords="173,91,205,91,205,96,173,96"/>
<area shape="rect" href="namespacedesignlab_1_1math__utildocs#a92c055e0799991e88871e2a5d4f09280" title="C++において，小数同士の計算は誤差が出てしまう． 誤差込みで値が等しいか調べる．" alt="" coords="226,139,363,181"/>
<area shape="poly" title=" " alt="" coords="134,105,213,131,211,136,132,110"/>
<area shape="rect" href="structdesignlab_1_1_quaterniondocs#a24ad10137dd081de9002ac270cdce9f9" title="クォータニオンの長さの2乗を返す(ノルムの2乗)． &#160;&#160;クォータニオンの長さの2乗は，w^2 + x^2 + y^2 + z^2 で求められる．" alt="" coords="416,72,563,115"/>
<area shape="poly" title=" " alt="" coords="369,91,400,91,400,96,369,96"/>
<area shape="rect" href="structdesignlab_1_1_vector3docs#aa0a76dfe9dc375fd09561734cf782f63" title="自分・引数 の内積の結果を返す．" alt="" coords="611,80,769,107"/>
<area shape="poly" title=" " alt="" coords="563,91,596,91,596,96,563,96"/>
</map>
</div>

</div>
</div>
<a id="a48a4ef221b2d87e2ea61724322d778be" name="a48a4ef221b2d87e2ea61724322d778be"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a48a4ef221b2d87e2ea61724322d778be">&#9670;&#160;</a></span>RotateVector3() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structdesignlab_1_1_vector3docs">Vector3</a> designlab::RotateVector3 </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structdesignlab_1_1_vector3docs">Vector3</a> &amp;&#160;</td>
          <td class="paramname"><em>vec</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structdesignlab_1_1_rotation_matrix3x3docs">RotationMatrix3x3</a> &amp;&#160;</td>
          <td class="paramname"><em>rot</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>回転させたベクトルを返す． </p>
<dl class="params"><dt>引数</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">vec</td><td>回転させるベクトル． </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rot</td><td>回転行列． </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>戻り値</dt><dd>回転させたベクトル． </dd></dl>

</div>
</div>
<a id="aa6386f09017c25f59fbdf0fa7088ec90" name="aa6386f09017c25f59fbdf0fa7088ec90"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa6386f09017c25f59fbdf0fa7088ec90">&#9670;&#160;</a></span>SlerpQuaternion()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structdesignlab_1_1_quaterniondocs">Quaternion</a> designlab::SlerpQuaternion </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structdesignlab_1_1_quaterniondocs">Quaternion</a> &amp;&#160;</td>
          <td class="paramname"><em>q1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structdesignlab_1_1_quaterniondocs">Quaternion</a> &amp;&#160;</td>
          <td class="paramname"><em>q2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>t</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>球面線形補間を行う． </p>
<dl class="params"><dt>引数</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">q1</td><td>クォータニオン1． </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">q2</td><td>クォータニオン2． </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">t</td><td>補間係数．0～1の値を取る． </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>戻り値</dt><dd>補間されたクォータニオン． </dd></dl>
<div class="dynheader">
呼び出し関係図:</div>
<div class="dyncontent">
<div class="center"><img src="namespacedesignlab_aa6386f09017c25f59fbdf0fa7088ec90_cgraph.png" border="0" usemap="#anamespacedesignlab_aa6386f09017c25f59fbdf0fa7088ec90_cgraph" alt=""/></div>
<map name="anamespacedesignlab_aa6386f09017c25f59fbdf0fa7088ec90_cgraph" id="anamespacedesignlab_aa6386f09017c25f59fbdf0fa7088ec90_cgraph">
<area shape="rect" title="球面線形補間を行う．" alt="" coords="5,35,183,61"/>
<area shape="rect" href="structdesignlab_1_1_quaterniondocs#afaac2f3922f46f7286a2e650f791cec4" title="クォータニオンの内積を返す． クォータニオンを4次元のベクトルとみなし，ベクトルの内積を求める．" alt="" coords="231,5,406,32"/>
<area shape="poly" title=" " alt="" coords="183,34,215,30,215,35,183,39"/>
<area shape="rect" href="namespacedesignlab_1_1math__utildocs#a92c055e0799991e88871e2a5d4f09280" title="C++において，小数同士の計算は誤差が出てしまう． 誤差込みで値が等しいか調べる．" alt="" coords="250,56,387,99"/>
<area shape="poly" title=" " alt="" coords="183,57,234,64,234,69,183,62"/>
<area shape="rect" href="structdesignlab_1_1_vector3docs#aa0a76dfe9dc375fd09561734cf782f63" title="自分・引数 の内積の結果を返す．" alt="" coords="454,5,611,32"/>
<area shape="poly" title=" " alt="" coords="406,16,438,16,438,21,406,21"/>
</map>
</div>
<div class="dynheader">
被呼び出し関係図:</div>
<div class="dyncontent">
<div class="center"><img src="namespacedesignlab_aa6386f09017c25f59fbdf0fa7088ec90_icgraph.png" border="0" usemap="#anamespacedesignlab_aa6386f09017c25f59fbdf0fa7088ec90_icgraph" alt=""/></div>
<map name="anamespacedesignlab_aa6386f09017c25f59fbdf0fa7088ec90_icgraph" id="anamespacedesignlab_aa6386f09017c25f59fbdf0fa7088ec90_icgraph">
<area shape="rect" title="球面線形補間を行う．" alt="" coords="212,13,389,40"/>
<area shape="rect" href="classdesignlab_1_1_dxlib_cameradocs#a849d4bd740e6cebcbe726c7a537d74be" title="カメラの位置などの更新を行う．毎フレーム実行すること．" alt="" coords="5,5,164,48"/>
<area shape="poly" title=" " alt="" coords="196,29,164,29,164,24,196,24"/>
</map>
</div>

</div>
</div>
<a id="a6078399857761c9309ce7d7fcdf3a90b" name="a6078399857761c9309ce7d7fcdf3a90b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6078399857761c9309ce7d7fcdf3a90b">&#9670;&#160;</a></span>ToEulerXYZ() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structdesignlab_1_1_euler_x_y_zdocs">EulerXYZ</a> designlab::ToEulerXYZ </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structdesignlab_1_1_quaterniondocs">Quaternion</a> &amp;&#160;</td>
          <td class="paramname"><em>q</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>クォータニオンからXYZオイラー角への変換． </p>
<dl class="params"><dt>引数</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">q</td><td>クォータニオン． </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>戻り値</dt><dd>オイラー角． </dd></dl>
<div class="dynheader">
呼び出し関係図:</div>
<div class="dyncontent">
<div class="center"><img src="namespacedesignlab_a6078399857761c9309ce7d7fcdf3a90b_cgraph.png" border="0" usemap="#anamespacedesignlab_a6078399857761c9309ce7d7fcdf3a90b_cgraph" alt=""/></div>
<map name="anamespacedesignlab_a6078399857761c9309ce7d7fcdf3a90b_cgraph" id="anamespacedesignlab_a6078399857761c9309ce7d7fcdf3a90b_cgraph">
<area shape="rect" title="クォータニオンからXYZオイラー角への変換．" alt="" coords="5,31,157,57"/>
<area shape="rect" href="namespacedesignlabdocs#a78f534befd80ba94ea6c6058487d2596" title="回転角行列からXYZオイラー角への変換．" alt="" coords="220,5,372,32"/>
<area shape="poly" title=" " alt="" coords="157,32,204,27,205,32,157,38"/>
<area shape="rect" href="namespacedesignlabdocs#a8183abef6391dd2b5c396f1fa3062294" title="クォータニオンから回転角行列への変換．" alt="" coords="205,56,387,83"/>
<area shape="poly" title=" " alt="" coords="157,50,189,54,189,59,157,56"/>
<area shape="rect" href="structdesignlab_1_1_quaterniondocs#a2c504d31353e189b1fa7a83cfd60deba" title="正規化したクォータニオンを返す． &#160;&#160;クォータニオンの正規化とは，ノルムを1にすることを表す． &#160;&#160;クォータニオンqの正規化は，q / |q| で求められる．" alt="" coords="435,48,582,91"/>
<area shape="poly" title=" " alt="" coords="388,67,420,67,420,72,388,72"/>
<area shape="rect" href="structdesignlab_1_1_quaterniondocs#a56bbbd522805450144f54aae7dbd117e" title="クォータニオンのノルムを返す． &#160;&#160;ノルムとは，ベクトルの大きさのこと． クォータニオンのノルムは，w^2 + x^2 + y^2 + z^2 の平方根で求められる．" alt="" coords="630,48,778,91"/>
<area shape="poly" title=" " alt="" coords="583,67,614,67,614,72,583,72"/>
</map>
</div>

</div>
</div>
<a id="a78f534befd80ba94ea6c6058487d2596" name="a78f534befd80ba94ea6c6058487d2596"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a78f534befd80ba94ea6c6058487d2596">&#9670;&#160;</a></span>ToEulerXYZ() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structdesignlab_1_1_euler_x_y_zdocs">EulerXYZ</a> designlab::ToEulerXYZ </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structdesignlab_1_1_rotation_matrix3x3docs">RotationMatrix3x3</a> &amp;&#160;</td>
          <td class="paramname"><em>rot</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>回転角行列からXYZオイラー角への変換． </p>
<dl class="params"><dt>引数</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">rot</td><td>回転角行列． </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>戻り値</dt><dd>XYZオイラー角． </dd></dl>
<div class="dynheader">
被呼び出し関係図:</div>
<div class="dyncontent">
<div class="center"><img src="namespacedesignlab_a78f534befd80ba94ea6c6058487d2596_icgraph.png" border="0" usemap="#anamespacedesignlab_a78f534befd80ba94ea6c6058487d2596_icgraph" alt=""/></div>
<map name="anamespacedesignlab_a78f534befd80ba94ea6c6058487d2596_icgraph" id="anamespacedesignlab_a78f534befd80ba94ea6c6058487d2596_icgraph">
<area shape="rect" title="回転角行列からXYZオイラー角への変換．" alt="" coords="225,101,376,128"/>
<area shape="rect" href="classdesignlab_1_1_simulation_end_checker_by_posturedocs#a10d826d1e9db87d84ab40a0107ed52cf" title="シミュレーションの終了を判定する．" alt="" coords="5,5,177,48"/>
<area shape="poly" title=" " alt="" coords="254,97,176,62,148,51,150,46,178,58,256,92"/>
<area shape="rect" href="namespacedesignlabdocs#a6078399857761c9309ce7d7fcdf3a90b" title="クォータニオンからXYZオイラー角への変換．" alt="" coords="15,72,167,99"/>
<area shape="poly" title=" " alt="" coords="209,105,167,99,168,93,210,99"/>
<area shape="rect" href="classdesignlab_1_1_robot_operator_for_gpgdocs#a240d9588144861d5556613811dc5433e" title="ロボットの動作を更新する．" alt="" coords="7,123,175,165"/>
<area shape="poly" title=" " alt="" coords="210,130,176,135,175,130,209,125"/>
<area shape="rect" href="classdesignlab_1_1_robot_operator_for_pathdocs#a1cd3621fbeb19e849d7a3a749aea8162" title="ロボットの動作を更新する．" alt="" coords="7,189,175,232"/>
<area shape="poly" title=" " alt="" coords="261,138,178,180,151,191,149,186,176,175,259,133"/>
</map>
</div>

</div>
</div>
<a id="a54d940e1e1adcbeeec8594a7f542fdef" name="a54d940e1e1adcbeeec8594a7f542fdef"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a54d940e1e1adcbeeec8594a7f542fdef">&#9670;&#160;</a></span>ToQuaternion() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structdesignlab_1_1_quaterniondocs">Quaternion</a> designlab::ToQuaternion </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structdesignlab_1_1_euler_x_y_zdocs">EulerXYZ</a> &amp;&#160;</td>
          <td class="paramname"><em>e</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>オイラー角からクォータニオンへの変換． </p>
<dl class="params"><dt>引数</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">e</td><td>オイラー角． </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>戻り値</dt><dd>クォータニオン． </dd></dl>
<div class="dynheader">
呼び出し関係図:</div>
<div class="dyncontent">
<div class="center"><img src="namespacedesignlab_a54d940e1e1adcbeeec8594a7f542fdef_cgraph.png" border="0" usemap="#anamespacedesignlab_a54d940e1e1adcbeeec8594a7f542fdef_cgraph" alt=""/></div>
<map name="anamespacedesignlab_a54d940e1e1adcbeeec8594a7f542fdef_cgraph" id="anamespacedesignlab_a54d940e1e1adcbeeec8594a7f542fdef_cgraph">
<area shape="rect" title="オイラー角からクォータニオンへの変換．" alt="" coords="5,47,167,73"/>
<area shape="rect" href="structdesignlab_1_1_quaterniondocs#a56bbbd522805450144f54aae7dbd117e" title="クォータニオンのノルムを返す． &#160;&#160;ノルムとは，ベクトルの大きさのこと． クォータニオンのノルムは，w^2 + x^2 + y^2 + z^2 の平方根で求められる．" alt="" coords="215,5,362,48"/>
<area shape="poly" title=" " alt="" coords="166,44,199,39,200,44,167,49"/>
<area shape="rect" href="namespacedesignlab_1_1math__utildocs#a92c055e0799991e88871e2a5d4f09280" title="C++において，小数同士の計算は誤差が出てしまう． 誤差込みで値が等しいか調べる．" alt="" coords="220,72,357,115"/>
<area shape="poly" title=" " alt="" coords="167,71,205,77,204,82,166,76"/>
<area shape="rect" href="structdesignlab_1_1_quaterniondocs#a24ad10137dd081de9002ac270cdce9f9" title="クォータニオンの長さの2乗を返す(ノルムの2乗)． &#160;&#160;クォータニオンの長さの2乗は，w^2 + x^2 + y^2 + z^2 で求められる．" alt="" coords="410,5,557,48"/>
<area shape="poly" title=" " alt="" coords="363,24,394,24,394,29,363,29"/>
<area shape="rect" href="structdesignlab_1_1_vector3docs#aa0a76dfe9dc375fd09561734cf782f63" title="自分・引数 の内積の結果を返す．" alt="" coords="605,13,763,40"/>
<area shape="poly" title=" " alt="" coords="557,24,590,24,590,29,557,29"/>
</map>
</div>

</div>
</div>
<a id="aa1c6fabbe9cbddd910f4578751c0ec86" name="aa1c6fabbe9cbddd910f4578751c0ec86"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa1c6fabbe9cbddd910f4578751c0ec86">&#9670;&#160;</a></span>ToQuaternion() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structdesignlab_1_1_quaterniondocs">Quaternion</a> designlab::ToQuaternion </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structdesignlab_1_1_rotation_matrix3x3docs">RotationMatrix3x3</a> &amp;&#160;</td>
          <td class="paramname"><em>rot</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>回転角行列からクォータニオンへの変換． </p>
<dl class="params"><dt>引数</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">rot</td><td>回転角行列． </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>戻り値</dt><dd>クォータニオン． </dd></dl>
<div class="dynheader">
呼び出し関係図:</div>
<div class="dyncontent">
<div class="center"><img src="namespacedesignlab_aa1c6fabbe9cbddd910f4578751c0ec86_cgraph.png" border="0" usemap="#anamespacedesignlab_aa1c6fabbe9cbddd910f4578751c0ec86_cgraph" alt=""/></div>
<map name="anamespacedesignlab_aa1c6fabbe9cbddd910f4578751c0ec86_cgraph" id="anamespacedesignlab_aa1c6fabbe9cbddd910f4578751c0ec86_cgraph">
<area shape="rect" title="回転角行列からクォータニオンへの変換．" alt="" coords="5,13,167,40"/>
<area shape="rect" href="structdesignlab_1_1_quaterniondocs#a45dfcf48edea7b439e7d189d0d105bfa" title="自身を正規化する．ノルムが１になる．" alt="" coords="215,5,362,48"/>
<area shape="poly" title=" " alt="" coords="167,24,199,24,199,29,167,29"/>
<area shape="rect" href="structdesignlab_1_1_quaterniondocs#a2c504d31353e189b1fa7a83cfd60deba" title="正規化したクォータニオンを返す． &#160;&#160;クォータニオンの正規化とは，ノルムを1にすることを表す． &#160;&#160;クォータニオンqの正規化は，q / |q| で求められる．" alt="" coords="410,5,557,48"/>
<area shape="poly" title=" " alt="" coords="363,24,394,24,394,29,363,29"/>
<area shape="rect" href="structdesignlab_1_1_quaterniondocs#a56bbbd522805450144f54aae7dbd117e" title="クォータニオンのノルムを返す． &#160;&#160;ノルムとは，ベクトルの大きさのこと． クォータニオンのノルムは，w^2 + x^2 + y^2 + z^2 の平方根で求められる．" alt="" coords="605,5,753,48"/>
<area shape="poly" title=" " alt="" coords="558,24,589,24,589,29,558,29"/>
</map>
</div>
<div class="dynheader">
被呼び出し関係図:</div>
<div class="dyncontent">
<div class="center"><img src="namespacedesignlab_aa1c6fabbe9cbddd910f4578751c0ec86_icgraph.png" border="0" usemap="#anamespacedesignlab_aa1c6fabbe9cbddd910f4578751c0ec86_icgraph" alt=""/></div>
<map name="anamespacedesignlab_aa1c6fabbe9cbddd910f4578751c0ec86_icgraph" id="anamespacedesignlab_aa1c6fabbe9cbddd910f4578751c0ec86_icgraph">
<area shape="rect" title="回転角行列からクォータニオンへの変換．" alt="" coords="222,47,383,73"/>
<area shape="rect" href="classdesignlab_1_1_simulation_end_checker_factorydocs#a5efe7f1b9b7701783fa8245758d57daa" title="シミュレーションの終了を判定するクラスを生成する．" alt="" coords="5,5,174,48"/>
<area shape="poly" title=" " alt="" coords="206,48,174,43,175,37,207,42"/>
<area shape="rect" href="classdesignlab_1_1_node_initializerdocs#a2a8cf59dc1fd538a6c8f25a473fc3b14" title="ノードの初期化を行う．" alt="" coords="7,72,172,115"/>
<area shape="poly" title=" " alt="" coords="207,78,173,83,172,78,206,72"/>
</map>
</div>

</div>
</div>
<a id="a3aa3e315aa55ffe66c5cc4fef3c1b04f" name="a3aa3e315aa55ffe66c5cc4fef3c1b04f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3aa3e315aa55ffe66c5cc4fef3c1b04f">&#9670;&#160;</a></span>ToRotationMatrix() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structdesignlab_1_1_rotation_matrix3x3docs">RotationMatrix3x3</a> designlab::ToRotationMatrix </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structdesignlab_1_1_euler_x_y_zdocs">EulerXYZ</a> &amp;&#160;</td>
          <td class="paramname"><em>e</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>XYZオイラー角から回転角行列への変換． </p>
<dl class="params"><dt>引数</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">e</td><td>XYZオイラー角． </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>戻り値</dt><dd>回転角行列． </dd></dl>
<div class="dynheader">
呼び出し関係図:</div>
<div class="dyncontent">
<div class="center"><img src="namespacedesignlab_a3aa3e315aa55ffe66c5cc4fef3c1b04f_cgraph.png" border="0" usemap="#anamespacedesignlab_a3aa3e315aa55ffe66c5cc4fef3c1b04f_cgraph" alt=""/></div>
<map name="anamespacedesignlab_a3aa3e315aa55ffe66c5cc4fef3c1b04f_cgraph" id="anamespacedesignlab_a3aa3e315aa55ffe66c5cc4fef3c1b04f_cgraph">
<area shape="rect" title="XYZオイラー角から回転角行列への変換．" alt="" coords="5,80,188,107"/>
<area shape="rect" href="structdesignlab_1_1_rotation_matrix3x3docs#abc3bdb68d606ea4d724a92425188f9fa" title="x軸周りに回転する回転行列を生成する．" alt="" coords="236,5,425,48"/>
<area shape="poly" title=" " alt="" coords="146,77,237,50,239,55,147,82"/>
<area shape="rect" href="structdesignlab_1_1_rotation_matrix3x3docs#a4f375cd58fd5ae559e9881c0a0f9aed7" title="y軸周りに回転する回転行列を生成する．" alt="" coords="236,72,425,115"/>
<area shape="poly" title=" " alt="" coords="188,91,220,91,220,96,188,96"/>
<area shape="rect" href="structdesignlab_1_1_rotation_matrix3x3docs#a39d99d8f9cce41de693228739ad69161" title="z軸周りに回転する回転行列を生成する．" alt="" coords="236,139,425,181"/>
<area shape="poly" title=" " alt="" coords="147,105,239,131,237,136,146,110"/>
<area shape="rect" href="structdesignlab_1_1_rotation_matrix3x3docs#a075763d1c57c77721d513dabd0466875" title="単位行列を生成する．" alt="" coords="473,72,662,115"/>
<area shape="poly" title=" " alt="" coords="409,46,475,65,474,70,408,51"/>
<area shape="poly" title=" " alt="" coords="425,91,457,91,457,96,425,96"/>
<area shape="poly" title=" " alt="" coords="408,136,474,117,475,122,409,141"/>
</map>
</div>

</div>
</div>
<a id="a8183abef6391dd2b5c396f1fa3062294" name="a8183abef6391dd2b5c396f1fa3062294"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8183abef6391dd2b5c396f1fa3062294">&#9670;&#160;</a></span>ToRotationMatrix() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structdesignlab_1_1_rotation_matrix3x3docs">RotationMatrix3x3</a> designlab::ToRotationMatrix </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structdesignlab_1_1_quaterniondocs">Quaternion</a> &amp;&#160;</td>
          <td class="paramname"><em>q</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>クォータニオンから回転角行列への変換． </p>
<dl class="params"><dt>引数</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">q</td><td>クォータニオン． </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>戻り値</dt><dd>回転角行列． </dd></dl>
<div class="dynheader">
呼び出し関係図:</div>
<div class="dyncontent">
<div class="center"><img src="namespacedesignlab_a8183abef6391dd2b5c396f1fa3062294_cgraph.png" border="0" usemap="#anamespacedesignlab_a8183abef6391dd2b5c396f1fa3062294_cgraph" alt=""/></div>
<map name="anamespacedesignlab_a8183abef6391dd2b5c396f1fa3062294_cgraph" id="anamespacedesignlab_a8183abef6391dd2b5c396f1fa3062294_cgraph">
<area shape="rect" title="クォータニオンから回転角行列への変換．" alt="" coords="5,13,188,40"/>
<area shape="rect" href="structdesignlab_1_1_quaterniondocs#a2c504d31353e189b1fa7a83cfd60deba" title="正規化したクォータニオンを返す． &#160;&#160;クォータニオンの正規化とは，ノルムを1にすることを表す． &#160;&#160;クォータニオンqの正規化は，q / |q| で求められる．" alt="" coords="236,5,383,48"/>
<area shape="poly" title=" " alt="" coords="188,24,220,24,220,29,188,29"/>
<area shape="rect" href="structdesignlab_1_1_quaterniondocs#a56bbbd522805450144f54aae7dbd117e" title="クォータニオンのノルムを返す． &#160;&#160;ノルムとは，ベクトルの大きさのこと． クォータニオンのノルムは，w^2 + x^2 + y^2 + z^2 の平方根で求められる．" alt="" coords="431,5,578,48"/>
<area shape="poly" title=" " alt="" coords="384,24,415,24,415,29,384,29"/>
<area shape="rect" href="structdesignlab_1_1_quaterniondocs#a24ad10137dd081de9002ac270cdce9f9" title="クォータニオンの長さの2乗を返す(ノルムの2乗)． &#160;&#160;クォータニオンの長さの2乗は，w^2 + x^2 + y^2 + z^2 で求められる．" alt="" coords="626,5,774,48"/>
<area shape="poly" title=" " alt="" coords="579,24,610,24,610,29,579,29"/>
</map>
</div>
<div class="dynheader">
被呼び出し関係図:</div>
<div class="dyncontent">
<div class="center"><img src="namespacedesignlab_a8183abef6391dd2b5c396f1fa3062294_icgraph.png" border="0" usemap="#anamespacedesignlab_a8183abef6391dd2b5c396f1fa3062294_icgraph" alt=""/></div>
<map name="anamespacedesignlab_a8183abef6391dd2b5c396f1fa3062294_icgraph" id="anamespacedesignlab_a8183abef6391dd2b5c396f1fa3062294_icgraph">
<area shape="rect" title="クォータニオンから回転角行列への変換．" alt="" coords="722,331,905,357"/>
<area shape="rect" href="namespacedesignlabdocs#a703ec0b7e06057a8997a4b22d50c5c9d" title="回転させたベクトルを返す．三角関数の処理が多く重たいので注意．" alt="" coords="507,305,674,332"/>
<area shape="poly" title=" " alt="" coords="707,335,675,331,675,326,707,329"/>
<area shape="rect" href="namespacedesignlabdocs#a6078399857761c9309ce7d7fcdf3a90b" title="クォータニオンからXYZオイラー角への変換．" alt="" coords="515,356,666,383"/>
<area shape="poly" title=" " alt="" coords="707,359,667,363,667,358,707,353"/>
<area shape="poly" title=" " alt="" coords="629,292,616,286,591,284,567,286,555,291,552,296,557,303,553,306,546,297,551,287,566,281,591,279,617,281,631,288"/>
<area shape="rect" href="structdesignlab_1_1_robot_state_nodedocs#a28bedf0298ebf8f315a21294dd111f45" title="重心位置を変更する関数．" alt="" coords="253,76,446,119"/>
<area shape="poly" title=" " alt="" coords="574,293,528,219,495,179,457,143,419,121,422,117,461,139,499,175,532,216,578,290"/>
<area shape="rect" href="classdesignlab_1_1_node_creator_com_move_straightdocs#a3e2fd67280dd581a695a09cea4f816a4" title="現在のノードから次のノード群を生成する．" alt="" coords="7,139,190,181"/>
<area shape="poly" title=" " alt="" coords="571,294,525,238,493,210,458,188,391,165,321,153,252,150,191,152,190,146,252,144,322,148,393,160,460,183,497,205,528,234,575,291"/>
<area shape="rect" href="structdesignlab_1_1_robot_state_nodedocs#a73efce324f3ffd5ead5fbc663acd96a2" title="クォータニオンを変更し，胴体を回転させる関数．" alt="" coords="260,197,439,240"/>
<area shape="poly" title=" " alt="" coords="551,300,458,254,427,243,429,238,460,250,553,295"/>
<area shape="rect" href="classdesignlab_1_1_phantom_x_mk_i_idocs#a0630fa1d537f7e00aa422a83c98ebdda" title="グローバル座標系で表現されている座標を，脚座標系に変換する．" alt="" coords="246,264,453,307"/>
<area shape="poly" title=" " alt="" coords="491,308,453,302,453,297,492,302"/>
<area shape="rect" href="classdesignlab_1_1_phantom_x_mk_i_idocs#a028f4e024ebebca50325beef3444bfc5" title="脚座標系で表現されている座標を，グローバル座標系に変換する．" alt="" coords="246,331,453,373"/>
<area shape="poly" title=" " alt="" coords="492,335,453,340,453,335,491,330"/>
<area shape="rect" href="classdesignlab_1_1_phantom_x_mk_i_idocs#ae4b923566d06eef5f765b1e7afdd57ae" title="ロボット座標系で表現されている座標を，グローバル座標系に変換する．" alt="" coords="240,397,459,440"/>
<area shape="poly" title=" " alt="" coords="520,341,508,346,494,356,485,366,475,377,460,388,435,399,433,394,458,383,472,373,481,363,491,352,506,342,518,336"/>
<area shape="rect" href="classdesignlab_1_1_camera_draggerdocs#ad9f9da3070ea76a8ae205590e5599d10" title="ドラッグ中の処理を行う． &#160;&#160;カーソルは上にあるけど，ドラッグ中ではない場合でも呼び出される．" alt="" coords="262,464,437,507"/>
<area shape="poly" title=" " alt="" coords="513,342,509,346,497,359,491,372,486,399,480,426,473,440,461,454,438,469,435,464,457,450,469,437,475,424,480,397,486,370,493,356,505,342,510,338"/>
<area shape="rect" href="classdesignlab_1_1_com_selectordocs#afe154bc35f0971d6c2c2a649299b23c3" title="重心を求める．" alt="" coords="270,531,429,573"/>
<area shape="poly" title=" " alt="" coords="512,343,509,346,494,367,486,388,486,431,485,476,477,498,461,521,431,540,428,536,457,517,472,496,480,475,480,431,481,387,489,364,505,342,508,339"/>
<area shape="rect" href="classdesignlab_1_1_node_creator_com_movedocs#a3fc5ccbce7199f0c7a7ce9ca5f4c221a" title="現在のノードから次のノード群を生成する．" alt="" coords="7,5,190,48"/>
<area shape="poly" title=" " alt="" coords="255,74,176,51,178,46,257,69"/>
<area shape="poly" title=" " alt="" coords="247,125,187,141,186,136,246,120"/>
<area shape="rect" href="classdesignlab_1_1_node_initializerdocs#a717aea9fc00fcb51c5ba3518fac717fc" title="地形に適した初期姿勢を設定する．" alt="" coords="16,72,181,115"/>
<area shape="poly" title=" " alt="" coords="237,98,182,97,182,92,237,93"/>
<area shape="rect" href="classdesignlab_1_1_node_creator_body_rotdocs#a162277203f0422a351c4d24e8167d43d" title="現在のノードから次のノード群を生成する．" alt="" coords="5,205,192,248"/>
<area shape="poly" title=" " alt="" coords="244,225,192,226,192,221,244,219"/>
</map>
</div>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacedesignlabdocs">designlab</a></li>
    <li class="footer">構築: <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.8 </li>
  </ul>
</div>
</body>
</html>
