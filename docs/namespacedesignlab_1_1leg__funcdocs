<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="ja">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.8"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>GaitGeneration by Graph Search: designlab::leg_func 名前空間</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">GaitGeneration by Graph Search
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- 構築: Doxygen 1.9.8 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search/",'docs');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','検索');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('namespacedesignlab_1_1leg__funcdocs',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">読み取り中…</div>
<div class="SRStatus" id="Searching">検索中…</div>
<div class="SRStatus" id="NoMatches">一致する文字列を見つけられません</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#typedef-members">型定義</a> &#124;
<a href="#func-members">関数</a> &#124;
<a href="#var-members">変数</a>  </div>
  <div class="headertitle"><div class="title">designlab::leg_func 名前空間</div></div>
</div><!--header-->
<div class="contents">

<p>このプログラムでは脚状態をビット(28bit)の情報で表す． そのデータを処理するための関数．  
<a href="namespacedesignlab_1_1leg__funcdocs#details">[詳解]</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="typedef-members" name="typedef-members"></a>
型定義</h2></td></tr>
<tr class="memitem:aeed0147f934052f177c0761b75bacc65" id="r_aeed0147f934052f177c0761b75bacc65"><td class="memItemLeft" align="right" valign="top"><a id="aeed0147f934052f177c0761b75bacc65" name="aeed0147f934052f177c0761b75bacc65"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><b>LegStateBit</b> = std::bitset&lt; <a class="el" href="namespacedesignlab_1_1leg__funcdocs#a85b556a69a51c9e00ccae2383ae33052">kLegStateBitNum</a> &gt;</td></tr>
<tr class="memdesc:aeed0147f934052f177c0761b75bacc65"><td class="mdescLeft">&#160;</td><td class="mdescRight">脚状態を保存する型．28bitのビット型． <br /></td></tr>
<tr class="separator:aeed0147f934052f177c0761b75bacc65"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a412eba2f9bdfb755114f63da0545ac61" id="r_a412eba2f9bdfb755114f63da0545ac61"><td class="memItemLeft" align="right" valign="top"><a id="a412eba2f9bdfb755114f63da0545ac61" name="a412eba2f9bdfb755114f63da0545ac61"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><b>LegGroundedBit</b> = std::bitset&lt; <a class="el" href="classdesignlab_1_1_hexapod_constdocs#a8441e7e101e967ded7c357feb9670812">HexapodConst::kLegNum</a> &gt;</td></tr>
<tr class="memdesc:a412eba2f9bdfb755114f63da0545ac61"><td class="mdescLeft">&#160;</td><td class="mdescRight">脚の遊脚・接地を表す型．6bitのビット型．接地が 1 遊脚が 0． <br /></td></tr>
<tr class="separator:a412eba2f9bdfb755114f63da0545ac61"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="func-members" name="func-members"></a>
関数</h2></td></tr>
<tr class="memitem:addb03f2c129476bc73065ee52708dcd5" id="r_addb03f2c129476bc73065ee52708dcd5"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespacedesignlab_1_1leg__funcdocs#aeed0147f934052f177c0761b75bacc65">LegStateBit</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacedesignlab_1_1leg__funcdocs#addb03f2c129476bc73065ee52708dcd5">MakeLegStateBit</a> (<a class="el" href="discrete__com__pos_8hdocs#aae667c8a4db0938ece7d037c80ea858e">enums::DiscreteComPos</a> discrete_com_pos, const std::array&lt; bool, <a class="el" href="classdesignlab_1_1_hexapod_constdocs#a8441e7e101e967ded7c357feb9670812">HexapodConst::kLegNum</a> &gt; &amp;is_ground, const std::array&lt; <a class="el" href="discrete__leg__pos_8hdocs#ab5710dabeacf5161415ee779fe947495">enums::DiscreteLegPos</a>, <a class="el" href="classdesignlab_1_1_hexapod_constdocs#a8441e7e101e967ded7c357feb9670812">HexapodConst::kLegNum</a> &gt; &amp;leg_pos)</td></tr>
<tr class="memdesc:addb03f2c129476bc73065ee52708dcd5"><td class="mdescLeft">&#160;</td><td class="mdescRight">脚状態を作成して返す関数．脚状態は重心パターン， 脚の接地・遊脚，離散化した脚位置のデータが含まれる．  <br /></td></tr>
<tr class="separator:addb03f2c129476bc73065ee52708dcd5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4b87ebe130ffec4a53e929bdb13c4ee3" id="r_a4b87ebe130ffec4a53e929bdb13c4ee3"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacedesignlab_1_1leg__funcdocs#a4b87ebe130ffec4a53e929bdb13c4ee3">IsGrounded</a> (const <a class="el" href="namespacedesignlab_1_1leg__funcdocs#aeed0147f934052f177c0761b75bacc65">LegStateBit</a> &amp;leg_state_bit, int leg_index)</td></tr>
<tr class="memdesc:a4b87ebe130ffec4a53e929bdb13c4ee3"><td class="mdescLeft">&#160;</td><td class="mdescRight">脚番号 leg_index 0 ～ 5 に応じて，その脚が接地しているかを調べる． <br  />
 脚は右前脚を0番として，時計回りに0,1,2,3,4,5となる．左前足が5番．  <br /></td></tr>
<tr class="separator:a4b87ebe130ffec4a53e929bdb13c4ee3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aba40fd16353e3566503af79fd3bff892" id="r_aba40fd16353e3566503af79fd3bff892"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespacedesignlab_1_1leg__funcdocs#a412eba2f9bdfb755114f63da0545ac61">LegGroundedBit</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacedesignlab_1_1leg__funcdocs#aba40fd16353e3566503af79fd3bff892">GetLegGroundedBit</a> (const <a class="el" href="namespacedesignlab_1_1leg__funcdocs#aeed0147f934052f177c0761b75bacc65">LegStateBit</a> &amp;leg_state)</td></tr>
<tr class="memdesc:aba40fd16353e3566503af79fd3bff892"><td class="mdescLeft">&#160;</td><td class="mdescRight">脚が接地しているなら1，遊脚を0としたビット列で遊脚・接地脚の状態を返す． <br  />
 例えば 0 番脚のみが遊脚しているなら 0b111 110 を返す．  <br /></td></tr>
<tr class="separator:aba40fd16353e3566503af79fd3bff892"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a410e98538abd3a3346c5223e32100355" id="r_a410e98538abd3a3346c5223e32100355"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacedesignlab_1_1leg__funcdocs#a410e98538abd3a3346c5223e32100355">GetGroundedLegNum</a> (const <a class="el" href="namespacedesignlab_1_1leg__funcdocs#aeed0147f934052f177c0761b75bacc65">LegStateBit</a> &amp;leg_state)</td></tr>
<tr class="memdesc:a410e98538abd3a3346c5223e32100355"><td class="mdescLeft">&#160;</td><td class="mdescRight">接地している脚の本数を返す関数．  <br /></td></tr>
<tr class="separator:a410e98538abd3a3346c5223e32100355"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a783362f08ae38b6e3f5cb09aad52d51b" id="r_a783362f08ae38b6e3f5cb09aad52d51b"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacedesignlab_1_1leg__funcdocs#a783362f08ae38b6e3f5cb09aad52d51b">GetLiftedLegNum</a> (const <a class="el" href="namespacedesignlab_1_1leg__funcdocs#aeed0147f934052f177c0761b75bacc65">LegStateBit</a> &amp;leg_state)</td></tr>
<tr class="memdesc:a783362f08ae38b6e3f5cb09aad52d51b"><td class="mdescLeft">&#160;</td><td class="mdescRight">遊脚している脚の本数を返す関数．  <br /></td></tr>
<tr class="separator:a783362f08ae38b6e3f5cb09aad52d51b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac79059fd4ea5194294609cd6f6834d93" id="r_ac79059fd4ea5194294609cd6f6834d93"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacedesignlab_1_1leg__funcdocs#ac79059fd4ea5194294609cd6f6834d93">GetGroundedLegIndexByVector</a> (const <a class="el" href="namespacedesignlab_1_1leg__funcdocs#aeed0147f934052f177c0761b75bacc65">LegStateBit</a> &amp;leg_state, std::vector&lt; int &gt; *res_index)</td></tr>
<tr class="memdesc:ac79059fd4ea5194294609cd6f6834d93"><td class="mdescLeft">&#160;</td><td class="mdescRight">接地している脚の脚番号0～5を，引数で参照渡しする関数．  <br /></td></tr>
<tr class="separator:ac79059fd4ea5194294609cd6f6834d93"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab008f25ef39dfb41ee4a76f3c9cc0529" id="r_ab008f25ef39dfb41ee4a76f3c9cc0529"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacedesignlab_1_1leg__funcdocs#ab008f25ef39dfb41ee4a76f3c9cc0529">GetLiftedLegIndexByVector</a> (const <a class="el" href="namespacedesignlab_1_1leg__funcdocs#aeed0147f934052f177c0761b75bacc65">LegStateBit</a> &amp;leg_state, std::vector&lt; int &gt; *res_index)</td></tr>
<tr class="memdesc:ab008f25ef39dfb41ee4a76f3c9cc0529"><td class="mdescLeft">&#160;</td><td class="mdescRight">遊脚している脚の脚番号0～5を，引数_res_numberで参照渡しする関数．  <br /></td></tr>
<tr class="separator:ab008f25ef39dfb41ee4a76f3c9cc0529"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab7617bec21b4f953dc3b4641f58a0e2e" id="r_ab7617bec21b4f953dc3b4641f58a0e2e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="discrete__leg__pos_8hdocs#ab5710dabeacf5161415ee779fe947495">enums::DiscreteLegPos</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacedesignlab_1_1leg__funcdocs#ab7617bec21b4f953dc3b4641f58a0e2e">GetDiscreteLegPos</a> (const <a class="el" href="namespacedesignlab_1_1leg__funcdocs#aeed0147f934052f177c0761b75bacc65">LegStateBit</a> &amp;leg_state, int leg_index)</td></tr>
<tr class="memdesc:ab7617bec21b4f953dc3b4641f58a0e2e"><td class="mdescLeft">&#160;</td><td class="mdescRight">脚状態を取得する．  <br /></td></tr>
<tr class="separator:ab7617bec21b4f953dc3b4641f58a0e2e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a97269d1d2e67a17e729889089a859b78" id="r_a97269d1d2e67a17e729889089a859b78"><td class="memItemLeft" align="right" valign="top"><a class="el" href="discrete__com__pos_8hdocs#aae667c8a4db0938ece7d037c80ea858e">enums::DiscreteComPos</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacedesignlab_1_1leg__funcdocs#a97269d1d2e67a17e729889089a859b78">GetDiscreteComPos</a> (const <a class="el" href="namespacedesignlab_1_1leg__funcdocs#aeed0147f934052f177c0761b75bacc65">LegStateBit</a> &amp;leg_state)</td></tr>
<tr class="memdesc:a97269d1d2e67a17e729889089a859b78"><td class="mdescLeft">&#160;</td><td class="mdescRight">現在の脚状態から重心パターンを取得する．  <br /></td></tr>
<tr class="separator:a97269d1d2e67a17e729889089a859b78"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af8887609c397b32b722ccc0994a17d01" id="r_af8887609c397b32b722ccc0994a17d01"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacedesignlab_1_1leg__funcdocs#af8887609c397b32b722ccc0994a17d01">ChangeLegState</a> (int leg_index, <a class="el" href="discrete__leg__pos_8hdocs#ab5710dabeacf5161415ee779fe947495">enums::DiscreteLegPos</a> new_discretized_leg_pos, bool is_ground, <a class="el" href="namespacedesignlab_1_1leg__funcdocs#aeed0147f934052f177c0761b75bacc65">LegStateBit</a> *leg_state)</td></tr>
<tr class="memdesc:af8887609c397b32b722ccc0994a17d01"><td class="mdescLeft">&#160;</td><td class="mdescRight">脚の情報を変更する．  <br /></td></tr>
<tr class="separator:af8887609c397b32b722ccc0994a17d01"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3e2c16048416541b45cfb82f8eac0480" id="r_a3e2c16048416541b45cfb82f8eac0480"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacedesignlab_1_1leg__funcdocs#a3e2c16048416541b45cfb82f8eac0480">ChangeDiscreteLegPos</a> (int leg_index, <a class="el" href="discrete__leg__pos_8hdocs#ab5710dabeacf5161415ee779fe947495">enums::DiscreteLegPos</a> new_discretized_leg_pos, <a class="el" href="namespacedesignlab_1_1leg__funcdocs#aeed0147f934052f177c0761b75bacc65">LegStateBit</a> *leg_state)</td></tr>
<tr class="memdesc:a3e2c16048416541b45cfb82f8eac0480"><td class="mdescLeft">&#160;</td><td class="mdescRight">脚の状態を変更する．遊脚を表すビットはそのまま．  <br /></td></tr>
<tr class="separator:a3e2c16048416541b45cfb82f8eac0480"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaa0778536285e1ec0fa1b7a1470e6186" id="r_aaa0778536285e1ec0fa1b7a1470e6186"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacedesignlab_1_1leg__funcdocs#aaa0778536285e1ec0fa1b7a1470e6186">ChangeGround</a> (int leg_index, bool is_ground, <a class="el" href="namespacedesignlab_1_1leg__funcdocs#aeed0147f934052f177c0761b75bacc65">LegStateBit</a> *leg_state)</td></tr>
<tr class="memdesc:aaa0778536285e1ec0fa1b7a1470e6186"><td class="mdescLeft">&#160;</td><td class="mdescRight">脚の接地・遊脚情報を変更する．  <br /></td></tr>
<tr class="separator:aaa0778536285e1ec0fa1b7a1470e6186"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad818e831df8eb0f0eb141e7fb62ad689" id="r_ad818e831df8eb0f0eb141e7fb62ad689"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacedesignlab_1_1leg__funcdocs#ad818e831df8eb0f0eb141e7fb62ad689">ChangeAllLegGround</a> (const <a class="el" href="namespacedesignlab_1_1leg__funcdocs#a412eba2f9bdfb755114f63da0545ac61">LegGroundedBit</a> &amp;is_ground_list, <a class="el" href="namespacedesignlab_1_1leg__funcdocs#aeed0147f934052f177c0761b75bacc65">LegStateBit</a> *leg_state)</td></tr>
<tr class="memdesc:ad818e831df8eb0f0eb141e7fb62ad689"><td class="mdescLeft">&#160;</td><td class="mdescRight">全ての脚の接地・遊脚情報を変更する．  <br /></td></tr>
<tr class="separator:ad818e831df8eb0f0eb141e7fb62ad689"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9a4626438aff7a077d8ee581b2917d3e" id="r_a9a4626438aff7a077d8ee581b2917d3e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacedesignlab_1_1leg__funcdocs#a9a4626438aff7a077d8ee581b2917d3e">ChangeDiscreteComPos</a> (<a class="el" href="discrete__com__pos_8hdocs#aae667c8a4db0938ece7d037c80ea858e">enums::DiscreteComPos</a> new_com_pattern, <a class="el" href="namespacedesignlab_1_1leg__funcdocs#aeed0147f934052f177c0761b75bacc65">LegStateBit</a> *leg_state)</td></tr>
<tr class="memdesc:a9a4626438aff7a077d8ee581b2917d3e"><td class="mdescLeft">&#160;</td><td class="mdescRight">重心のデータを変更する．  <br /></td></tr>
<tr class="separator:a9a4626438aff7a077d8ee581b2917d3e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0638b32b8b228a6e927f6de16e2f3441" id="r_a0638b32b8b228a6e927f6de16e2f3441"><td class="memItemLeft" align="right" valign="top"><a id="a0638b32b8b228a6e927f6de16e2f3441" name="a0638b32b8b228a6e927f6de16e2f3441"></a>
constexpr <a class="el" href="namespacedesignlab_1_1leg__funcdocs#aeed0147f934052f177c0761b75bacc65">LegStateBit</a>&#160;</td><td class="memItemRight" valign="bottom"><b>kLegPosMaskBit</b> (0b0111)</td></tr>
<tr class="memdesc:a0638b32b8b228a6e927f6de16e2f3441"><td class="mdescLeft">&#160;</td><td class="mdescRight">脚位置は4bitの下位三桁で管理されるので，そこをマスクする． <br /></td></tr>
<tr class="separator:a0638b32b8b228a6e927f6de16e2f3441"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4324547428d4b166d210138ccfffc07e" id="r_a4324547428d4b166d210138ccfffc07e"><td class="memItemLeft" align="right" valign="top"><a id="a4324547428d4b166d210138ccfffc07e" name="a4324547428d4b166d210138ccfffc07e"></a>
constexpr <a class="el" href="namespacedesignlab_1_1leg__funcdocs#aeed0147f934052f177c0761b75bacc65">LegStateBit</a>&#160;</td><td class="memItemRight" valign="bottom"><b>kLegStateMaskBit</b> (0b1111)</td></tr>
<tr class="memdesc:a4324547428d4b166d210138ccfffc07e"><td class="mdescLeft">&#160;</td><td class="mdescRight">脚状態は4bitで管理されるので，そこをマスクする． <br /></td></tr>
<tr class="separator:a4324547428d4b166d210138ccfffc07e"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="var-members" name="var-members"></a>
変数</h2></td></tr>
<tr class="memitem:abe2f601b0f9390ddd56f6092ca9180a2" id="r_abe2f601b0f9390ddd56f6092ca9180a2"><td class="memItemLeft" align="right" valign="top"><a id="abe2f601b0f9390ddd56f6092ca9180a2" name="abe2f601b0f9390ddd56f6092ca9180a2"></a>
constexpr int&#160;</td><td class="memItemRight" valign="bottom"><b>kLegPosBitNum</b> = 4</td></tr>
<tr class="memdesc:abe2f601b0f9390ddd56f6092ca9180a2"><td class="mdescLeft">&#160;</td><td class="mdescRight">脚位置を表すビット数．離散化された脚位置は3bit，遊脚・接地は1bit．あわせて4bit． <br /></td></tr>
<tr class="separator:abe2f601b0f9390ddd56f6092ca9180a2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4e8bbdedc13b0286e45fb4833b03470c" id="r_a4e8bbdedc13b0286e45fb4833b03470c"><td class="memItemLeft" align="right" valign="top"><a id="a4e8bbdedc13b0286e45fb4833b03470c" name="a4e8bbdedc13b0286e45fb4833b03470c"></a>
constexpr int&#160;</td><td class="memItemRight" valign="bottom"><b>kComPosBitNum</b> = 4</td></tr>
<tr class="memdesc:a4e8bbdedc13b0286e45fb4833b03470c"><td class="mdescLeft">&#160;</td><td class="mdescRight">重心パターンを表すビット数． <br /></td></tr>
<tr class="separator:a4e8bbdedc13b0286e45fb4833b03470c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a85b556a69a51c9e00ccae2383ae33052" id="r_a85b556a69a51c9e00ccae2383ae33052"><td class="memItemLeft" align="right" valign="top"><a id="a85b556a69a51c9e00ccae2383ae33052" name="a85b556a69a51c9e00ccae2383ae33052"></a>
constexpr int&#160;</td><td class="memItemRight" valign="bottom"><b>kLegStateBitNum</b> = <a class="el" href="classdesignlab_1_1_hexapod_constdocs#a8441e7e101e967ded7c357feb9670812">HexapodConst::kLegNum</a> * <a class="el" href="namespacedesignlab_1_1leg__funcdocs#abe2f601b0f9390ddd56f6092ca9180a2">kLegPosBitNum</a> + <a class="el" href="namespacedesignlab_1_1leg__funcdocs#a4e8bbdedc13b0286e45fb4833b03470c">kComPosBitNum</a></td></tr>
<tr class="memdesc:a85b556a69a51c9e00ccae2383ae33052"><td class="mdescLeft">&#160;</td><td class="mdescRight">脚状態を保存するビット数．28bit． <br /></td></tr>
<tr class="separator:a85b556a69a51c9e00ccae2383ae33052"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a70663ed1f016df2602e960f07056ca30" id="r_a70663ed1f016df2602e960f07056ca30"><td class="memItemLeft" align="right" valign="top"><a id="a70663ed1f016df2602e960f07056ca30" name="a70663ed1f016df2602e960f07056ca30"></a>
constexpr int&#160;</td><td class="memItemRight" valign="bottom"><b>kShiftToComNum</b> = <a class="el" href="classdesignlab_1_1_hexapod_constdocs#a8441e7e101e967ded7c357feb9670812">HexapodConst::kLegNum</a> * 4</td></tr>
<tr class="memdesc:a70663ed1f016df2602e960f07056ca30"><td class="mdescLeft">&#160;</td><td class="mdescRight">重心パターンを保存するビットまで行くために，どれだけビットをシフトするか． <br /></td></tr>
<tr class="separator:a70663ed1f016df2602e960f07056ca30"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a82a33fe81f59d131b4eac6540881a5a4" id="r_a82a33fe81f59d131b4eac6540881a5a4"><td class="memItemLeft" align="right" valign="top"><a id="a82a33fe81f59d131b4eac6540881a5a4" name="a82a33fe81f59d131b4eac6540881a5a4"></a>
constexpr <a class="el" href="namespacedesignlab_1_1leg__funcdocs#aeed0147f934052f177c0761b75bacc65">LegStateBit</a>&#160;</td><td class="memItemRight" valign="bottom"><b>kComStateMaskBit</b> = (0b1111 &lt;&lt; <a class="el" href="namespacedesignlab_1_1leg__funcdocs#a70663ed1f016df2602e960f07056ca30">kShiftToComNum</a>)</td></tr>
<tr class="memdesc:a82a33fe81f59d131b4eac6540881a5a4"><td class="mdescLeft">&#160;</td><td class="mdescRight">重心パターンを保存するビットをマスクするビット． <br /></td></tr>
<tr class="separator:a82a33fe81f59d131b4eac6540881a5a4"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">詳解</h2>
<div class="textblock"><p>このプログラムでは脚状態をビット(28bit)の情報で表す． そのデータを処理するための関数． </p>
<dl class="section author"><dt>著者</dt><dd>Hasegawa </dd></dl>
<dl class="section copyright"><dt>著作権所有</dt><dd>埼玉大学 設計工学研究室 2023. All right reserved.</dd></dl>
<p>脚状態って言ってるけど離散化された重心位置も入ってる． <br  />
 1脚の脚状態を4bitで表す 最上位0:遊脚,1:接地．　残り3bitで離散化した脚位置． <br  />
 離散化した脚位置は基準位置を4として，それより前にあるなら4より大きい数字， 後ろにあるならば4より小さい数字． <br  />
</p>
</div><h2 class="groupheader">関数詳解</h2>
<a id="ad818e831df8eb0f0eb141e7fb62ad689" name="ad818e831df8eb0f0eb141e7fb62ad689"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad818e831df8eb0f0eb141e7fb62ad689">&#9670;&#160;</a></span>ChangeAllLegGround()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void designlab::leg_func::ChangeAllLegGround </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespacedesignlab_1_1leg__funcdocs#a412eba2f9bdfb755114f63da0545ac61">LegGroundedBit</a> &amp;&#160;</td>
          <td class="paramname"><em>is_ground_list</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacedesignlab_1_1leg__funcdocs#aeed0147f934052f177c0761b75bacc65">LegStateBit</a> *&#160;</td>
          <td class="paramname"><em>leg_state</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>全ての脚の接地・遊脚情報を変更する． </p>
<dl class="params"><dt>引数</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">is_ground_list</td><td>脚が接地しているかを表す．接地しているならば true． 遊脚しているならば false． </td></tr>
    <tr><td class="paramdir">[in,out]</td><td class="paramname">leg_state</td><td>現在の脚状態，これをもとに新しい脚状態を作成する． </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
呼び出し関係図:</div>
<div class="dyncontent">
<div class="center"><img src="namespacedesignlab_1_1leg__func_ad818e831df8eb0f0eb141e7fb62ad689_cgraph.png" border="0" usemap="#anamespacedesignlab_1_1leg__func_ad818e831df8eb0f0eb141e7fb62ad689_cgraph" alt=""/></div>
<map name="anamespacedesignlab_1_1leg__func_ad818e831df8eb0f0eb141e7fb62ad689_cgraph" id="anamespacedesignlab_1_1leg__func_ad818e831df8eb0f0eb141e7fb62ad689_cgraph">
<area shape="rect" title="全ての脚の接地・遊脚情報を変更する．" alt="" coords="5,5,157,48"/>
<area shape="rect" href="namespacedesignlab_1_1leg__funcdocs#aaa0778536285e1ec0fa1b7a1470e6186" title="脚の接地・遊脚情報を変更する．" alt="" coords="205,5,337,48"/>
<area shape="poly" title=" " alt="" coords="157,24,189,24,189,29,157,29"/>
</map>
</div>

</div>
</div>
<a id="a9a4626438aff7a077d8ee581b2917d3e" name="a9a4626438aff7a077d8ee581b2917d3e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9a4626438aff7a077d8ee581b2917d3e">&#9670;&#160;</a></span>ChangeDiscreteComPos()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void designlab::leg_func::ChangeDiscreteComPos </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="discrete__com__pos_8hdocs#aae667c8a4db0938ece7d037c80ea858e">enums::DiscreteComPos</a>&#160;</td>
          <td class="paramname"><em>new_com_pattern</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacedesignlab_1_1leg__funcdocs#aeed0147f934052f177c0761b75bacc65">LegStateBit</a> *&#160;</td>
          <td class="paramname"><em>leg_state</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>重心のデータを変更する． </p>
<dl class="params"><dt>引数</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">leg_state</td><td>現在の脚状態． </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">new_com_pattern</td><td>新しい重心パターン． </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>戻り値</dt><dd>変更した重心パターンを返す． </dd></dl>

</div>
</div>
<a id="a3e2c16048416541b45cfb82f8eac0480" name="a3e2c16048416541b45cfb82f8eac0480"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3e2c16048416541b45cfb82f8eac0480">&#9670;&#160;</a></span>ChangeDiscreteLegPos()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void designlab::leg_func::ChangeDiscreteLegPos </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>leg_index</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="discrete__leg__pos_8hdocs#ab5710dabeacf5161415ee779fe947495">enums::DiscreteLegPos</a>&#160;</td>
          <td class="paramname"><em>new_discretized_leg_pos</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacedesignlab_1_1leg__funcdocs#aeed0147f934052f177c0761b75bacc65">LegStateBit</a> *&#160;</td>
          <td class="paramname"><em>leg_state</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>脚の状態を変更する．遊脚を表すビットはそのまま． </p>
<dl class="params"><dt>引数</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">leg_index</td><td>脚の番号．0～5の範囲内でなければアサートで止まる． </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">new_discretized_leg_pos</td><td>新しい脚状態． </td></tr>
    <tr><td class="paramdir">[in,out]</td><td class="paramname">leg_state</td><td>現在の脚状態，これをもとに新しい脚状態を作成する． </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
呼び出し関係図:</div>
<div class="dyncontent">
<div class="center"><img src="namespacedesignlab_1_1leg__func_a3e2c16048416541b45cfb82f8eac0480_cgraph.png" border="0" usemap="#anamespacedesignlab_1_1leg__func_a3e2c16048416541b45cfb82f8eac0480_cgraph" alt=""/></div>
<map name="anamespacedesignlab_1_1leg__func_a3e2c16048416541b45cfb82f8eac0480_cgraph" id="anamespacedesignlab_1_1leg__func_a3e2c16048416541b45cfb82f8eac0480_cgraph">
<area shape="rect" title="脚の状態を変更する．遊脚を表すビットはそのまま．" alt="" coords="5,5,171,48"/>
<area shape="rect" href="namespacedesignlab_1_1leg__funcdocs#a0638b32b8b228a6e927f6de16e2f3441" title="脚位置は4bitの下位三桁で管理されるので，そこをマスクする．" alt="" coords="219,5,351,48"/>
<area shape="poly" title=" " alt="" coords="171,24,203,24,203,29,171,29"/>
</map>
</div>
<div class="dynheader">
被呼び出し関係図:</div>
<div class="dyncontent">
<div class="center"><img src="namespacedesignlab_1_1leg__func_a3e2c16048416541b45cfb82f8eac0480_icgraph.png" border="0" usemap="#anamespacedesignlab_1_1leg__func_a3e2c16048416541b45cfb82f8eac0480_icgraph" alt=""/></div>
<map name="anamespacedesignlab_1_1leg__func_a3e2c16048416541b45cfb82f8eac0480_icgraph" id="anamespacedesignlab_1_1leg__func_a3e2c16048416541b45cfb82f8eac0480_icgraph">
<area shape="rect" title="脚の状態を変更する．遊脚を表すビットはそのまま．" alt="" coords="186,5,351,48"/>
<area shape="rect" href="namespacedesignlab_1_1leg__funcdocs#af8887609c397b32b722ccc0994a17d01" title="脚の情報を変更する．" alt="" coords="5,5,138,48"/>
<area shape="poly" title=" " alt="" coords="170,29,138,29,138,24,170,24"/>
</map>
</div>

</div>
</div>
<a id="aaa0778536285e1ec0fa1b7a1470e6186" name="aaa0778536285e1ec0fa1b7a1470e6186"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aaa0778536285e1ec0fa1b7a1470e6186">&#9670;&#160;</a></span>ChangeGround()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void designlab::leg_func::ChangeGround </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>leg_index</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>is_ground</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacedesignlab_1_1leg__funcdocs#aeed0147f934052f177c0761b75bacc65">LegStateBit</a> *&#160;</td>
          <td class="paramname"><em>leg_state</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>脚の接地・遊脚情報を変更する． </p>
<dl class="params"><dt>引数</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">leg_index</td><td>脚の番号．0～5の範囲内でなければアサートで止まる． </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">is_ground</td><td>脚が接地しているかを表す．接地しているならば true． 遊脚しているならば false． </td></tr>
    <tr><td class="paramdir">[in,out]</td><td class="paramname">leg_state</td><td>現在の脚状態，これをもとに新しい脚状態を作成する． </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
被呼び出し関係図:</div>
<div class="dyncontent">
<div class="center"><img src="namespacedesignlab_1_1leg__func_aaa0778536285e1ec0fa1b7a1470e6186_icgraph.png" border="0" usemap="#anamespacedesignlab_1_1leg__func_aaa0778536285e1ec0fa1b7a1470e6186_icgraph" alt=""/></div>
<map name="anamespacedesignlab_1_1leg__func_aaa0778536285e1ec0fa1b7a1470e6186_icgraph" id="anamespacedesignlab_1_1leg__func_aaa0778536285e1ec0fa1b7a1470e6186_icgraph">
<area shape="rect" title="脚の接地・遊脚情報を変更する．" alt="" coords="205,39,337,81"/>
<area shape="rect" href="namespacedesignlab_1_1leg__funcdocs#ad818e831df8eb0f0eb141e7fb62ad689" title="全ての脚の接地・遊脚情報を変更する．" alt="" coords="5,5,157,48"/>
<area shape="poly" title=" " alt="" coords="189,48,157,43,158,37,190,43"/>
<area shape="rect" href="namespacedesignlab_1_1leg__funcdocs#af8887609c397b32b722ccc0994a17d01" title="脚の情報を変更する．" alt="" coords="15,72,147,115"/>
<area shape="poly" title=" " alt="" coords="190,77,148,84,147,79,189,72"/>
</map>
</div>

</div>
</div>
<a id="af8887609c397b32b722ccc0994a17d01" name="af8887609c397b32b722ccc0994a17d01"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af8887609c397b32b722ccc0994a17d01">&#9670;&#160;</a></span>ChangeLegState()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void designlab::leg_func::ChangeLegState </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>leg_index</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="discrete__leg__pos_8hdocs#ab5710dabeacf5161415ee779fe947495">enums::DiscreteLegPos</a>&#160;</td>
          <td class="paramname"><em>new_discretized_leg_pos</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>is_ground</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacedesignlab_1_1leg__funcdocs#aeed0147f934052f177c0761b75bacc65">LegStateBit</a> *&#160;</td>
          <td class="paramname"><em>leg_state</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>脚の情報を変更する． </p>
<dl class="params"><dt>引数</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">leg_index</td><td>脚の番号 0～5． </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">new_discretized_leg_pos</td><td>新しい脚状態． </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">is_ground</td><td>脚が接地しているかを表す．接地しているならば true． 遊脚しているならば false． </td></tr>
    <tr><td class="paramdir">[in,out]</td><td class="paramname">leg_state</td><td>現在の脚状態，これをもとに新しい脚状態を作成する． </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
呼び出し関係図:</div>
<div class="dyncontent">
<div class="center"><img src="namespacedesignlab_1_1leg__func_af8887609c397b32b722ccc0994a17d01_cgraph.png" border="0" usemap="#anamespacedesignlab_1_1leg__func_af8887609c397b32b722ccc0994a17d01_cgraph" alt=""/></div>
<map name="anamespacedesignlab_1_1leg__func_af8887609c397b32b722ccc0994a17d01_cgraph" id="anamespacedesignlab_1_1leg__func_af8887609c397b32b722ccc0994a17d01_cgraph">
<area shape="rect" title="脚の情報を変更する．" alt="" coords="5,39,138,81"/>
<area shape="rect" href="namespacedesignlab_1_1leg__funcdocs#a3e2c16048416541b45cfb82f8eac0480" title="脚の状態を変更する．遊脚を表すビットはそのまま．" alt="" coords="186,5,351,48"/>
<area shape="poly" title=" " alt="" coords="138,46,170,41,171,46,138,51"/>
<area shape="rect" href="namespacedesignlab_1_1leg__funcdocs#aaa0778536285e1ec0fa1b7a1470e6186" title="脚の接地・遊脚情報を変更する．" alt="" coords="202,72,335,115"/>
<area shape="poly" title=" " alt="" coords="138,69,187,77,186,82,138,74"/>
<area shape="rect" href="namespacedesignlab_1_1leg__funcdocs#a0638b32b8b228a6e927f6de16e2f3441" title="脚位置は4bitの下位三桁で管理されるので，そこをマスクする．" alt="" coords="399,5,531,48"/>
<area shape="poly" title=" " alt="" coords="351,24,383,24,383,29,351,29"/>
</map>
</div>

</div>
</div>
<a id="a97269d1d2e67a17e729889089a859b78" name="a97269d1d2e67a17e729889089a859b78"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a97269d1d2e67a17e729889089a859b78">&#9670;&#160;</a></span>GetDiscreteComPos()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="discrete__com__pos_8hdocs#aae667c8a4db0938ece7d037c80ea858e">enums::DiscreteComPos</a> designlab::leg_func::GetDiscreteComPos </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespacedesignlab_1_1leg__funcdocs#aeed0147f934052f177c0761b75bacc65">LegStateBit</a> &amp;&#160;</td>
          <td class="paramname"><em>leg_state</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>現在の脚状態から重心パターンを取得する． </p>
<dl class="params"><dt>引数</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">leg_state</td><td>現在の脚状態． </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>戻り値</dt><dd>重心パターンを返す． </dd></dl>
<div class="dynheader">
被呼び出し関係図:</div>
<div class="dyncontent">
<div class="center"><img src="namespacedesignlab_1_1leg__func_a97269d1d2e67a17e729889089a859b78_icgraph.png" border="0" usemap="#anamespacedesignlab_1_1leg__func_a97269d1d2e67a17e729889089a859b78_icgraph" alt=""/></div>
<map name="anamespacedesignlab_1_1leg__func_a97269d1d2e67a17e729889089a859b78_icgraph" id="anamespacedesignlab_1_1leg__func_a97269d1d2e67a17e729889089a859b78_icgraph">
<area shape="rect" title="現在の脚状態から重心パターンを取得する．" alt="" coords="517,39,665,81"/>
<area shape="rect" href="structdesignlab_1_1_graph_search_result_recorddocs#ab817d6534ee46d02492002e1966801e4" title="構造体の内容をCSV形式の文字列にして返す． , (カンマ) で区切られる．" alt="" coords="272,5,469,48"/>
<area shape="poly" title=" " alt="" coords="501,49,469,44,470,39,502,44"/>
<area shape="rect" href="structdesignlab_1_1_robot_state_nodedocs#a7fa3f31f167ac1cf468d81509f55c407" title="ノードの情報を文字列に変換する関数． &#160;&#160;デバッグ用に詳細な情報を出力する．" alt="" coords="281,72,460,115"/>
<area shape="poly" title=" " alt="" coords="502,76,461,82,460,77,501,71"/>
<area shape="rect" href="classdesignlab_1_1_system_main_graph_viewerdocs#a19d272521cd15d5e493e24ef5834c218" title="主要な処理を行う関数．" alt="" coords="18,39,211,81"/>
<area shape="poly" title=" " alt="" coords="265,82,211,75,211,70,266,77"/>
<area shape="rect" href="classdesignlab_1_1_system_main_simulationdocs#ab3579cf4bfec29b735c2c2c70b19e738" title="いままで int mainで行われた処理をまとめたもの． &#160;&#160;目標地点へ着くか，歩容計画に失敗した場合に，シミュレーションを終える． &#160;&#160;また，規定の回数シミュレーションしたら終了する．" alt="" coords="5,105,224,148"/>
<area shape="poly" title=" " alt="" coords="265,110,224,115,224,110,265,104"/>
</map>
</div>

</div>
</div>
<a id="ab7617bec21b4f953dc3b4641f58a0e2e" name="ab7617bec21b4f953dc3b4641f58a0e2e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab7617bec21b4f953dc3b4641f58a0e2e">&#9670;&#160;</a></span>GetDiscreteLegPos()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="discrete__leg__pos_8hdocs#ab5710dabeacf5161415ee779fe947495">enums::DiscreteLegPos</a> designlab::leg_func::GetDiscreteLegPos </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespacedesignlab_1_1leg__funcdocs#aeed0147f934052f177c0761b75bacc65">LegStateBit</a> &amp;&#160;</td>
          <td class="paramname"><em>leg_state</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>leg_index</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>脚状態を取得する． </p>
<dl class="params"><dt>引数</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">leg_state</td><td>現在の脚状態． </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">leg_index</td><td>どの脚の状態を取得するか． 0 ～ 5 の整数で入力する． </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>戻り値</dt><dd>離散化された脚の位置を返す． </dd></dl>
<div class="dynheader">
被呼び出し関係図:</div>
<div class="dyncontent">
<div class="center"><img src="namespacedesignlab_1_1leg__func_ab7617bec21b4f953dc3b4641f58a0e2e_icgraph.png" border="0" usemap="#anamespacedesignlab_1_1leg__func_ab7617bec21b4f953dc3b4641f58a0e2e_icgraph" alt=""/></div>
<map name="anamespacedesignlab_1_1leg__func_ab7617bec21b4f953dc3b4641f58a0e2e_icgraph" id="anamespacedesignlab_1_1leg__func_ab7617bec21b4f953dc3b4641f58a0e2e_icgraph">
<area shape="rect" title="脚状態を取得する．" alt="" coords="517,39,659,81"/>
<area shape="rect" href="structdesignlab_1_1_graph_search_result_recorddocs#ab817d6534ee46d02492002e1966801e4" title="構造体の内容をCSV形式の文字列にして返す． , (カンマ) で区切られる．" alt="" coords="272,5,469,48"/>
<area shape="poly" title=" " alt="" coords="501,49,469,44,470,39,502,44"/>
<area shape="rect" href="structdesignlab_1_1_robot_state_nodedocs#a7fa3f31f167ac1cf468d81509f55c407" title="ノードの情報を文字列に変換する関数． &#160;&#160;デバッグ用に詳細な情報を出力する．" alt="" coords="281,72,460,115"/>
<area shape="poly" title=" " alt="" coords="502,76,461,82,460,77,501,71"/>
<area shape="rect" href="classdesignlab_1_1_system_main_graph_viewerdocs#a19d272521cd15d5e493e24ef5834c218" title="主要な処理を行う関数．" alt="" coords="18,39,211,81"/>
<area shape="poly" title=" " alt="" coords="265,82,211,75,211,70,266,77"/>
<area shape="rect" href="classdesignlab_1_1_system_main_simulationdocs#ab3579cf4bfec29b735c2c2c70b19e738" title="いままで int mainで行われた処理をまとめたもの． &#160;&#160;目標地点へ着くか，歩容計画に失敗した場合に，シミュレーションを終える． &#160;&#160;また，規定の回数シミュレーションしたら終了する．" alt="" coords="5,105,224,148"/>
<area shape="poly" title=" " alt="" coords="265,110,224,115,224,110,265,104"/>
</map>
</div>

</div>
</div>
<a id="ac79059fd4ea5194294609cd6f6834d93" name="ac79059fd4ea5194294609cd6f6834d93"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac79059fd4ea5194294609cd6f6834d93">&#9670;&#160;</a></span>GetGroundedLegIndexByVector()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void designlab::leg_func::GetGroundedLegIndexByVector </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespacedesignlab_1_1leg__funcdocs#aeed0147f934052f177c0761b75bacc65">LegStateBit</a> &amp;&#160;</td>
          <td class="paramname"><em>leg_state</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::vector&lt; int &gt; *&#160;</td>
          <td class="paramname"><em>res_index</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>接地している脚の脚番号0～5を，引数で参照渡しする関数． </p>
<dl class="params"><dt>引数</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">leg_state</td><td>現在の脚状態． </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">res_index</td><td>接地している脚の脚番号を格納する変数．空であること． </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
呼び出し関係図:</div>
<div class="dyncontent">
<div class="center"><img src="namespacedesignlab_1_1leg__func_ac79059fd4ea5194294609cd6f6834d93_cgraph.png" border="0" usemap="#anamespacedesignlab_1_1leg__func_ac79059fd4ea5194294609cd6f6834d93_cgraph" alt=""/></div>
<map name="anamespacedesignlab_1_1leg__func_ac79059fd4ea5194294609cd6f6834d93_cgraph" id="anamespacedesignlab_1_1leg__func_ac79059fd4ea5194294609cd6f6834d93_cgraph">
<area shape="rect" title="接地している脚の脚番号0～5を，引数で参照渡しする関数．" alt="" coords="5,5,218,48"/>
<area shape="rect" href="namespacedesignlab_1_1leg__funcdocs#a4b87ebe130ffec4a53e929bdb13c4ee3" title="脚番号 leg_index 0 ～ 5 に応じて，その脚が接地しているかを調べる． &#160;&#160;脚は右前脚を0番として，時計回りに0,1,2,3,4,5となる．左前足が5番．" alt="" coords="266,5,398,48"/>
<area shape="poly" title=" " alt="" coords="218,24,250,24,250,29,218,29"/>
</map>
</div>

</div>
</div>
<a id="a410e98538abd3a3346c5223e32100355" name="a410e98538abd3a3346c5223e32100355"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a410e98538abd3a3346c5223e32100355">&#9670;&#160;</a></span>GetGroundedLegNum()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int designlab::leg_func::GetGroundedLegNum </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespacedesignlab_1_1leg__funcdocs#aeed0147f934052f177c0761b75bacc65">LegStateBit</a> &amp;&#160;</td>
          <td class="paramname"><em>leg_state</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>接地している脚の本数を返す関数． </p>
<dl class="params"><dt>引数</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">leg_state</td><td>現在の脚状態． </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>戻り値</dt><dd>接地している脚の本数． </dd></dl>
<div class="dynheader">
呼び出し関係図:</div>
<div class="dyncontent">
<div class="center"><img src="namespacedesignlab_1_1leg__func_a410e98538abd3a3346c5223e32100355_cgraph.png" border="0" usemap="#anamespacedesignlab_1_1leg__func_a410e98538abd3a3346c5223e32100355_cgraph" alt=""/></div>
<map name="anamespacedesignlab_1_1leg__func_a410e98538abd3a3346c5223e32100355_cgraph" id="anamespacedesignlab_1_1leg__func_a410e98538abd3a3346c5223e32100355_cgraph">
<area shape="rect" title="接地している脚の本数を返す関数．" alt="" coords="5,5,160,48"/>
<area shape="rect" href="namespacedesignlab_1_1leg__funcdocs#a4b87ebe130ffec4a53e929bdb13c4ee3" title="脚番号 leg_index 0 ～ 5 に応じて，その脚が接地しているかを調べる． &#160;&#160;脚は右前脚を0番として，時計回りに0,1,2,3,4,5となる．左前足が5番．" alt="" coords="208,5,340,48"/>
<area shape="poly" title=" " alt="" coords="160,24,193,24,193,29,160,29"/>
</map>
</div>
<div class="dynheader">
被呼び出し関係図:</div>
<div class="dyncontent">
<div class="center"><img src="namespacedesignlab_1_1leg__func_a410e98538abd3a3346c5223e32100355_icgraph.png" border="0" usemap="#anamespacedesignlab_1_1leg__func_a410e98538abd3a3346c5223e32100355_icgraph" alt=""/></div>
<map name="anamespacedesignlab_1_1leg__func_a410e98538abd3a3346c5223e32100355_icgraph" id="anamespacedesignlab_1_1leg__func_a410e98538abd3a3346c5223e32100355_icgraph">
<area shape="rect" title="接地している脚の本数を返す関数．" alt="" coords="411,5,565,48"/>
<area shape="rect" href="namespacedesignlab_1_1leg__funcdocs#a783362f08ae38b6e3f5cb09aad52d51b" title="遊脚している脚の本数を返す関数．" alt="" coords="231,5,363,48"/>
<area shape="poly" title=" " alt="" coords="395,29,363,29,363,24,395,24"/>
<area shape="rect" href="classdesignlab_1_1_node_creator_leg_hierarchydocs#ade5f7af05493084aaca057a4f543ebb7" title="現在のノードから次のノード群を生成する．" alt="" coords="5,5,183,48"/>
<area shape="poly" title=" " alt="" coords="215,29,183,29,183,24,215,24"/>
</map>
</div>

</div>
</div>
<a id="aba40fd16353e3566503af79fd3bff892" name="aba40fd16353e3566503af79fd3bff892"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aba40fd16353e3566503af79fd3bff892">&#9670;&#160;</a></span>GetLegGroundedBit()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacedesignlab_1_1leg__funcdocs#a412eba2f9bdfb755114f63da0545ac61">LegGroundedBit</a> designlab::leg_func::GetLegGroundedBit </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespacedesignlab_1_1leg__funcdocs#aeed0147f934052f177c0761b75bacc65">LegStateBit</a> &amp;&#160;</td>
          <td class="paramname"><em>leg_state</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>脚が接地しているなら1，遊脚を0としたビット列で遊脚・接地脚の状態を返す． <br  />
 例えば 0 番脚のみが遊脚しているなら 0b111 110 を返す． </p>
<dl class="params"><dt>引数</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">leg_state</td><td>現在の脚状態． </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>戻り値</dt><dd>脚が接地しているなら1，遊脚を0としたビット列で遊脚・接地脚の状態を返す． </dd></dl>
<div class="dynheader">
呼び出し関係図:</div>
<div class="dyncontent">
<div class="center"><img src="namespacedesignlab_1_1leg__func_aba40fd16353e3566503af79fd3bff892_cgraph.png" border="0" usemap="#anamespacedesignlab_1_1leg__func_aba40fd16353e3566503af79fd3bff892_cgraph" alt=""/></div>
<map name="anamespacedesignlab_1_1leg__func_aba40fd16353e3566503af79fd3bff892_cgraph" id="anamespacedesignlab_1_1leg__func_aba40fd16353e3566503af79fd3bff892_cgraph">
<area shape="rect" title="脚が接地しているなら1，遊脚を0としたビット列で遊脚・接地脚の状態を返す． &#160;&#160;例えば 0 番脚のみが遊脚しているなら 0b111 110 を返す．" alt="" coords="5,5,149,48"/>
<area shape="rect" href="namespacedesignlab_1_1leg__funcdocs#a4b87ebe130ffec4a53e929bdb13c4ee3" title="脚番号 leg_index 0 ～ 5 に応じて，その脚が接地しているかを調べる． &#160;&#160;脚は右前脚を0番として，時計回りに0,1,2,3,4,5となる．左前足が5番．" alt="" coords="197,5,329,48"/>
<area shape="poly" title=" " alt="" coords="149,24,181,24,181,29,149,29"/>
</map>
</div>

</div>
</div>
<a id="ab008f25ef39dfb41ee4a76f3c9cc0529" name="ab008f25ef39dfb41ee4a76f3c9cc0529"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab008f25ef39dfb41ee4a76f3c9cc0529">&#9670;&#160;</a></span>GetLiftedLegIndexByVector()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void designlab::leg_func::GetLiftedLegIndexByVector </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespacedesignlab_1_1leg__funcdocs#aeed0147f934052f177c0761b75bacc65">LegStateBit</a> &amp;&#160;</td>
          <td class="paramname"><em>leg_state</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::vector&lt; int &gt; *&#160;</td>
          <td class="paramname"><em>res_index</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>遊脚している脚の脚番号0～5を，引数_res_numberで参照渡しする関数． </p>
<dl class="params"><dt>引数</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">leg_state</td><td>現在の脚状態． </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">res_index</td><td>遊脚している脚の脚番号を格納する変数．空であること． </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
呼び出し関係図:</div>
<div class="dyncontent">
<div class="center"><img src="namespacedesignlab_1_1leg__func_ab008f25ef39dfb41ee4a76f3c9cc0529_cgraph.png" border="0" usemap="#anamespacedesignlab_1_1leg__func_ab008f25ef39dfb41ee4a76f3c9cc0529_cgraph" alt=""/></div>
<map name="anamespacedesignlab_1_1leg__func_ab008f25ef39dfb41ee4a76f3c9cc0529_cgraph" id="anamespacedesignlab_1_1leg__func_ab008f25ef39dfb41ee4a76f3c9cc0529_cgraph">
<area shape="rect" title="遊脚している脚の脚番号0～5を，引数_res_numberで参照渡しする関数．" alt="" coords="5,5,193,48"/>
<area shape="rect" href="namespacedesignlab_1_1leg__funcdocs#a4b87ebe130ffec4a53e929bdb13c4ee3" title="脚番号 leg_index 0 ～ 5 に応じて，その脚が接地しているかを調べる． &#160;&#160;脚は右前脚を0番として，時計回りに0,1,2,3,4,5となる．左前足が5番．" alt="" coords="241,5,373,48"/>
<area shape="poly" title=" " alt="" coords="193,24,225,24,225,29,193,29"/>
</map>
</div>

</div>
</div>
<a id="a783362f08ae38b6e3f5cb09aad52d51b" name="a783362f08ae38b6e3f5cb09aad52d51b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a783362f08ae38b6e3f5cb09aad52d51b">&#9670;&#160;</a></span>GetLiftedLegNum()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int designlab::leg_func::GetLiftedLegNum </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespacedesignlab_1_1leg__funcdocs#aeed0147f934052f177c0761b75bacc65">LegStateBit</a> &amp;&#160;</td>
          <td class="paramname"><em>leg_state</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>遊脚している脚の本数を返す関数． </p>
<dl class="params"><dt>引数</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">leg_state</td><td>現在の脚状態． </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>戻り値</dt><dd>遊脚している脚の本数． </dd></dl>
<div class="dynheader">
呼び出し関係図:</div>
<div class="dyncontent">
<div class="center"><img src="namespacedesignlab_1_1leg__func_a783362f08ae38b6e3f5cb09aad52d51b_cgraph.png" border="0" usemap="#anamespacedesignlab_1_1leg__func_a783362f08ae38b6e3f5cb09aad52d51b_cgraph" alt=""/></div>
<map name="anamespacedesignlab_1_1leg__func_a783362f08ae38b6e3f5cb09aad52d51b_cgraph" id="anamespacedesignlab_1_1leg__func_a783362f08ae38b6e3f5cb09aad52d51b_cgraph">
<area shape="rect" title="遊脚している脚の本数を返す関数．" alt="" coords="5,5,138,48"/>
<area shape="rect" href="namespacedesignlab_1_1leg__funcdocs#a410e98538abd3a3346c5223e32100355" title="接地している脚の本数を返す関数．" alt="" coords="186,5,340,48"/>
<area shape="poly" title=" " alt="" coords="138,24,170,24,170,29,138,29"/>
<area shape="rect" href="namespacedesignlab_1_1leg__funcdocs#a4b87ebe130ffec4a53e929bdb13c4ee3" title="脚番号 leg_index 0 ～ 5 に応じて，その脚が接地しているかを調べる． &#160;&#160;脚は右前脚を0番として，時計回りに0,1,2,3,4,5となる．左前足が5番．" alt="" coords="388,5,520,48"/>
<area shape="poly" title=" " alt="" coords="340,24,373,24,373,29,340,29"/>
</map>
</div>
<div class="dynheader">
被呼び出し関係図:</div>
<div class="dyncontent">
<div class="center"><img src="namespacedesignlab_1_1leg__func_a783362f08ae38b6e3f5cb09aad52d51b_icgraph.png" border="0" usemap="#anamespacedesignlab_1_1leg__func_a783362f08ae38b6e3f5cb09aad52d51b_icgraph" alt=""/></div>
<map name="anamespacedesignlab_1_1leg__func_a783362f08ae38b6e3f5cb09aad52d51b_icgraph" id="anamespacedesignlab_1_1leg__func_a783362f08ae38b6e3f5cb09aad52d51b_icgraph">
<area shape="rect" title="遊脚している脚の本数を返す関数．" alt="" coords="231,5,363,48"/>
<area shape="rect" href="classdesignlab_1_1_node_creator_leg_hierarchydocs#ade5f7af05493084aaca057a4f543ebb7" title="現在のノードから次のノード群を生成する．" alt="" coords="5,5,183,48"/>
<area shape="poly" title=" " alt="" coords="215,29,183,29,183,24,215,24"/>
</map>
</div>

</div>
</div>
<a id="a4b87ebe130ffec4a53e929bdb13c4ee3" name="a4b87ebe130ffec4a53e929bdb13c4ee3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4b87ebe130ffec4a53e929bdb13c4ee3">&#9670;&#160;</a></span>IsGrounded()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool designlab::leg_func::IsGrounded </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespacedesignlab_1_1leg__funcdocs#aeed0147f934052f177c0761b75bacc65">LegStateBit</a> &amp;&#160;</td>
          <td class="paramname"><em>leg_state_bit</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>leg_index</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>脚番号 leg_index 0 ～ 5 に応じて，その脚が接地しているかを調べる． <br  />
 脚は右前脚を0番として，時計回りに0,1,2,3,4,5となる．左前足が5番． </p>
<dl class="params"><dt>引数</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">leg_state_bit</td><td>現在の脚状態． </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">leg_index</td><td>どの脚を調べるか． 0 ～ 5 の整数で入力する． </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>戻り値</dt><dd>
  <table class="retval">
    <tr><td class="paramname">true</td><td>脚が接地している． </td></tr>
    <tr><td class="paramname">false</td><td>脚が遊脚している． </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
被呼び出し関係図:</div>
<div class="dyncontent">
<div class="center"><img src="namespacedesignlab_1_1leg__func_a4b87ebe130ffec4a53e929bdb13c4ee3_icgraph.png" border="0" usemap="#anamespacedesignlab_1_1leg__func_a4b87ebe130ffec4a53e929bdb13c4ee3_icgraph" alt=""/></div>
<map name="anamespacedesignlab_1_1leg__func_a4b87ebe130ffec4a53e929bdb13c4ee3_icgraph" id="anamespacedesignlab_1_1leg__func_a4b87ebe130ffec4a53e929bdb13c4ee3_icgraph">
<area shape="rect" title="脚番号 leg_index 0 ～ 5 に応じて，その脚が接地しているかを調べる． &#160;&#160;脚は右前脚を0番として，時計回りに0,1,2,3,4,5となる．左前足が5番．" alt="" coords="757,421,890,464"/>
<area shape="rect" href="structdesignlab_1_1_robot_state_nodedocs#a28bedf0298ebf8f315a21294dd111f45" title="重心位置を変更する関数．" alt="" coords="507,88,700,131"/>
<area shape="poly" title=" " alt="" coords="812,407,798,358,776,298,746,235,707,178,680,153,650,133,653,129,684,149,711,174,751,232,781,296,803,356,817,406"/>
<area shape="rect" href="structdesignlab_1_1_robot_state_nodedocs#a73efce324f3ffd5ead5fbc663acd96a2" title="クォータニオンを変更し，胴体を回転させる関数．" alt="" coords="514,188,693,231"/>
<area shape="poly" title=" " alt="" coords="809,408,794,369,772,325,743,282,708,245,690,233,693,229,711,241,748,279,777,323,799,367,814,406"/>
<area shape="rect" href="classdesignlab_1_1_com_selectordocs#afe154bc35f0971d6c2c2a649299b23c3" title="重心を求める．" alt="" coords="524,255,683,297"/>
<area shape="poly" title=" " alt="" coords="799,410,760,359,735,333,708,312,682,298,685,293,711,307,739,329,764,355,803,406"/>
<area shape="rect" href="namespacedesignlab_1_1leg__funcdocs#ac79059fd4ea5194294609cd6f6834d93" title="接地している脚の脚番号0～5を，引数で参照渡しする関数．" alt="" coords="497,321,709,364"/>
<area shape="poly" title=" " alt="" coords="776,415,708,378,679,367,681,362,710,374,778,411"/>
<area shape="rect" href="namespacedesignlab_1_1leg__funcdocs#a410e98538abd3a3346c5223e32100355" title="接地している脚の本数を返す関数．" alt="" coords="526,388,680,431"/>
<area shape="poly" title=" " alt="" coords="742,433,680,424,681,418,742,428"/>
<area shape="rect" href="namespacedesignlab_1_1leg__funcdocs#aba40fd16353e3566503af79fd3bff892" title="脚が接地しているなら1，遊脚を0としたビット列で遊脚・接地脚の状態を返す． &#160;&#160;例えば 0 番脚のみが遊脚しているなら 0b111 110 を返す．" alt="" coords="532,455,675,497"/>
<area shape="poly" title=" " alt="" coords="742,458,676,468,675,462,742,452"/>
<area shape="rect" href="namespacedesignlab_1_1leg__funcdocs#ab008f25ef39dfb41ee4a76f3c9cc0529" title="遊脚している脚の脚番号0～5を，引数_res_numberで参照渡しする関数．" alt="" coords="510,521,697,564"/>
<area shape="poly" title=" " alt="" coords="778,475,710,512,681,523,679,518,708,507,776,470"/>
<area shape="rect" href="classdesignlab_1_1_i_hexapod_posture_validatordocs#a3abb48c6d7bfe266598759a9852268a2" title="全ての脚が可動範囲内にあるかどうかを判定する．" alt="" coords="512,588,695,631"/>
<area shape="poly" title=" " alt="" coords="803,479,764,530,739,556,711,578,690,590,687,585,708,574,735,552,760,527,799,476"/>
<area shape="rect" href="structdesignlab_1_1_graph_search_result_recorddocs#ab817d6534ee46d02492002e1966801e4" title="構造体の内容をCSV形式の文字列にして返す． , (カンマ) で区切られる．" alt="" coords="505,655,702,697"/>
<area shape="poly" title=" " alt="" coords="814,480,799,518,777,562,748,607,711,645,693,656,690,652,708,641,743,603,772,560,794,516,809,478"/>
<area shape="rect" href="structdesignlab_1_1_robot_state_nodedocs#a7fa3f31f167ac1cf468d81509f55c407" title="ノードの情報を文字列に変換する関数． &#160;&#160;デバッグ用に詳細な情報を出力する．" alt="" coords="514,721,693,764"/>
<area shape="poly" title=" " alt="" coords="819,480,808,532,787,594,756,657,735,686,711,711,695,723,692,719,708,707,731,682,751,654,782,592,802,530,814,479"/>
<area shape="rect" href="classdesignlab_1_1_node_creator_com_movedocs#a3fc5ccbce7199f0c7a7ce9ca5f4c221a" title="現在のノードから次のノード群を生成する．" alt="" coords="248,5,432,48"/>
<area shape="poly" title=" " alt="" coords="520,85,448,63,412,51,413,46,450,57,521,80"/>
<area shape="rect" href="classdesignlab_1_1_node_creator_com_move_straightdocs#a3e2fd67280dd581a695a09cea4f816a4" title="現在のノードから次のノード群を生成する．" alt="" coords="248,72,432,115"/>
<area shape="poly" title=" " alt="" coords="491,105,432,102,432,96,491,100"/>
<area shape="rect" href="classdesignlab_1_1_node_initializerdocs#a717aea9fc00fcb51c5ba3518fac717fc" title="地形に適した初期姿勢を設定する．" alt="" coords="257,139,423,181"/>
<area shape="poly" title=" " alt="" coords="491,133,423,147,422,142,490,128"/>
<area shape="rect" href="classdesignlab_1_1_node_creator_body_rotdocs#a162277203f0422a351c4d24e8167d43d" title="現在のノードから次のノード群を生成する．" alt="" coords="247,205,433,248"/>
<area shape="poly" title=" " alt="" coords="498,219,433,223,433,218,497,214"/>
<area shape="rect" href="namespacedesignlab_1_1leg__funcdocs#a783362f08ae38b6e3f5cb09aad52d51b" title="遊脚している脚の本数を返す関数．" alt="" coords="274,388,406,431"/>
<area shape="poly" title=" " alt="" coords="510,412,407,412,407,407,510,407"/>
<area shape="rect" href="classdesignlab_1_1_node_creator_leg_hierarchydocs#ade5f7af05493084aaca057a4f543ebb7" title="現在のノードから次のノード群を生成する．" alt="" coords="5,388,183,431"/>
<area shape="poly" title=" " alt="" coords="258,412,183,412,183,407,258,407"/>
<area shape="rect" href="classdesignlab_1_1_system_main_graph_viewerdocs#a19d272521cd15d5e493e24ef5834c218" title="主要な処理を行う関数．" alt="" coords="244,688,436,731"/>
<area shape="poly" title=" " alt="" coords="498,732,436,724,437,719,499,727"/>
<area shape="rect" href="classdesignlab_1_1_system_main_simulationdocs#ab3579cf4bfec29b735c2c2c70b19e738" title="いままで int mainで行われた処理をまとめたもの． &#160;&#160;目標地点へ着くか，歩容計画に失敗した場合に，シミュレーションを終える． &#160;&#160;また，規定の回数シミュレーションしたら終了する．" alt="" coords="231,755,449,797"/>
<area shape="poly" title=" " alt="" coords="498,759,450,765,449,759,497,753"/>
</map>
</div>

</div>
</div>
<a id="addb03f2c129476bc73065ee52708dcd5" name="addb03f2c129476bc73065ee52708dcd5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#addb03f2c129476bc73065ee52708dcd5">&#9670;&#160;</a></span>MakeLegStateBit()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacedesignlab_1_1leg__funcdocs#aeed0147f934052f177c0761b75bacc65">LegStateBit</a> designlab::leg_func::MakeLegStateBit </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="discrete__com__pos_8hdocs#aae667c8a4db0938ece7d037c80ea858e">enums::DiscreteComPos</a>&#160;</td>
          <td class="paramname"><em>discrete_com_pos</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::array&lt; bool, <a class="el" href="classdesignlab_1_1_hexapod_constdocs#a8441e7e101e967ded7c357feb9670812">HexapodConst::kLegNum</a> &gt; &amp;&#160;</td>
          <td class="paramname"><em>is_ground</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::array&lt; <a class="el" href="discrete__leg__pos_8hdocs#ab5710dabeacf5161415ee779fe947495">enums::DiscreteLegPos</a>, <a class="el" href="classdesignlab_1_1_hexapod_constdocs#a8441e7e101e967ded7c357feb9670812">HexapodConst::kLegNum</a> &gt; &amp;&#160;</td>
          <td class="paramname"><em>leg_pos</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>脚状態を作成して返す関数．脚状態は重心パターン， 脚の接地・遊脚，離散化した脚位置のデータが含まれる． </p>
<dl class="params"><dt>引数</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">discrete_com_pos</td><td>どの重心パターンか．詳しくは <a class="el" href="com__type_8hdocs">com_type.h</a> に記述． </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">is_ground</td><td>脚が接地しているかを表す bool型の配列． 接地しているならば true．遊脚しているならば false． </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">leg_pos</td><td>離散化した脚位置を表す変数． </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>戻り値</dt><dd>LegStateBit 作成した脚状態を返す． </dd></dl>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacedesignlabdocs">designlab</a></li><li class="navelem"><a class="el" href="namespacedesignlab_1_1leg__funcdocs">leg_func</a></li>
    <li class="footer">構築: <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.8 </li>
  </ul>
</div>
</body>
</html>
