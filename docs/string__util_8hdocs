<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="ja">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.8"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>GaitGeneration by Graph Search: C:/Users/hasegawa/Desktop/main/program/gait-generation-by-graph-search/DesignLab/string_util.h ファイル</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">GaitGeneration by Graph Search
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- 構築: Doxygen 1.9.8 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search/",'docs');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','検索');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('string__util_8hdocs',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">読み取り中…</div>
<div class="SRStatus" id="Searching">検索中…</div>
<div class="SRStatus" id="NoMatches">一致する文字列を見つけられません</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#namespaces">名前空間</a> &#124;
<a href="#func-members">関数</a>  </div>
  <div class="headertitle"><div class="title">string_util.h ファイル</div></div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &lt;string&gt;</code><br />
<code>#include &lt;vector&gt;</code><br />
<code>#include &lt;magic_enum.hpp&gt;</code><br />
</div>
<p><a href="string__util_8h_sourcedocs">[ソースコード]</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="namespaces" name="namespaces"></a>
名前空間</h2></td></tr>
<tr class="memitem:namespacedesignlab" id="r_namespacedesignlab"><td class="memItemLeft" align="right" valign="top">namespace &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacedesignlabdocs">designlab</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="func-members" name="func-members"></a>
関数</h2></td></tr>
<tr class="memitem:a516443410e813ac95135cfe942362c86" id="r_a516443410e813ac95135cfe942362c86"><td class="memItemLeft" align="right" valign="top">std::vector&lt; std::string &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="string__util_8cppdocs#a516443410e813ac95135cfe942362c86">designlab::string_util::Split</a> (<a class="el" href="string__util_8hdocs#a87e32a810705f9dc98665faf2ae837a7">const</a> std::string &amp;<a class="el" href="string__util_8hdocs#a87e32a810705f9dc98665faf2ae837a7">str</a>, <a class="el" href="string__util_8hdocs#a87e32a810705f9dc98665faf2ae837a7">const</a> std::string &amp;<a class="el" href="string__util_8hdocs#a87e32a810705f9dc98665faf2ae837a7">delim</a>)</td></tr>
<tr class="memdesc:a516443410e813ac95135cfe942362c86"><td class="mdescLeft">&#160;</td><td class="mdescRight">文字列を分割する関数．指定した文字で文字列を分割する． <br  />
 分割した結果，空白が含まれる場合や文字列がない場合は，そのまま返す． <br  />
 最後が区切り文字で終わる場合は，それを無視する．  <br /></td></tr>
<tr class="separator:a516443410e813ac95135cfe942362c86"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7e2e9a4fc84ff9552fd5d1887d4221c3" id="r_a7e2e9a4fc84ff9552fd5d1887d4221c3"><td class="memTemplParams" colspan="2">template&lt;<a class="el" href="string__util_8hdocs#a87e32a810705f9dc98665faf2ae837a7">typename</a> T &gt; </td></tr>
<tr class="memitem:a7e2e9a4fc84ff9552fd5d1887d4221c3"><td class="memTemplItemLeft" align="right" valign="top">std::string&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="string__util_8hdocs#a7e2e9a4fc84ff9552fd5d1887d4221c3">designlab::string_util::EnumToStringRemoveTopK</a> (<a class="el" href="string__util_8hdocs#a87e32a810705f9dc98665faf2ae837a7">const</a> T &amp;<a class="el" href="string__util_8hdocs#a87e32a810705f9dc98665faf2ae837a7">enum_value</a>)</td></tr>
<tr class="memdesc:a7e2e9a4fc84ff9552fd5d1887d4221c3"><td class="mdescLeft">&#160;</td><td class="mdescRight">enumを文字列に変換する関数． <br  />
 Google C++ coding style だと enumの要素は 先頭にkをつけてキャメルケースで書くことが推奨されている． <br  />
 例えば，  <br /></td></tr>
<tr class="separator:a7e2e9a4fc84ff9552fd5d1887d4221c3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a87e32a810705f9dc98665faf2ae837a7" id="r_a87e32a810705f9dc98665faf2ae837a7"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a87e32a810705f9dc98665faf2ae837a7"><td class="memTemplItemLeft" align="right" valign="top">std::string&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="string__util_8hdocs#a87e32a810705f9dc98665faf2ae837a7">designlab::string_util::EnumValuesToString</a> (const std::string separator)</td></tr>
<tr class="memdesc:a87e32a810705f9dc98665faf2ae837a7"><td class="mdescLeft">&#160;</td><td class="mdescRight">enum型を渡すと，その要素を列挙した文字列を返す関数．  <br /></td></tr>
<tr class="separator:a87e32a810705f9dc98665faf2ae837a7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a20dde22abdea4d5aa4cca87aa7877645" id="r_a20dde22abdea4d5aa4cca87aa7877645"><td class="memTemplParams" colspan="2">template&lt;<a class="el" href="string__util_8hdocs#a87e32a810705f9dc98665faf2ae837a7">typename</a> T , <a class="el" href="string__util_8hdocs#a87e32a810705f9dc98665faf2ae837a7">typename</a>  = std::enable_if_t&lt;std::is_enum&lt;T&gt;::value&gt;&gt; </td></tr>
<tr class="memitem:a20dde22abdea4d5aa4cca87aa7877645"><td class="memTemplItemLeft" align="right" valign="top">std::string&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="string__util_8hdocs#a20dde22abdea4d5aa4cca87aa7877645">designlab::string_util::EnumEntriesToString</a> (<a class="el" href="string__util_8hdocs#a87e32a810705f9dc98665faf2ae837a7">const</a> std::string <a class="el" href="string__util_8hdocs#a87e32a810705f9dc98665faf2ae837a7">separator</a>)</td></tr>
<tr class="memdesc:a20dde22abdea4d5aa4cca87aa7877645"><td class="mdescLeft">&#160;</td><td class="mdescRight">enum型を渡すと，その要素と値を変換したものを列挙した文字列を返す関数．  <br /></td></tr>
<tr class="separator:a20dde22abdea4d5aa4cca87aa7877645"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5015efa6bcfc6771979d7f1aa4e0928d" id="r_a5015efa6bcfc6771979d7f1aa4e0928d"><td class="memTemplParams" colspan="2"><a id="a5015efa6bcfc6771979d7f1aa4e0928d" name="a5015efa6bcfc6771979d7f1aa4e0928d"></a>
template&lt;<a class="el" href="string__util_8hdocs#a87e32a810705f9dc98665faf2ae837a7">typename</a> T &gt; </td></tr>
<tr class="memitem:a5015efa6bcfc6771979d7f1aa4e0928d"><td class="memTemplItemLeft" align="right" valign="top">std::string&#160;</td><td class="memTemplItemRight" valign="bottom"><b>designlab::string_util::GetTypeName</b> (<a class="el" href="string__util_8hdocs#a87e32a810705f9dc98665faf2ae837a7">const</a> T &amp;<a class="el" href="string__util_8hdocs#a87e32a810705f9dc98665faf2ae837a7">type</a>)</td></tr>
<tr class="separator:a5015efa6bcfc6771979d7f1aa4e0928d"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">詳解</h2>
<div class="textblock"><dl class="section author"><dt>著者</dt><dd>Hasegawa </dd></dl>
<dl class="section copyright"><dt>著作権所有</dt><dd>(C) 2023 Design Engineering Laboratory, Saitama University All right reserved. </dd></dl>
</div><h2 class="groupheader">関数詳解</h2>
<a id="a20dde22abdea4d5aa4cca87aa7877645" name="a20dde22abdea4d5aa4cca87aa7877645"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a20dde22abdea4d5aa4cca87aa7877645">&#9670;&#160;</a></span>EnumEntriesToString()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T , typename  = std::enable_if_t&lt;std::is_enum&lt;T&gt;::value&gt;&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">std::string designlab::string_util::EnumEntriesToString </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="string__util_8hdocs#a87e32a810705f9dc98665faf2ae837a7">const</a> std::string&#160;</td>
          <td class="paramname"><em>separator</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>enum型を渡すと，その要素と値を変換したものを列挙した文字列を返す関数． </p>
<dl class="params"><dt>引数</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">separator</td><td>列挙した文字列の区切り文字． </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>戻り値</dt><dd>enumの要素と値を変換したものを列挙した文字列． </dd></dl>
<dl class="tparams"><dt>テンプレート引数</dt><dd>
  <table class="tparams">
    <tr><td class="paramname">T</td><td>enum型． </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
呼び出し関係図:</div>
<div class="dyncontent">
<div class="center"><img src="string__util_8h_a20dde22abdea4d5aa4cca87aa7877645_cgraph.png" border="0" usemap="#astring__util_8h_a20dde22abdea4d5aa4cca87aa7877645_cgraph" alt=""/></div>
<map name="astring__util_8h_a20dde22abdea4d5aa4cca87aa7877645_cgraph" id="astring__util_8h_a20dde22abdea4d5aa4cca87aa7877645_cgraph">
<area shape="rect" title="enum型を渡すと，その要素と値を変換したものを列挙した文字列を返す関数．" alt="" coords="5,29,158,72"/>
<area shape="poly" title=" " alt="" coords="52,29,51,19,55,11,66,5,82,3,98,5,108,11,105,16,96,10,81,8,68,10,59,14,56,20,57,28"/>
</map>
</div>
<div class="dynheader">
被呼び出し関係図:</div>
<div class="dyncontent">
<div class="center"><img src="string__util_8h_a20dde22abdea4d5aa4cca87aa7877645_icgraph.png" border="0" usemap="#astring__util_8h_a20dde22abdea4d5aa4cca87aa7877645_icgraph" alt=""/></div>
<map name="astring__util_8h_a20dde22abdea4d5aa4cca87aa7877645_icgraph" id="astring__util_8h_a20dde22abdea4d5aa4cca87aa7877645_icgraph">
<area shape="rect" title="enum型を渡すと，その要素と値を変換したものを列挙した文字列を返す関数．" alt="" coords="5,29,158,72"/>
<area shape="poly" title=" " alt="" coords="105,16,96,10,81,8,68,10,59,14,56,20,57,28,52,29,51,19,55,11,66,5,82,3,98,5,108,11"/>
</map>
</div>

</div>
</div>
<a id="a7e2e9a4fc84ff9552fd5d1887d4221c3" name="a7e2e9a4fc84ff9552fd5d1887d4221c3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7e2e9a4fc84ff9552fd5d1887d4221c3">&#9670;&#160;</a></span>EnumToStringRemoveTopK()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">std::string designlab::string_util::EnumToStringRemoveTopK </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="string__util_8hdocs#a87e32a810705f9dc98665faf2ae837a7">const</a> T &amp;&#160;</td>
          <td class="paramname"><em>enum_value</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>enumを文字列に変換する関数． <br  />
 Google C++ coding style だと enumの要素は 先頭にkをつけてキャメルケースで書くことが推奨されている． <br  />
 例えば， </p>
<div class="fragment"><div class="line"><span class="keyword">enum class</span> Color</div>
<div class="line">{</div>
<div class="line">    kRed,</div>
<div class="line">    kGreen,</div>
<div class="line">    kBlue</div>
<div class="line">}</div>
</div><!-- fragment --><p> <br  />
 と書く． <br  />
 このため，この関数はその先頭のkを除去する機能を提供し， Color::kRed を渡すと "Red" という文字列を返す． </p>
<h3><a class="anchor" id="参考"></a>
参考</h3>
<ul>
<li><a href="https://marycore.jp/prog/cpp/std-string-split/">https://marycore.jp/prog/cpp/std-string-split/</a> (アクセス日 2023/12/26) </li>
<li><a href="https://marycore.jp/prog/cpp/std-string-find-search/#find%EF%BC%8Frfind">https://marycore.jp/prog/cpp/std-string-find-search/#find%EF%BC%8Frfind</a> (アクセス日 2023/12/26)</li>
</ul>
<dl class="params"><dt>引数</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">enum_value</td><td>enumの要素． </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>戻り値</dt><dd>enumの要素を文字列にしたもの． </dd></dl>
<dl class="tparams"><dt>テンプレート引数</dt><dd>
  <table class="tparams">
    <tr><td class="paramname">T</td><td>enum型． </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
呼び出し関係図:</div>
<div class="dyncontent">
<div class="center"><img src="string__util_8h_a7e2e9a4fc84ff9552fd5d1887d4221c3_cgraph.png" border="0" usemap="#astring__util_8h_a7e2e9a4fc84ff9552fd5d1887d4221c3_cgraph" alt=""/></div>
<map name="astring__util_8h_a7e2e9a4fc84ff9552fd5d1887d4221c3_cgraph" id="astring__util_8h_a7e2e9a4fc84ff9552fd5d1887d4221c3_cgraph">
<area shape="rect" title="enumを文字列に変換する関数． &#160;&#160;Google C++ coding style だと enumの要素は 先頭にkをつけてキャメルケースで書くことが推奨されている． &#160;&#160;例えば，" alt="" coords="5,29,193,72"/>
<area shape="poly" title=" " alt="" coords="63,29,62,19,68,10,80,5,99,3,119,5,131,11,129,16,118,10,99,8,82,10,71,15,67,21,68,28"/>
</map>
</div>
<div class="dynheader">
被呼び出し関係図:</div>
<div class="dyncontent">
<div class="center"><img src="string__util_8h_a7e2e9a4fc84ff9552fd5d1887d4221c3_icgraph.png" border="0" usemap="#astring__util_8h_a7e2e9a4fc84ff9552fd5d1887d4221c3_icgraph" alt=""/></div>
<map name="astring__util_8h_a7e2e9a4fc84ff9552fd5d1887d4221c3_icgraph" id="astring__util_8h_a7e2e9a4fc84ff9552fd5d1887d4221c3_icgraph">
<area shape="rect" title="enumを文字列に変換する関数． &#160;&#160;Google C++ coding style だと enumの要素は 先頭にkをつけてキャメルケースで書くことが推奨されている． &#160;&#160;例えば，" alt="" coords="5,29,193,72"/>
<area shape="poly" title=" " alt="" coords="129,16,118,10,99,8,82,10,71,15,67,21,68,28,63,29,62,19,68,10,80,5,99,3,119,5,131,11"/>
</map>
</div>

</div>
</div>
<a id="a87e32a810705f9dc98665faf2ae837a7" name="a87e32a810705f9dc98665faf2ae837a7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a87e32a810705f9dc98665faf2ae837a7">&#9670;&#160;</a></span>EnumValuesToString()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">std::string designlab::string_util::EnumValuesToString </td>
          <td>(</td>
          <td class="paramtype">const std::string&#160;</td>
          <td class="paramname"><em>separator</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>enum型を渡すと，その要素を列挙した文字列を返す関数． </p>
<dl class="params"><dt>引数</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">separator</td><td>列挙した文字列の区切り文字． </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>戻り値</dt><dd>enumの要素を列挙した文字列． </dd></dl>
<dl class="tparams"><dt>テンプレート引数</dt><dd>
  <table class="tparams">
    <tr><td class="paramname">T</td><td>enum型． </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
呼び出し関係図:</div>
<div class="dyncontent">
<div class="center"><img src="string__util_8h_a87e32a810705f9dc98665faf2ae837a7_cgraph.png" border="0" usemap="#astring__util_8h_a87e32a810705f9dc98665faf2ae837a7_cgraph" alt=""/></div>
<map name="astring__util_8h_a87e32a810705f9dc98665faf2ae837a7_cgraph" id="astring__util_8h_a87e32a810705f9dc98665faf2ae837a7_cgraph">
<area shape="rect" title="enum型を渡すと，その要素を列挙した文字列を返す関数．" alt="" coords="5,29,157,72"/>
<area shape="poly" title=" " alt="" coords="51,29,50,19,55,11,66,5,81,3,98,5,108,11,105,16,96,10,81,8,67,10,59,14,55,20,57,28"/>
</map>
</div>
<div class="dynheader">
被呼び出し関係図:</div>
<div class="dyncontent">
<div class="center"><img src="string__util_8h_a87e32a810705f9dc98665faf2ae837a7_icgraph.png" border="0" usemap="#astring__util_8h_a87e32a810705f9dc98665faf2ae837a7_icgraph" alt=""/></div>
<map name="astring__util_8h_a87e32a810705f9dc98665faf2ae837a7_icgraph" id="astring__util_8h_a87e32a810705f9dc98665faf2ae837a7_icgraph">
<area shape="rect" title="enum型を渡すと，その要素を列挙した文字列を返す関数．" alt="" coords="5,29,157,72"/>
<area shape="poly" title=" " alt="" coords="105,16,96,10,81,8,67,10,59,14,55,20,57,28,51,29,50,19,55,11,66,5,81,3,98,5,108,11"/>
</map>
</div>

</div>
</div>
<a id="a516443410e813ac95135cfe942362c86" name="a516443410e813ac95135cfe942362c86"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a516443410e813ac95135cfe942362c86">&#9670;&#160;</a></span>Split()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt; std::string &gt; designlab::string_util::Split </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="string__util_8hdocs#a87e32a810705f9dc98665faf2ae837a7">const</a> std::string &amp;&#160;</td>
          <td class="paramname"><em>str</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="string__util_8hdocs#a87e32a810705f9dc98665faf2ae837a7">const</a> std::string &amp;&#160;</td>
          <td class="paramname"><em>delim</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>文字列を分割する関数．指定した文字で文字列を分割する． <br  />
 分割した結果，空白が含まれる場合や文字列がない場合は，そのまま返す． <br  />
 最後が区切り文字で終わる場合は，それを無視する． </p>
<dl class="params"><dt>引数</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">str</td><td>分割する文字列． </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">delim</td><td>区切り文字，あるいは文字列． </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>戻り値</dt><dd>分割した文字列． </dd></dl>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_65b03a49640d0599dba701447d580643docs">hasegawa</a></li><li class="navelem"><a class="el" href="dir_2854940d141de6d3c7cee6483e7afda9docs">Desktop</a></li><li class="navelem"><a class="el" href="dir_fad4873fd0f485db7102df865d883d5cdocs">main</a></li><li class="navelem"><a class="el" href="dir_227eda1db808a252df8518c263632a71docs">program</a></li><li class="navelem"><a class="el" href="dir_c48eef75fce7d1d05a2392783bd08b15docs">gait-generation-by-graph-search</a></li><li class="navelem"><a class="el" href="dir_6970d783dbb606469f8f14a039e83820docs">DesignLab</a></li><li class="navelem"><a class="el" href="string__util_8hdocs">string_util.h</a></li>
    <li class="footer">構築: <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.8 </li>
  </ul>
</div>
</body>
</html>
