<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="ja">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.8"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>GaitGeneration by Graph Search: designlab::Vector2 構造体</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">GaitGeneration by Graph Search
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- 構築: Doxygen 1.9.8 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search/",'docs');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','検索');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('structdesignlab_1_1_vector2docs',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">読み取り中…</div>
<div class="SRStatus" id="Searching">検索中…</div>
<div class="SRStatus" id="NoMatches">一致する文字列を見つけられません</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">公開メンバ関数</a> &#124;
<a href="#pub-static-methods">静的公開メンバ関数</a> &#124;
<a href="#pub-attribs">公開変数類</a> &#124;
<a href="structdesignlab_1_1_vector2-membersdocs">全メンバ一覧</a>  </div>
  <div class="headertitle"><div class="title">designlab::Vector2 構造体<span class="mlabels"><span class="mlabel">final</span></span></div></div>
</div><!--header-->
<div class="contents">

<p>2次元の位置ベクトルを表す構造体．  
 <a href="structdesignlab_1_1_vector2docs#details">[詳解]</a></p>

<p><code>#include &lt;<a class="el" href="math__vector2_8h_sourcedocs">math_vector2.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
公開メンバ関数</h2></td></tr>
<tr class="memitem:ab35ca92f21e1a25731f999a84af53a07" id="r_ab35ca92f21e1a25731f999a84af53a07"><td class="memItemLeft" align="right" valign="top"><a id="ab35ca92f21e1a25731f999a84af53a07" name="ab35ca92f21e1a25731f999a84af53a07"></a>
constexpr&#160;</td><td class="memItemRight" valign="bottom"><b>Vector2</b> (float x_pos, float y_pos)</td></tr>
<tr class="separator:ab35ca92f21e1a25731f999a84af53a07"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aca0342cb14cdb2f3fab8d781a68071f0" id="r_aca0342cb14cdb2f3fab8d781a68071f0"><td class="memItemLeft" align="right" valign="top"><a id="aca0342cb14cdb2f3fab8d781a68071f0" name="aca0342cb14cdb2f3fab8d781a68071f0"></a>
constexpr&#160;</td><td class="memItemRight" valign="bottom"><b>Vector2</b> (const <a class="el" href="structdesignlab_1_1_vector2docs">Vector2</a> &amp;other)=default</td></tr>
<tr class="separator:aca0342cb14cdb2f3fab8d781a68071f0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4f12cbeacd693ac9aa78f8b3395ea6a8" id="r_a4f12cbeacd693ac9aa78f8b3395ea6a8"><td class="memItemLeft" align="right" valign="top"><a id="a4f12cbeacd693ac9aa78f8b3395ea6a8" name="a4f12cbeacd693ac9aa78f8b3395ea6a8"></a>
constexpr&#160;</td><td class="memItemRight" valign="bottom"><b>Vector2</b> (<a class="el" href="structdesignlab_1_1_vector2docs">Vector2</a> &amp;&amp;other) noexcept=default</td></tr>
<tr class="separator:a4f12cbeacd693ac9aa78f8b3395ea6a8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a198a11985bb68d4bfec82c7e981ee395" id="r_a198a11985bb68d4bfec82c7e981ee395"><td class="memItemLeft" align="right" valign="top"><a id="a198a11985bb68d4bfec82c7e981ee395" name="a198a11985bb68d4bfec82c7e981ee395"></a>
constexpr <a class="el" href="structdesignlab_1_1_vector2docs">Vector2</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>operator=</b> (const <a class="el" href="structdesignlab_1_1_vector2docs">Vector2</a> &amp;other)=default</td></tr>
<tr class="separator:a198a11985bb68d4bfec82c7e981ee395"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a40fd57a54d68dd50cc09649ee9e9bcb2" id="r_a40fd57a54d68dd50cc09649ee9e9bcb2"><td class="memItemLeft" align="right" valign="top"><a id="a40fd57a54d68dd50cc09649ee9e9bcb2" name="a40fd57a54d68dd50cc09649ee9e9bcb2"></a>
constexpr <a class="el" href="structdesignlab_1_1_vector2docs">Vector2</a>&#160;</td><td class="memItemRight" valign="bottom"><b>operator+</b> () const</td></tr>
<tr class="separator:a40fd57a54d68dd50cc09649ee9e9bcb2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a39f06ada9c3b79c7b8bbf5d83d66326e" id="r_a39f06ada9c3b79c7b8bbf5d83d66326e"><td class="memItemLeft" align="right" valign="top"><a id="a39f06ada9c3b79c7b8bbf5d83d66326e" name="a39f06ada9c3b79c7b8bbf5d83d66326e"></a>
constexpr <a class="el" href="structdesignlab_1_1_vector2docs">Vector2</a>&#160;</td><td class="memItemRight" valign="bottom"><b>operator-</b> () const</td></tr>
<tr class="separator:a39f06ada9c3b79c7b8bbf5d83d66326e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a103d781a640e691b9e004b4412d99a6d" id="r_a103d781a640e691b9e004b4412d99a6d"><td class="memItemLeft" align="right" valign="top"><a id="a103d781a640e691b9e004b4412d99a6d" name="a103d781a640e691b9e004b4412d99a6d"></a>
constexpr <a class="el" href="structdesignlab_1_1_vector2docs">Vector2</a>&#160;</td><td class="memItemRight" valign="bottom"><b>operator+</b> (const <a class="el" href="structdesignlab_1_1_vector2docs">Vector2</a> &amp;other) const</td></tr>
<tr class="separator:a103d781a640e691b9e004b4412d99a6d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aede607bbe13ec3e061d5cac62a78bbe2" id="r_aede607bbe13ec3e061d5cac62a78bbe2"><td class="memItemLeft" align="right" valign="top"><a id="aede607bbe13ec3e061d5cac62a78bbe2" name="aede607bbe13ec3e061d5cac62a78bbe2"></a>
constexpr <a class="el" href="structdesignlab_1_1_vector2docs">Vector2</a>&#160;</td><td class="memItemRight" valign="bottom"><b>operator-</b> (const <a class="el" href="structdesignlab_1_1_vector2docs">Vector2</a> &amp;other) const</td></tr>
<tr class="separator:aede607bbe13ec3e061d5cac62a78bbe2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a404824eabd1d97b33a64b758772074db" id="r_a404824eabd1d97b33a64b758772074db"><td class="memItemLeft" align="right" valign="top"><a id="a404824eabd1d97b33a64b758772074db" name="a404824eabd1d97b33a64b758772074db"></a>
constexpr <a class="el" href="structdesignlab_1_1_vector2docs">Vector2</a>&#160;</td><td class="memItemRight" valign="bottom"><b>operator*</b> (float s) const</td></tr>
<tr class="separator:a404824eabd1d97b33a64b758772074db"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a83d564ad471355eab0c5cd42b608b7a2" id="r_a83d564ad471355eab0c5cd42b608b7a2"><td class="memItemLeft" align="right" valign="top"><a id="a83d564ad471355eab0c5cd42b608b7a2" name="a83d564ad471355eab0c5cd42b608b7a2"></a>
constexpr <a class="el" href="structdesignlab_1_1_vector2docs">Vector2</a>&#160;</td><td class="memItemRight" valign="bottom"><b>operator/</b> (float s) const</td></tr>
<tr class="separator:a83d564ad471355eab0c5cd42b608b7a2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6439e64d10aeabb02c1b7575db4b7aee" id="r_a6439e64d10aeabb02c1b7575db4b7aee"><td class="memItemLeft" align="right" valign="top"><a id="a6439e64d10aeabb02c1b7575db4b7aee" name="a6439e64d10aeabb02c1b7575db4b7aee"></a>
<a class="el" href="structdesignlab_1_1_vector2docs">Vector2</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>operator+=</b> (const <a class="el" href="structdesignlab_1_1_vector2docs">Vector2</a> &amp;other)</td></tr>
<tr class="separator:a6439e64d10aeabb02c1b7575db4b7aee"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af33e854235a4ae0a6c074432449115a1" id="r_af33e854235a4ae0a6c074432449115a1"><td class="memItemLeft" align="right" valign="top"><a id="af33e854235a4ae0a6c074432449115a1" name="af33e854235a4ae0a6c074432449115a1"></a>
<a class="el" href="structdesignlab_1_1_vector2docs">Vector2</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>operator-=</b> (const <a class="el" href="structdesignlab_1_1_vector2docs">Vector2</a> &amp;other)</td></tr>
<tr class="separator:af33e854235a4ae0a6c074432449115a1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3dc761b4aad52f00ad6d2acfedd7adba" id="r_a3dc761b4aad52f00ad6d2acfedd7adba"><td class="memItemLeft" align="right" valign="top"><a id="a3dc761b4aad52f00ad6d2acfedd7adba" name="a3dc761b4aad52f00ad6d2acfedd7adba"></a>
<a class="el" href="structdesignlab_1_1_vector2docs">Vector2</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>operator*=</b> (float s)</td></tr>
<tr class="separator:a3dc761b4aad52f00ad6d2acfedd7adba"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abac03fbb862601029347fd4cbf95141e" id="r_abac03fbb862601029347fd4cbf95141e"><td class="memItemLeft" align="right" valign="top"><a id="abac03fbb862601029347fd4cbf95141e" name="abac03fbb862601029347fd4cbf95141e"></a>
<a class="el" href="structdesignlab_1_1_vector2docs">Vector2</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>operator/=</b> (float s)</td></tr>
<tr class="separator:abac03fbb862601029347fd4cbf95141e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5df1f1d62735d125f107a9926300ebd1" id="r_a5df1f1d62735d125f107a9926300ebd1"><td class="memItemLeft" align="right" valign="top"><a id="a5df1f1d62735d125f107a9926300ebd1" name="a5df1f1d62735d125f107a9926300ebd1"></a>
constexpr bool&#160;</td><td class="memItemRight" valign="bottom"><b>operator==</b> (const <a class="el" href="structdesignlab_1_1_vector2docs">Vector2</a> &amp;other) const</td></tr>
<tr class="separator:a5df1f1d62735d125f107a9926300ebd1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad20ab76b0ce27a42acd7e02d2221276d" id="r_ad20ab76b0ce27a42acd7e02d2221276d"><td class="memItemLeft" align="right" valign="top"><a id="ad20ab76b0ce27a42acd7e02d2221276d" name="ad20ab76b0ce27a42acd7e02d2221276d"></a>
constexpr bool&#160;</td><td class="memItemRight" valign="bottom"><b>operator!=</b> (const <a class="el" href="structdesignlab_1_1_vector2docs">Vector2</a> &amp;other) const</td></tr>
<tr class="separator:ad20ab76b0ce27a42acd7e02d2221276d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a80b722825f1793105702da0677867a08" id="r_a80b722825f1793105702da0677867a08"><td class="memItemLeft" align="right" valign="top">constexpr float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structdesignlab_1_1_vector2docs#a80b722825f1793105702da0677867a08">GetSquaredLength</a> () const noexcept</td></tr>
<tr class="memdesc:a80b722825f1793105702da0677867a08"><td class="mdescLeft">&#160;</td><td class="mdescRight">このベクトルの長さの2乗を返す．  <br /></td></tr>
<tr class="separator:a80b722825f1793105702da0677867a08"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab62323b441e66a37e41668fb0ac7ae99" id="r_ab62323b441e66a37e41668fb0ac7ae99"><td class="memItemLeft" align="right" valign="top">float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structdesignlab_1_1_vector2docs#ab62323b441e66a37e41668fb0ac7ae99">GetLength</a> () const</td></tr>
<tr class="memdesc:ab62323b441e66a37e41668fb0ac7ae99"><td class="mdescLeft">&#160;</td><td class="mdescRight">このベクトルの長さを返す．  <br /></td></tr>
<tr class="separator:ab62323b441e66a37e41668fb0ac7ae99"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4ff63a4ad67617a23ed4206d994ecc84" id="r_a4ff63a4ad67617a23ed4206d994ecc84"><td class="memItemLeft" align="right" valign="top">constexpr float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structdesignlab_1_1_vector2docs#a4ff63a4ad67617a23ed4206d994ecc84">Dot</a> (const <a class="el" href="structdesignlab_1_1_vector2docs">Vector2</a> &amp;other) const noexcept</td></tr>
<tr class="memdesc:a4ff63a4ad67617a23ed4206d994ecc84"><td class="mdescLeft">&#160;</td><td class="mdescRight">自分・引数 の内積の結果を返す．  <br /></td></tr>
<tr class="separator:a4ff63a4ad67617a23ed4206d994ecc84"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab3002b222969339234b908a42a735f44" id="r_ab3002b222969339234b908a42a735f44"><td class="memItemLeft" align="right" valign="top">constexpr float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structdesignlab_1_1_vector2docs#ab3002b222969339234b908a42a735f44">Cross</a> (const <a class="el" href="structdesignlab_1_1_vector2docs">Vector2</a> &amp;other) const noexcept</td></tr>
<tr class="memdesc:ab3002b222969339234b908a42a735f44"><td class="mdescLeft">&#160;</td><td class="mdescRight">自分×引数 の外積の結果を返す．  <br /></td></tr>
<tr class="separator:ab3002b222969339234b908a42a735f44"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0480523390e9aa64d8df223dbb3ffbd6" id="r_a0480523390e9aa64d8df223dbb3ffbd6"><td class="memItemLeft" align="right" valign="top">float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structdesignlab_1_1_vector2docs#a0480523390e9aa64d8df223dbb3ffbd6">GetDistanceFrom</a> (const <a class="el" href="structdesignlab_1_1_vector2docs">Vector2</a> &amp;other) const noexcept</td></tr>
<tr class="memdesc:a0480523390e9aa64d8df223dbb3ffbd6"><td class="mdescLeft">&#160;</td><td class="mdescRight">このベクトルと other の距離を返す．  <br /></td></tr>
<tr class="separator:a0480523390e9aa64d8df223dbb3ffbd6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5b486befcef8a9c50ff78137783c3ba9" id="r_a5b486befcef8a9c50ff78137783c3ba9"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structdesignlab_1_1_vector2docs">Vector2</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structdesignlab_1_1_vector2docs#a5b486befcef8a9c50ff78137783c3ba9">GetNormalized</a> () const</td></tr>
<tr class="memdesc:a5b486befcef8a9c50ff78137783c3ba9"><td class="mdescLeft">&#160;</td><td class="mdescRight">このベクトルを正規化したベクトルを返す．  <br /></td></tr>
<tr class="separator:a5b486befcef8a9c50ff78137783c3ba9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a38510ae37bb30094489c2a09a06f204a" id="r_a38510ae37bb30094489c2a09a06f204a"><td class="memItemLeft" align="right" valign="top">constexpr bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structdesignlab_1_1_vector2docs#a38510ae37bb30094489c2a09a06f204a">IsZero</a> () const noexcept</td></tr>
<tr class="memdesc:a38510ae37bb30094489c2a09a06f204a"><td class="mdescLeft">&#160;</td><td class="mdescRight">このベクトルが0ならば true．  <br /></td></tr>
<tr class="separator:a38510ae37bb30094489c2a09a06f204a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac75623bf80d61ccba4a26c6810eddd3c" id="r_ac75623bf80d61ccba4a26c6810eddd3c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structdesignlab_1_1_vector2docs#ac75623bf80d61ccba4a26c6810eddd3c">Normalize</a> () noexcept</td></tr>
<tr class="memdesc:ac75623bf80d61ccba4a26c6810eddd3c"><td class="mdescLeft">&#160;</td><td class="mdescRight">このベクトルを正規化する． <br  />
 絶対値が0のベクトルの場合，そのまま0ベクトルになる．  <br /></td></tr>
<tr class="separator:ac75623bf80d61ccba4a26c6810eddd3c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a139b9e4be383a8910f0abdc44aff73a6" id="r_a139b9e4be383a8910f0abdc44aff73a6"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structdesignlab_1_1_vector2docs#a139b9e4be383a8910f0abdc44aff73a6">ToString</a> () const</td></tr>
<tr class="memdesc:a139b9e4be383a8910f0abdc44aff73a6"><td class="mdescLeft">&#160;</td><td class="mdescRight">このベクトルを文字列にして返す． <br  />
 (x, y) の形式，小数点以下3桁まで．  <br /></td></tr>
<tr class="separator:a139b9e4be383a8910f0abdc44aff73a6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab61d13f3a70dffabc8b3a066ab12d351" id="r_ab61d13f3a70dffabc8b3a066ab12d351"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structdesignlab_1_1_vector2docs#ab61d13f3a70dffabc8b3a066ab12d351">ToCsvString</a> () const</td></tr>
<tr class="memdesc:ab61d13f3a70dffabc8b3a066ab12d351"><td class="mdescLeft">&#160;</td><td class="mdescRight">このベクトルをCSV形式の文字列にして返す． <br  />
 x, y, z の形式，小数点以下3桁まで．  <br /></td></tr>
<tr class="separator:ab61d13f3a70dffabc8b3a066ab12d351"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-static-methods" name="pub-static-methods"></a>
静的公開メンバ関数</h2></td></tr>
<tr class="memitem:ab1d2920dab324280e0ea0845197a44e7" id="r_ab1d2920dab324280e0ea0845197a44e7"><td class="memItemLeft" align="right" valign="top">static constexpr <a class="el" href="structdesignlab_1_1_vector2docs">Vector2</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structdesignlab_1_1_vector2docs#ab1d2920dab324280e0ea0845197a44e7">GetZeroVec</a> () noexcept</td></tr>
<tr class="memdesc:ab1d2920dab324280e0ea0845197a44e7"><td class="mdescLeft">&#160;</td><td class="mdescRight">零ベクトルを返す． 静的な関数なので <a class="el" href="structdesignlab_1_1_vector2docs#ab1d2920dab324280e0ea0845197a44e7" title="零ベクトルを返す． 静的な関数なので Vector2::GetZeroVec() と呼ぶことができる．">Vector2::GetZeroVec()</a> と呼ぶことができる．  <br /></td></tr>
<tr class="separator:ab1d2920dab324280e0ea0845197a44e7"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-attribs" name="pub-attribs"></a>
公開変数類</h2></td></tr>
<tr class="memitem:a66a0aec6b7e604801753f91ff4dccf42" id="r_a66a0aec6b7e604801753f91ff4dccf42"><td class="memItemLeft" align="right" valign="top"><a id="a66a0aec6b7e604801753f91ff4dccf42" name="a66a0aec6b7e604801753f91ff4dccf42"></a>
float&#160;</td><td class="memItemRight" valign="bottom"><b>x</b></td></tr>
<tr class="separator:a66a0aec6b7e604801753f91ff4dccf42"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a311f9b69078b7742daf702e9d4a94c4c" id="r_a311f9b69078b7742daf702e9d4a94c4c"><td class="memItemLeft" align="right" valign="top"><a id="a311f9b69078b7742daf702e9d4a94c4c" name="a311f9b69078b7742daf702e9d4a94c4c"></a>
float&#160;</td><td class="memItemRight" valign="bottom"><b>y</b></td></tr>
<tr class="separator:a311f9b69078b7742daf702e9d4a94c4c"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">詳解</h2>
<div class="textblock"><p>2次元の位置ベクトルを表す構造体． </p>
<h3><a class="anchor" id="参考"></a>
参考</h3>
<ul>
<li>Vec2 クラスを作る <a href="https://qiita.com/Reputeless/items/96226cfe1282a014b147">https://qiita.com/Reputeless/items/96226cfe1282a014b147</a> ( アクセス日 2024/2/29 )</li>
</ul>
<p>本当はテンプレート構造体にするべき． しかし，実用的に使用するのは2次元，3次元程度であるため， このようにそれぞれ実装する． </p>
</div><h2 class="groupheader">関数詳解</h2>
<a id="ab3002b222969339234b908a42a735f44" name="ab3002b222969339234b908a42a735f44"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab3002b222969339234b908a42a735f44">&#9670;&#160;</a></span>Cross()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr float designlab::Vector2::Cross </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structdesignlab_1_1_vector2docs">Vector2</a> &amp;&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>自分×引数 の外積の結果を返す． </p>
<dl class="params"><dt>引数</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">other</td><td>他のベクトル． </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>戻り値</dt><dd>このベクトルと other の外積． </dd></dl>
<dl class="section note"><dt>覚え書き</dt><dd>2次元なので，外積はスカラー． </dd></dl>
<div class="dynheader">
被呼び出し関係図:</div>
<div class="dyncontent">
<div class="center"><img src="structdesignlab_1_1_vector2_ab3002b222969339234b908a42a735f44_icgraph.png" border="0" usemap="#astructdesignlab_1_1_vector2_ab3002b222969339234b908a42a735f44_icgraph" alt=""/></div>
<map name="astructdesignlab_1_1_vector2_ab3002b222969339234b908a42a735f44_icgraph" id="astructdesignlab_1_1_vector2_ab3002b222969339234b908a42a735f44_icgraph">
<area shape="rect" title="自分×引数 の外積の結果を返す．" alt="" coords="446,105,575,148"/>
<area shape="rect" href="classdesignlab_1_1_phantom_x_mk_i_idocs#a688e8dd6b7f92d5b1a4fa8d4fbcc2714" title="安定余裕(Stability Margin)を計算する． 詳しくは「不整地における歩行機械の静的安定性評価基準」 という論文を読んで欲しい． &#160;&#160;接地脚を繋いで作られる多角形の辺と重心の距離の最小値を計..." alt="" coords="225,5,394,48"/>
<area shape="poly" title=" " alt="" coords="462,99,397,62,371,51,373,46,399,58,465,94"/>
<area shape="rect" href="structdesignlab_1_1_line_segment2docs#a334682a88e452a95429edf15593d1846" title="他の線分と交点が存在しているかどうか調べ，交点を返す関数．" alt="" coords="221,72,398,115"/>
<area shape="poly" title=" " alt="" coords="430,116,398,111,399,105,431,111"/>
<area shape="rect" href="structdesignlab_1_1_line_segment2docs#a29ea137970fa696c5789085591e8c2f9" title="他の線分との交点を求める．" alt="" coords="226,139,393,181"/>
<area shape="poly" title=" " alt="" coords="431,143,394,149,393,143,430,137"/>
<area shape="rect" href="structdesignlab_1_1_line_segment2docs#a8e2bdbc5c825c119d1801aa07bf3555e" title="他の線分と交点が存在しているかどうか調べる関数．" alt="" coords="226,205,393,248"/>
<area shape="poly" title=" " alt="" coords="465,159,399,196,373,207,371,202,397,191,462,154"/>
<area shape="rect" href="classdesignlab_1_1_phantom_x_mk_i_idocs#aeed1296b4886eb07bc095ca2b5e8c333" title="脚が他の脚と干渉しているかどうかを判定する．" alt="" coords="5,205,173,248"/>
<area shape="poly" title=" " alt="" coords="210,229,173,229,173,224,210,224"/>
</map>
</div>

</div>
</div>
<a id="a4ff63a4ad67617a23ed4206d994ecc84" name="a4ff63a4ad67617a23ed4206d994ecc84"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4ff63a4ad67617a23ed4206d994ecc84">&#9670;&#160;</a></span>Dot()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr float designlab::Vector2::Dot </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structdesignlab_1_1_vector2docs">Vector2</a> &amp;&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>自分・引数 の内積の結果を返す． </p>
<dl class="params"><dt>引数</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">other</td><td>他のベクトル． </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>戻り値</dt><dd>このベクトルと other の内積． </dd></dl>
<div class="dynheader">
被呼び出し関係図:</div>
<div class="dyncontent">
<div class="center"><img src="structdesignlab_1_1_vector2_a4ff63a4ad67617a23ed4206d994ecc84_icgraph.png" border="0" usemap="#astructdesignlab_1_1_vector2_a4ff63a4ad67617a23ed4206d994ecc84_icgraph" alt=""/></div>
<map name="astructdesignlab_1_1_vector2_a4ff63a4ad67617a23ed4206d994ecc84_icgraph" id="astructdesignlab_1_1_vector2_a4ff63a4ad67617a23ed4206d994ecc84_icgraph">
<area shape="rect" title="自分・引数 の内積の結果を返す．" alt="" coords="621,80,779,107"/>
<area shape="rect" href="structdesignlab_1_1_vector2docs#a80b722825f1793105702da0677867a08" title="このベクトルの長さの2乗を返す．" alt="" coords="436,72,573,115"/>
<area shape="poly" title=" " alt="" coords="606,96,574,96,574,91,606,91"/>
<area shape="rect" href="structdesignlab_1_1_vector2docs#ab62323b441e66a37e41668fb0ac7ae99" title="このベクトルの長さを返す．" alt="" coords="240,39,369,81"/>
<area shape="poly" title=" " alt="" coords="421,82,369,73,370,68,421,77"/>
<area shape="rect" href="classdesignlab_1_1_phantom_x_mk_i_idocs#aab0677aba41eed4d1138c6adacc27fa1" title="脚が可動範囲内にあるかどうかを判定する．" alt="" coords="221,105,388,148"/>
<area shape="poly" title=" " alt="" coords="421,110,389,115,388,110,421,105"/>
<area shape="rect" href="classdesignlab_1_1_phantom_x_mk_i_idocs#ac027dc121a54e00da42ffcbab0028561" title="指定した脚の関節のグローバル座標と，角度を計算する． &#160;&#160;重たいのでグラフ探索や，描画処理中にループで使用することは推奨しない． &#160;&#160;間接の可動範囲外まで動いてしまう場合でも，答えを返す． &#160;&#160;目標座標..." alt="" coords="5,5,173,48"/>
<area shape="poly" title=" " alt="" coords="224,50,173,42,173,37,225,45"/>
<area shape="rect" href="structdesignlab_1_1_vector2docs#a5b486befcef8a9c50ff78137783c3ba9" title="このベクトルを正規化したベクトルを返す．" alt="" coords="24,72,154,115"/>
<area shape="poly" title=" " alt="" coords="225,75,155,86,154,81,224,70"/>
</map>
</div>

</div>
</div>
<a id="a0480523390e9aa64d8df223dbb3ffbd6" name="a0480523390e9aa64d8df223dbb3ffbd6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0480523390e9aa64d8df223dbb3ffbd6">&#9670;&#160;</a></span>GetDistanceFrom()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float designlab::Vector2::GetDistanceFrom </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structdesignlab_1_1_vector2docs">Vector2</a> &amp;&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>このベクトルと other の距離を返す． </p>
<dl class="params"><dt>引数</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">other</td><td>他のベクトル． </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>戻り値</dt><dd>このベクトルと other の距離． </dd></dl>

</div>
</div>
<a id="ab62323b441e66a37e41668fb0ac7ae99" name="ab62323b441e66a37e41668fb0ac7ae99"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab62323b441e66a37e41668fb0ac7ae99">&#9670;&#160;</a></span>GetLength()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float designlab::Vector2::GetLength </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>このベクトルの長さを返す． </p>
<dl class="section return"><dt>戻り値</dt><dd>このベクトルの長さ． </dd></dl>
<dl class="section note"><dt>覚え書き</dt><dd>sqrtは重いので，長さの2乗を返す GetSquaredLength を使うことを推奨． </dd></dl>
<div class="dynheader">
呼び出し関係図:</div>
<div class="dyncontent">
<div class="center"><img src="structdesignlab_1_1_vector2_ab62323b441e66a37e41668fb0ac7ae99_cgraph.png" border="0" usemap="#astructdesignlab_1_1_vector2_ab62323b441e66a37e41668fb0ac7ae99_cgraph" alt=""/></div>
<map name="astructdesignlab_1_1_vector2_ab62323b441e66a37e41668fb0ac7ae99_cgraph" id="astructdesignlab_1_1_vector2_ab62323b441e66a37e41668fb0ac7ae99_cgraph">
<area shape="rect" title="このベクトルの長さを返す．" alt="" coords="5,5,135,48"/>
<area shape="rect" href="structdesignlab_1_1_vector2docs#a80b722825f1793105702da0677867a08" title="このベクトルの長さの2乗を返す．" alt="" coords="183,5,320,48"/>
<area shape="poly" title=" " alt="" coords="135,24,167,24,167,29,135,29"/>
<area shape="rect" href="structdesignlab_1_1_vector2docs#a4ff63a4ad67617a23ed4206d994ecc84" title="自分・引数 の内積の結果を返す．" alt="" coords="368,13,525,40"/>
<area shape="poly" title=" " alt="" coords="321,24,352,24,352,29,321,29"/>
</map>
</div>
<div class="dynheader">
被呼び出し関係図:</div>
<div class="dyncontent">
<div class="center"><img src="structdesignlab_1_1_vector2_ab62323b441e66a37e41668fb0ac7ae99_icgraph.png" border="0" usemap="#astructdesignlab_1_1_vector2_ab62323b441e66a37e41668fb0ac7ae99_icgraph" alt=""/></div>
<map name="astructdesignlab_1_1_vector2_ab62323b441e66a37e41668fb0ac7ae99_icgraph" id="astructdesignlab_1_1_vector2_ab62323b441e66a37e41668fb0ac7ae99_icgraph">
<area shape="rect" title="このベクトルの長さを返す．" alt="" coords="438,39,567,81"/>
<area shape="rect" href="classdesignlab_1_1_phantom_x_mk_i_idocs#ac027dc121a54e00da42ffcbab0028561" title="指定した脚の関節のグローバル座標と，角度を計算する． &#160;&#160;重たいのでグラフ探索や，描画処理中にループで使用することは推奨しない． &#160;&#160;間接の可動範囲外まで動いてしまう場合でも，答えを返す． &#160;&#160;目標座標..." alt="" coords="223,5,390,48"/>
<area shape="poly" title=" " alt="" coords="422,49,390,44,391,38,423,44"/>
<area shape="rect" href="structdesignlab_1_1_vector2docs#a5b486befcef8a9c50ff78137783c3ba9" title="このベクトルを正規化したベクトルを返す．" alt="" coords="242,72,371,115"/>
<area shape="poly" title=" " alt="" coords="423,76,372,85,371,80,422,71"/>
<area shape="rect" href="classdesignlab_1_1_phantom_x_mk_i_idocs#a688e8dd6b7f92d5b1a4fa8d4fbcc2714" title="安定余裕(Stability Margin)を計算する． 詳しくは「不整地における歩行機械の静的安定性評価基準」 という論文を読んで欲しい． &#160;&#160;接地脚を繋いで作られる多角形の辺と重心の距離の最小値を計..." alt="" coords="5,5,175,48"/>
<area shape="poly" title=" " alt="" coords="226,72,161,51,163,46,228,66"/>
<area shape="rect" href="classdesignlab_1_1_com_selectordocs#afe154bc35f0971d6c2c2a649299b23c3" title="重心を求める．" alt="" coords="10,72,170,115"/>
<area shape="poly" title=" " alt="" coords="226,96,170,96,170,91,226,91"/>
<area shape="rect" href="structdesignlab_1_1_vector2docs#ac75623bf80d61ccba4a26c6810eddd3c" title="このベクトルを正規化する． &#160;&#160;絶対値が0のベクトルの場合，そのまま0ベクトルになる．" alt="" coords="25,139,155,181"/>
<area shape="poly" title=" " alt="" coords="228,120,156,143,154,138,226,115"/>
</map>
</div>

</div>
</div>
<a id="a5b486befcef8a9c50ff78137783c3ba9" name="a5b486befcef8a9c50ff78137783c3ba9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5b486befcef8a9c50ff78137783c3ba9">&#9670;&#160;</a></span>GetNormalized()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structdesignlab_1_1_vector2docs">Vector2</a> designlab::Vector2::GetNormalized </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>このベクトルを正規化したベクトルを返す． </p>
<dl class="section return"><dt>戻り値</dt><dd>正規化されたベクトル． </dd></dl>
<div class="dynheader">
呼び出し関係図:</div>
<div class="dyncontent">
<div class="center"><img src="structdesignlab_1_1_vector2_a5b486befcef8a9c50ff78137783c3ba9_cgraph.png" border="0" usemap="#astructdesignlab_1_1_vector2_a5b486befcef8a9c50ff78137783c3ba9_cgraph" alt=""/></div>
<map name="astructdesignlab_1_1_vector2_a5b486befcef8a9c50ff78137783c3ba9_cgraph" id="astructdesignlab_1_1_vector2_a5b486befcef8a9c50ff78137783c3ba9_cgraph">
<area shape="rect" title="このベクトルを正規化したベクトルを返す．" alt="" coords="5,39,135,81"/>
<area shape="rect" href="structdesignlab_1_1_vector2docs#ab62323b441e66a37e41668fb0ac7ae99" title="このベクトルの長さを返す．" alt="" coords="187,5,316,48"/>
<area shape="poly" title=" " alt="" coords="135,45,171,39,172,44,136,51"/>
<area shape="rect" href="namespacedesignlab_1_1math__utildocs#a92c055e0799991e88871e2a5d4f09280" title="C++において，小数同士の計算は誤差が出てしまう． 誤差込みで値が等しいか調べる．" alt="" coords="183,72,320,115"/>
<area shape="poly" title=" " alt="" coords="136,69,168,75,167,81,135,75"/>
<area shape="rect" href="structdesignlab_1_1_vector2docs#a80b722825f1793105702da0677867a08" title="このベクトルの長さの2乗を返す．" alt="" coords="368,5,505,48"/>
<area shape="poly" title=" " alt="" coords="317,24,352,24,352,29,317,29"/>
<area shape="rect" href="structdesignlab_1_1_vector2docs#a4ff63a4ad67617a23ed4206d994ecc84" title="自分・引数 の内積の結果を返す．" alt="" coords="553,13,711,40"/>
<area shape="poly" title=" " alt="" coords="506,24,538,24,538,29,506,29"/>
</map>
</div>
<div class="dynheader">
被呼び出し関係図:</div>
<div class="dyncontent">
<div class="center"><img src="structdesignlab_1_1_vector2_a5b486befcef8a9c50ff78137783c3ba9_icgraph.png" border="0" usemap="#astructdesignlab_1_1_vector2_a5b486befcef8a9c50ff78137783c3ba9_icgraph" alt=""/></div>
<map name="astructdesignlab_1_1_vector2_a5b486befcef8a9c50ff78137783c3ba9_icgraph" id="astructdesignlab_1_1_vector2_a5b486befcef8a9c50ff78137783c3ba9_icgraph">
<area shape="rect" title="このベクトルを正規化したベクトルを返す．" alt="" coords="223,72,352,115"/>
<area shape="rect" href="classdesignlab_1_1_phantom_x_mk_i_idocs#a688e8dd6b7f92d5b1a4fa8d4fbcc2714" title="安定余裕(Stability Margin)を計算する． 詳しくは「不整地における歩行機械の静的安定性評価基準」 という論文を読んで欲しい． &#160;&#160;接地脚を繋いで作られる多角形の辺と重心の距離の最小値を計..." alt="" coords="5,5,175,48"/>
<area shape="poly" title=" " alt="" coords="207,69,154,51,156,46,209,64"/>
<area shape="rect" href="classdesignlab_1_1_com_selectordocs#afe154bc35f0971d6c2c2a649299b23c3" title="重心を求める．" alt="" coords="10,72,170,115"/>
<area shape="poly" title=" " alt="" coords="207,96,170,96,170,91,207,91"/>
<area shape="rect" href="structdesignlab_1_1_vector2docs#ac75623bf80d61ccba4a26c6810eddd3c" title="このベクトルを正規化する． &#160;&#160;絶対値が0のベクトルの場合，そのまま0ベクトルになる．" alt="" coords="25,139,155,181"/>
<area shape="poly" title=" " alt="" coords="209,123,156,141,154,136,207,118"/>
</map>
</div>

</div>
</div>
<a id="a80b722825f1793105702da0677867a08" name="a80b722825f1793105702da0677867a08"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a80b722825f1793105702da0677867a08">&#9670;&#160;</a></span>GetSquaredLength()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr float designlab::Vector2::GetSquaredLength </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>このベクトルの長さの2乗を返す． </p>
<dl class="section return"><dt>戻り値</dt><dd>このベクトルの長さの2乗． </dd></dl>
<dl class="section note"><dt>覚え書き</dt><dd>sqrt(ルートの計算)が重いのでこちらを使えるなら使うべき． </dd></dl>
<div class="dynheader">
呼び出し関係図:</div>
<div class="dyncontent">
<div class="center"><img src="structdesignlab_1_1_vector2_a80b722825f1793105702da0677867a08_cgraph.png" border="0" usemap="#astructdesignlab_1_1_vector2_a80b722825f1793105702da0677867a08_cgraph" alt=""/></div>
<map name="astructdesignlab_1_1_vector2_a80b722825f1793105702da0677867a08_cgraph" id="astructdesignlab_1_1_vector2_a80b722825f1793105702da0677867a08_cgraph">
<area shape="rect" title="このベクトルの長さの2乗を返す．" alt="" coords="5,5,143,48"/>
<area shape="rect" href="structdesignlab_1_1_vector2docs#a4ff63a4ad67617a23ed4206d994ecc84" title="自分・引数 の内積の結果を返す．" alt="" coords="191,13,348,40"/>
<area shape="poly" title=" " alt="" coords="143,24,175,24,175,29,143,29"/>
</map>
</div>
<div class="dynheader">
被呼び出し関係図:</div>
<div class="dyncontent">
<div class="center"><img src="structdesignlab_1_1_vector2_a80b722825f1793105702da0677867a08_icgraph.png" border="0" usemap="#astructdesignlab_1_1_vector2_a80b722825f1793105702da0677867a08_icgraph" alt=""/></div>
<map name="astructdesignlab_1_1_vector2_a80b722825f1793105702da0677867a08_icgraph" id="astructdesignlab_1_1_vector2_a80b722825f1793105702da0677867a08_icgraph">
<area shape="rect" title="このベクトルの長さの2乗を返す．" alt="" coords="653,72,791,115"/>
<area shape="rect" href="structdesignlab_1_1_vector2docs#ab62323b441e66a37e41668fb0ac7ae99" title="このベクトルの長さを返す．" alt="" coords="457,39,586,81"/>
<area shape="poly" title=" " alt="" coords="638,82,586,73,587,68,639,77"/>
<area shape="rect" href="classdesignlab_1_1_phantom_x_mk_i_idocs#aab0677aba41eed4d1138c6adacc27fa1" title="脚が可動範囲内にあるかどうかを判定する．" alt="" coords="438,105,605,148"/>
<area shape="poly" title=" " alt="" coords="639,110,606,115,605,110,638,105"/>
<area shape="rect" href="classdesignlab_1_1_phantom_x_mk_i_idocs#ac027dc121a54e00da42ffcbab0028561" title="指定した脚の関節のグローバル座標と，角度を計算する． &#160;&#160;重たいのでグラフ探索や，描画処理中にループで使用することは推奨しない． &#160;&#160;間接の可動範囲外まで動いてしまう場合でも，答えを返す． &#160;&#160;目標座標..." alt="" coords="223,5,390,48"/>
<area shape="poly" title=" " alt="" coords="441,50,390,42,391,37,442,45"/>
<area shape="rect" href="structdesignlab_1_1_vector2docs#a5b486befcef8a9c50ff78137783c3ba9" title="このベクトルを正規化したベクトルを返す．" alt="" coords="242,72,371,115"/>
<area shape="poly" title=" " alt="" coords="442,75,372,86,371,81,441,70"/>
<area shape="rect" href="classdesignlab_1_1_phantom_x_mk_i_idocs#a688e8dd6b7f92d5b1a4fa8d4fbcc2714" title="安定余裕(Stability Margin)を計算する． 詳しくは「不整地における歩行機械の静的安定性評価基準」 という論文を読んで欲しい． &#160;&#160;接地脚を繋いで作られる多角形の辺と重心の距離の最小値を計..." alt="" coords="5,5,175,48"/>
<area shape="poly" title=" " alt="" coords="226,72,161,51,163,46,228,66"/>
<area shape="rect" href="classdesignlab_1_1_com_selectordocs#afe154bc35f0971d6c2c2a649299b23c3" title="重心を求める．" alt="" coords="10,72,170,115"/>
<area shape="poly" title=" " alt="" coords="226,96,170,96,170,91,226,91"/>
<area shape="rect" href="structdesignlab_1_1_vector2docs#ac75623bf80d61ccba4a26c6810eddd3c" title="このベクトルを正規化する． &#160;&#160;絶対値が0のベクトルの場合，そのまま0ベクトルになる．" alt="" coords="25,139,155,181"/>
<area shape="poly" title=" " alt="" coords="228,120,156,143,154,138,226,115"/>
</map>
</div>

</div>
</div>
<a id="ab1d2920dab324280e0ea0845197a44e7" name="ab1d2920dab324280e0ea0845197a44e7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab1d2920dab324280e0ea0845197a44e7">&#9670;&#160;</a></span>GetZeroVec()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static constexpr <a class="el" href="structdesignlab_1_1_vector2docs">Vector2</a> designlab::Vector2::GetZeroVec </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span><span class="mlabel">constexpr</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>零ベクトルを返す． 静的な関数なので <a class="el" href="structdesignlab_1_1_vector2docs#ab1d2920dab324280e0ea0845197a44e7" title="零ベクトルを返す． 静的な関数なので Vector2::GetZeroVec() と呼ぶことができる．">Vector2::GetZeroVec()</a> と呼ぶことができる． </p>
<dl class="section return"><dt>戻り値</dt><dd>零ベクトル． </dd></dl>

</div>
</div>
<a id="a38510ae37bb30094489c2a09a06f204a" name="a38510ae37bb30094489c2a09a06f204a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a38510ae37bb30094489c2a09a06f204a">&#9670;&#160;</a></span>IsZero()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr bool designlab::Vector2::IsZero </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>このベクトルが0ならば true． </p>
<dl class="section return"><dt>戻り値</dt><dd>このベクトルが0ならば true． </dd></dl>
<dl class="section note"><dt>覚え書き</dt><dd>誤差を考慮している． </dd></dl>
<div class="dynheader">
呼び出し関係図:</div>
<div class="dyncontent">
<div class="center"><img src="structdesignlab_1_1_vector2_a38510ae37bb30094489c2a09a06f204a_cgraph.png" border="0" usemap="#astructdesignlab_1_1_vector2_a38510ae37bb30094489c2a09a06f204a_cgraph" alt=""/></div>
<map name="astructdesignlab_1_1_vector2_a38510ae37bb30094489c2a09a06f204a_cgraph" id="astructdesignlab_1_1_vector2_a38510ae37bb30094489c2a09a06f204a_cgraph">
<area shape="rect" title="このベクトルが0ならば true．" alt="" coords="5,5,135,48"/>
<area shape="rect" href="namespacedesignlab_1_1math__utildocs#a92c055e0799991e88871e2a5d4f09280" title="C++において，小数同士の計算は誤差が出てしまう． 誤差込みで値が等しいか調べる．" alt="" coords="183,5,320,48"/>
<area shape="poly" title=" " alt="" coords="135,24,167,24,167,29,135,29"/>
</map>
</div>

</div>
</div>
<a id="ac75623bf80d61ccba4a26c6810eddd3c" name="ac75623bf80d61ccba4a26c6810eddd3c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac75623bf80d61ccba4a26c6810eddd3c">&#9670;&#160;</a></span>Normalize()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void designlab::Vector2::Normalize </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>このベクトルを正規化する． <br  />
 絶対値が0のベクトルの場合，そのまま0ベクトルになる． </p>
<dl class="section attention"><dt>注意</dt><dd>この関数は，このベクトルの値を変更する． GetNormalized は値を変更しない． 間違えないようにすること． </dd></dl>
<div class="dynheader">
呼び出し関係図:</div>
<div class="dyncontent">
<div class="center"><img src="structdesignlab_1_1_vector2_ac75623bf80d61ccba4a26c6810eddd3c_cgraph.png" border="0" usemap="#astructdesignlab_1_1_vector2_ac75623bf80d61ccba4a26c6810eddd3c_cgraph" alt=""/></div>
<map name="astructdesignlab_1_1_vector2_ac75623bf80d61ccba4a26c6810eddd3c_cgraph" id="astructdesignlab_1_1_vector2_ac75623bf80d61ccba4a26c6810eddd3c_cgraph">
<area shape="rect" title="このベクトルを正規化する． &#160;&#160;絶対値が0のベクトルの場合，そのまま0ベクトルになる．" alt="" coords="5,39,135,81"/>
<area shape="rect" href="structdesignlab_1_1_vector2docs#a5b486befcef8a9c50ff78137783c3ba9" title="このベクトルを正規化したベクトルを返す．" alt="" coords="183,39,312,81"/>
<area shape="poly" title=" " alt="" coords="135,57,167,57,167,63,135,63"/>
<area shape="rect" href="structdesignlab_1_1_vector2docs#ab62323b441e66a37e41668fb0ac7ae99" title="このベクトルの長さを返す．" alt="" coords="364,5,493,48"/>
<area shape="poly" title=" " alt="" coords="312,45,348,39,349,44,313,51"/>
<area shape="rect" href="namespacedesignlab_1_1math__utildocs#a92c055e0799991e88871e2a5d4f09280" title="C++において，小数同士の計算は誤差が出てしまう． 誤差込みで値が等しいか調べる．" alt="" coords="360,72,497,115"/>
<area shape="poly" title=" " alt="" coords="313,69,345,75,344,81,312,75"/>
<area shape="rect" href="structdesignlab_1_1_vector2docs#a80b722825f1793105702da0677867a08" title="このベクトルの長さの2乗を返す．" alt="" coords="545,5,683,48"/>
<area shape="poly" title=" " alt="" coords="494,24,530,24,530,29,494,29"/>
</map>
</div>

</div>
</div>
<a id="ab61d13f3a70dffabc8b3a066ab12d351" name="ab61d13f3a70dffabc8b3a066ab12d351"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab61d13f3a70dffabc8b3a066ab12d351">&#9670;&#160;</a></span>ToCsvString()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::string designlab::Vector2::ToCsvString </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>このベクトルをCSV形式の文字列にして返す． <br  />
 x, y, z の形式，小数点以下3桁まで． </p>
<dl class="section return"><dt>戻り値</dt><dd>このベクトルをCSV形式の文字列にしたもの． </dd></dl>
<div class="dynheader">
呼び出し関係図:</div>
<div class="dyncontent">
<div class="center"><img src="structdesignlab_1_1_vector2_ab61d13f3a70dffabc8b3a066ab12d351_cgraph.png" border="0" usemap="#astructdesignlab_1_1_vector2_ab61d13f3a70dffabc8b3a066ab12d351_cgraph" alt=""/></div>
<map name="astructdesignlab_1_1_vector2_ab61d13f3a70dffabc8b3a066ab12d351_cgraph" id="astructdesignlab_1_1_vector2_ab61d13f3a70dffabc8b3a066ab12d351_cgraph">
<area shape="rect" title="このベクトルをCSV形式の文字列にして返す． &#160;&#160;x, y, z の形式，小数点以下3桁まで．" alt="" coords="5,5,135,48"/>
<area shape="rect" href="namespacedesignlab_1_1math__utildocs#a45276ca396d3aa1331b5bb5a4c849bbe" title="小数を文字列に変換する関数． &#160;&#160;C++ では C のフォーマットのように %3.3f とかで小数を文字列に変換できないため自作する．" alt="" coords="183,5,363,48"/>
<area shape="poly" title=" " alt="" coords="135,24,167,24,167,29,135,29"/>
</map>
</div>

</div>
</div>
<a id="a139b9e4be383a8910f0abdc44aff73a6" name="a139b9e4be383a8910f0abdc44aff73a6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a139b9e4be383a8910f0abdc44aff73a6">&#9670;&#160;</a></span>ToString()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::string designlab::Vector2::ToString </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>このベクトルを文字列にして返す． <br  />
 (x, y) の形式，小数点以下3桁まで． </p>
<dl class="section return"><dt>戻り値</dt><dd>このベクトルを文字列にしたもの． </dd></dl>
<div class="dynheader">
呼び出し関係図:</div>
<div class="dyncontent">
<div class="center"><img src="structdesignlab_1_1_vector2_a139b9e4be383a8910f0abdc44aff73a6_cgraph.png" border="0" usemap="#astructdesignlab_1_1_vector2_a139b9e4be383a8910f0abdc44aff73a6_cgraph" alt=""/></div>
<map name="astructdesignlab_1_1_vector2_a139b9e4be383a8910f0abdc44aff73a6_cgraph" id="astructdesignlab_1_1_vector2_a139b9e4be383a8910f0abdc44aff73a6_cgraph">
<area shape="rect" title="このベクトルを文字列にして返す． &#160;&#160;(x, y) の形式，小数点以下3桁まで．" alt="" coords="5,5,135,48"/>
<area shape="rect" href="namespacedesignlab_1_1math__utildocs#a45276ca396d3aa1331b5bb5a4c849bbe" title="小数を文字列に変換する関数． &#160;&#160;C++ では C のフォーマットのように %3.3f とかで小数を文字列に変換できないため自作する．" alt="" coords="183,5,363,48"/>
<area shape="poly" title=" " alt="" coords="135,24,167,24,167,29,135,29"/>
</map>
</div>
<div class="dynheader">
被呼び出し関係図:</div>
<div class="dyncontent">
<div class="center"><img src="structdesignlab_1_1_vector2_a139b9e4be383a8910f0abdc44aff73a6_icgraph.png" border="0" usemap="#astructdesignlab_1_1_vector2_a139b9e4be383a8910f0abdc44aff73a6_icgraph" alt=""/></div>
<map name="astructdesignlab_1_1_vector2_a139b9e4be383a8910f0abdc44aff73a6_icgraph" id="astructdesignlab_1_1_vector2_a139b9e4be383a8910f0abdc44aff73a6_icgraph">
<area shape="rect" title="このベクトルを文字列にして返す． &#160;&#160;(x, y) の形式，小数点以下3桁まで．" alt="" coords="192,5,321,48"/>
<area shape="rect" href="structdesignlab_1_1_polygon2docs#a310bb9599a9ef2b23581bafa7ede4327" title="多角形のデータを文字列で出力する" alt="" coords="5,5,144,48"/>
<area shape="poly" title=" " alt="" coords="176,29,144,29,144,24,176,24"/>
</map>
</div>

</div>
</div>
<hr/>この構造体詳解は次のファイルから抽出されました:<ul>
<li>C:/Users/hasegawa/Desktop/main/program/gait-generation-by-graph-search/DesignLab/<a class="el" href="math__vector2_8h_sourcedocs">math_vector2.h</a></li>
<li>C:/Users/hasegawa/Desktop/main/program/gait-generation-by-graph-search/DesignLab/<b>math_vector2.cpp</b></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacedesignlabdocs">designlab</a></li><li class="navelem"><a class="el" href="structdesignlab_1_1_vector2docs">Vector2</a></li>
    <li class="footer">構築: <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.8 </li>
  </ul>
</div>
</body>
</html>
