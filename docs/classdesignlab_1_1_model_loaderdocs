<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="ja">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.8"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>GaitGeneration by Graph Search: designlab::ModelLoader クラス</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">GaitGeneration by Graph Search
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- 構築: Doxygen 1.9.8 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search/",'docs');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','検索');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('classdesignlab_1_1_model_loaderdocs',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">読み取り中…</div>
<div class="SRStatus" id="Searching">検索中…</div>
<div class="SRStatus" id="NoMatches">一致する文字列を見つけられません</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">公開メンバ関数</a> &#124;
<a href="classdesignlab_1_1_model_loader-membersdocs">全メンバ一覧</a>  </div>
  <div class="headertitle"><div class="title">designlab::ModelLoader クラス<span class="mlabels"><span class="mlabel">final</span></span></div></div>
</div><!--header-->
<div class="contents">

<p>Dxlibの3Dモデルを読み込むクラス．  
 <a href="classdesignlab_1_1_model_loaderdocs#details">[詳解]</a></p>

<p><code>#include &lt;<a class="el" href="model__loader_8h_sourcedocs">model_loader.h</a>&gt;</code></p>
<div class="dynheader">
designlab::ModelLoader の継承関係図</div>
<div class="dyncontent">
<div class="center"><img src="classdesignlab_1_1_model_loader__inherit__graph.png" border="0" usemap="#adesignlab_1_1_model_loader_inherit__map" alt="Inheritance graph"/></div>
<map name="adesignlab_1_1_model_loader_inherit__map" id="adesignlab_1_1_model_loader_inherit__map">
<area shape="rect" title="Dxlibの3Dモデルを読み込むクラス．" alt="" coords="5,96,164,123"/>
<area shape="rect" href="classdesignlab_1_1_singletondocs" title=" " alt="" coords="15,5,154,48"/>
<area shape="poly" title=" " alt="" coords="87,64,87,95,82,95,82,64"/>
</map>
<center><span class="legend">[<a target="top" href="graph_legenddocs">凡例</a>]</span></center></div>
<div class="dynheader">
designlab::ModelLoader 連携図</div>
<div class="dyncontent">
<div class="center"><img src="classdesignlab_1_1_model_loader__coll__graph.png" border="0" usemap="#adesignlab_1_1_model_loader_coll__map" alt="Collaboration graph"/></div>
<map name="adesignlab_1_1_model_loader_coll__map" id="adesignlab_1_1_model_loader_coll__map">
<area shape="rect" title="Dxlibの3Dモデルを読み込むクラス．" alt="" coords="5,96,164,123"/>
<area shape="rect" href="classdesignlab_1_1_singletondocs" title=" " alt="" coords="15,5,154,48"/>
<area shape="poly" title=" " alt="" coords="87,64,87,95,82,95,82,64"/>
</map>
<center><span class="legend">[<a target="top" href="graph_legenddocs">凡例</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
公開メンバ関数</h2></td></tr>
<tr class="memitem:a96d8af49357666380caa31a92d1dd157" id="r_a96d8af49357666380caa31a92d1dd157"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_model_loaderdocs#a96d8af49357666380caa31a92d1dd157">GetModelHandle</a> (const std::string &amp;file_path)</td></tr>
<tr class="memdesc:a96d8af49357666380caa31a92d1dd157"><td class="mdescLeft">&#160;</td><td class="mdescRight">Dxlibは3Dモデルを描画する際に，モデルのハンドルを指定する． <br  />
 モデルがまだ読み込まれていない場合は， モデルを読み込んでから，ハンドル番号を返す． <br  />
 すでに読み込みずみのモデルを読み込んだ場合は，ハンドル番号を返す．  <br /></td></tr>
<tr class="separator:a96d8af49357666380caa31a92d1dd157"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="inherited" name="inherited"></a>
その他の継承メンバ</h2></td></tr>
<tr class="inherit_header pub_static_methods_classdesignlab_1_1_singleton"><td colspan="2" onclick="javascript:toggleInherit('pub_static_methods_classdesignlab_1_1_singleton')"><img src="closed.png" alt="-"/>&#160;基底クラス <a class="el" href="classdesignlab_1_1_singletondocs">designlab::Singleton&lt; ModelLoader &gt;</a> に属する継承静的公開メンバ関数</td></tr>
<tr class="memitem:a1f95c7ccffdb673174f681e9c0d7dde0 inherit pub_static_methods_classdesignlab_1_1_singleton" id="r_a1f95c7ccffdb673174f681e9c0d7dde0"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="classdesignlab_1_1_model_loaderdocs">ModelLoader</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_singletondocs#a1f95c7ccffdb673174f681e9c0d7dde0">GetIns</a> ()</td></tr>
<tr class="memdesc:a1f95c7ccffdb673174f681e9c0d7dde0 inherit pub_static_methods_classdesignlab_1_1_singleton"><td class="mdescLeft">&#160;</td><td class="mdescRight">インスタンスを取得する． <br  />
 このクラスを継承したクラスは クラス名::getIns()-&gt; の形式でメンバ関数を呼び出す．  <br /></td></tr>
<tr class="separator:a1f95c7ccffdb673174f681e9c0d7dde0 inherit pub_static_methods_classdesignlab_1_1_singleton"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_methods_classdesignlab_1_1_singleton"><td colspan="2" onclick="javascript:toggleInherit('pro_methods_classdesignlab_1_1_singleton')"><img src="closed.png" alt="-"/>&#160;基底クラス <a class="el" href="classdesignlab_1_1_singletondocs">designlab::Singleton&lt; ModelLoader &gt;</a> に属する継承限定公開メンバ関数</td></tr>
<tr class="memitem:a37be053e337f28ddb7433b8037105e43 inherit pro_methods_classdesignlab_1_1_singleton" id="r_a37be053e337f28ddb7433b8037105e43"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_singletondocs#a37be053e337f28ddb7433b8037105e43">Singleton</a> ()=default</td></tr>
<tr class="separator:a37be053e337f28ddb7433b8037105e43 inherit pro_methods_classdesignlab_1_1_singleton"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af8921ed087a314912fa736356c46846e inherit pro_methods_classdesignlab_1_1_singleton" id="r_af8921ed087a314912fa736356c46846e"><td class="memItemLeft" align="right" valign="top">
&#160;</td><td class="memItemRight" valign="bottom"><b>Singleton</b> (const <a class="el" href="classdesignlab_1_1_singletondocs">Singleton</a> &amp;r)=default</td></tr>
<tr class="separator:af8921ed087a314912fa736356c46846e inherit pro_methods_classdesignlab_1_1_singleton"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aac98d59acf7ce1ad728c097c427e8a71 inherit pro_methods_classdesignlab_1_1_singleton" id="r_aac98d59acf7ce1ad728c097c427e8a71"><td class="memItemLeft" align="right" valign="top">
<a class="el" href="classdesignlab_1_1_singletondocs">Singleton</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>operator=</b> (const <a class="el" href="classdesignlab_1_1_singletondocs">Singleton</a> &amp;r)=default</td></tr>
<tr class="separator:aac98d59acf7ce1ad728c097c427e8a71 inherit pro_methods_classdesignlab_1_1_singleton"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">詳解</h2>
<div class="textblock"><p>Dxlibの3Dモデルを読み込むクラス． </p>
<p>シングルトンであり，ModelLoader::GetIns()でインスタンスを取得する． <br  />
 呼び出すときはModelLoader::GetIns()-&gt;GetModelHandle(file_path)とする． </p><div class="fragment"><div class="line"><span class="comment">// 例</span></div>
<div class="line"> </div>
<div class="line"><span class="comment">// モデルのファイルパス</span></div>
<div class="line">std::string file_path = <span class="stringliteral">&quot;data/model/robot/robot.x&quot;</span>;</div>
<div class="line"> </div>
<div class="line"><span class="comment">// モデルのハンドル番号</span></div>
<div class="line"><span class="keywordtype">int</span> model_handle = <a class="code hl_function" href="classdesignlab_1_1_singletondocs#a1f95c7ccffdb673174f681e9c0d7dde0">ModelLoader::GetIns</a>()-&gt;<a class="code hl_function" href="classdesignlab_1_1_model_loaderdocs#a96d8af49357666380caa31a92d1dd157">GetModelHandle</a>(file_path);</div>
<div class="ttc" id="aclassdesignlab_1_1_model_loaderdocs_a96d8af49357666380caa31a92d1dd157"><div class="ttname"><a href="classdesignlab_1_1_model_loaderdocs#a96d8af49357666380caa31a92d1dd157">designlab::ModelLoader::GetModelHandle</a></div><div class="ttdeci">int GetModelHandle(const std::string &amp;file_path)</div><div class="ttdoc">Dxlibは3Dモデルを描画する際に，モデルのハンドルを指定する．   モデルがまだ読み込まれていない場合は， モデルを読み込んでから，ハンドル番号を返す．   すでに読み込みずみのモデルを読み込んだ場...</div><div class="ttdef"><b>Definition</b> model_loader.cpp:14</div></div>
<div class="ttc" id="aclassdesignlab_1_1_singletondocs_a1f95c7ccffdb673174f681e9c0d7dde0"><div class="ttname"><a href="classdesignlab_1_1_singletondocs#a1f95c7ccffdb673174f681e9c0d7dde0">designlab::Singleton&lt; ModelLoader &gt;::GetIns</a></div><div class="ttdeci">static ModelLoader * GetIns()</div><div class="ttdoc">インスタンスを取得する．   このクラスを継承したクラスは クラス名::getIns()-&gt; の形式でメンバ関数を呼び出す．</div><div class="ttdef"><b>Definition</b> singleton.h:33</div></div>
</div><!-- fragment --> <dl class="section see"><dt>参照</dt><dd><a class="el" href="classdesignlab_1_1_singletondocs" title="Singletonクラス作成のためのテンプレートクラス．">Singleton</a> </dd></dl>
<dl class="section attention"><dt>注意</dt><dd>このクラスを使用するときは，必ず DxLib_Init() の後に使用すること． また，DxLib_End() の前に使用を終了すること． これらを守らないと，アプリがクラッシュする． </dd></dl>
</div><h2 class="groupheader">関数詳解</h2>
<a id="a96d8af49357666380caa31a92d1dd157" name="a96d8af49357666380caa31a92d1dd157"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a96d8af49357666380caa31a92d1dd157">&#9670;&#160;</a></span>GetModelHandle()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int designlab::ModelLoader::GetModelHandle </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>file_path</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Dxlibは3Dモデルを描画する際に，モデルのハンドルを指定する． <br  />
 モデルがまだ読み込まれていない場合は， モデルを読み込んでから，ハンドル番号を返す． <br  />
 すでに読み込みずみのモデルを読み込んだ場合は，ハンドル番号を返す． </p>
<dl class="params"><dt>引数</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">file_path</td><td>モデルのファイルパス. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>戻り値</dt><dd>モデルのハンドル番号．失敗したら-1を返す．成功値は正の値． </dd></dl>

</div>
</div>
<hr/>このクラス詳解は次のファイルから抽出されました:<ul>
<li>C:/Users/hasegawa/Desktop/main/program/gait-generation-by-graph-search/DesignLab/<a class="el" href="model__loader_8h_sourcedocs">model_loader.h</a></li>
<li>C:/Users/hasegawa/Desktop/main/program/gait-generation-by-graph-search/DesignLab/<b>model_loader.cpp</b></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacedesignlabdocs">designlab</a></li><li class="navelem"><a class="el" href="classdesignlab_1_1_model_loaderdocs">ModelLoader</a></li>
    <li class="footer">構築: <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.8 </li>
  </ul>
</div>
</body>
</html>
