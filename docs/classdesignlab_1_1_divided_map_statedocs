<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="ja">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.8"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>GaitGeneration by Graph Search: designlab::DividedMapState クラス</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">GaitGeneration by Graph Search
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- 構築: Doxygen 1.9.8 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search/",'docs');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','検索');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('classdesignlab_1_1_divided_map_statedocs',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">読み取り中…</div>
<div class="SRStatus" id="Searching">検索中…</div>
<div class="SRStatus" id="NoMatches">一致する文字列を見つけられません</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">公開メンバ関数</a> &#124;
<a href="#pub-static-methods">静的公開メンバ関数</a> &#124;
<a href="#pub-static-attribs">静的公開変数類</a> &#124;
<a href="classdesignlab_1_1_divided_map_state-membersdocs">全メンバ一覧</a>  </div>
  <div class="headertitle"><div class="title">designlab::DividedMapState クラス<span class="mlabels"><span class="mlabel">final</span></span></div></div>
</div><!--header-->
<div class="contents">

<p>マップを格子状に分割して管理するクラス．  
 <a href="classdesignlab_1_1_divided_map_statedocs#details">[詳解]</a></p>

<p><code>#include &lt;<a class="el" href="divided__map__state_8h_sourcedocs">divided_map_state.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
公開メンバ関数</h2></td></tr>
<tr class="memitem:ae0819faa085d5ae557f4d38e19e599c0" id="r_ae0819faa085d5ae557f4d38e19e599c0"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_divided_map_statedocs#ae0819faa085d5ae557f4d38e19e599c0">DividedMapState</a> (float min_z=<a class="el" href="classdesignlab_1_1_map_statedocs#a5e3c739c33aa7bd88334b3a1a974a4b8">MapState::kMapMinZ</a>)</td></tr>
<tr class="separator:ae0819faa085d5ae557f4d38e19e599c0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a50647e278f9ee754cbfe5196153e2ba8" id="r_a50647e278f9ee754cbfe5196153e2ba8"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_divided_map_statedocs#a50647e278f9ee754cbfe5196153e2ba8">Init</a> (const <a class="el" href="classdesignlab_1_1_map_statedocs">MapState</a> &amp;map_state, const <a class="el" href="structdesignlab_1_1_vector3docs">Vector3</a> global_robot_com)</td></tr>
<tr class="memdesc:a50647e278f9ee754cbfe5196153e2ba8"><td class="mdescLeft">&#160;</td><td class="mdescRight">マップのデータを初期化する． ロボットの重心座標を中心にマップのデータを格子状に分割し， その中に存在する脚設置可能点を集める．  <br /></td></tr>
<tr class="separator:a50647e278f9ee754cbfe5196153e2ba8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a726a21449619c1d6980ed867c141992f" id="r_a726a21449619c1d6980ed867c141992f"><td class="memItemLeft" align="right" valign="top"><a id="a726a21449619c1d6980ed867c141992f" name="a726a21449619c1d6980ed867c141992f"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>Clear</b> ()</td></tr>
<tr class="memdesc:a726a21449619c1d6980ed867c141992f"><td class="mdescLeft">&#160;</td><td class="mdescRight">マップのデータを消去する． <br /></td></tr>
<tr class="separator:a726a21449619c1d6980ed867c141992f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a50c9ba4fb3821ba6a674f3657fe80f6f" id="r_a50c9ba4fb3821ba6a674f3657fe80f6f"><td class="memItemLeft" align="right" valign="top">constexpr bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_divided_map_statedocs#a50c9ba4fb3821ba6a674f3657fe80f6f">IsInMap</a> (const float x, const float y) const</td></tr>
<tr class="memdesc:a50c9ba4fb3821ba6a674f3657fe80f6f"><td class="mdescLeft">&#160;</td><td class="mdescRight">指定した座標がマップの範囲内に存在するかどうかを返す．  <br /></td></tr>
<tr class="separator:a50c9ba4fb3821ba6a674f3657fe80f6f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a01239f0a442a180ccd62d0d01f2cefac" id="r_a01239f0a442a180ccd62d0d01f2cefac"><td class="memItemLeft" align="right" valign="top">constexpr bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_divided_map_statedocs#a01239f0a442a180ccd62d0d01f2cefac">IsInMap</a> (const <a class="el" href="structdesignlab_1_1_vector3docs">Vector3</a> &amp;pos) const noexcept</td></tr>
<tr class="memdesc:a01239f0a442a180ccd62d0d01f2cefac"><td class="mdescLeft">&#160;</td><td class="mdescRight">指定した座標がマップの範囲内に存在するかどうかを返す．  <br /></td></tr>
<tr class="separator:a01239f0a442a180ccd62d0d01f2cefac"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a22c0df011d0506e6d5106c6acd931be9" id="r_a22c0df011d0506e6d5106c6acd931be9"><td class="memItemLeft" align="right" valign="top">constexpr int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_divided_map_statedocs#a22c0df011d0506e6d5106c6acd931be9">GetDividedMapIndexX</a> (const float pos_x) const noexcept</td></tr>
<tr class="memdesc:a22c0df011d0506e6d5106c6acd931be9"><td class="mdescLeft">&#160;</td><td class="mdescRight">指定した座標を DividedMap のインデックスに変換する． 範囲外の値を指定した場合でも，値を丸めずに返す． そのため，IsInMap で範囲内に存在するかどうかを確認する必要がある．  <br /></td></tr>
<tr class="separator:a22c0df011d0506e6d5106c6acd931be9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8dcc229f5560978d2a082b326191d6ee" id="r_a8dcc229f5560978d2a082b326191d6ee"><td class="memItemLeft" align="right" valign="top">constexpr int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_divided_map_statedocs#a8dcc229f5560978d2a082b326191d6ee">GetDividedMapIndexY</a> (const float pos_y) const noexcept</td></tr>
<tr class="memdesc:a8dcc229f5560978d2a082b326191d6ee"><td class="mdescLeft">&#160;</td><td class="mdescRight">指定した座標を DividedMap のインデックスに変換する． 範囲外の値を指定した場合でも，値を丸めずに返す． そのため，IsInMap で範囲内に存在するかどうかを確認する必要がある．  <br /></td></tr>
<tr class="separator:a8dcc229f5560978d2a082b326191d6ee"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a900c891b9319bd079e172105468d0808" id="r_a900c891b9319bd079e172105468d0808"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_divided_map_statedocs#a900c891b9319bd079e172105468d0808">GetPointNum</a> (int x_index, int y_index) const</td></tr>
<tr class="memdesc:a900c891b9319bd079e172105468d0808"><td class="mdescLeft">&#160;</td><td class="mdescRight">格子状に切り分けられたマップから，脚設置可能点の数を取得する． <br  />
 範囲外の値を指定した場合は，0を返す．  <br /></td></tr>
<tr class="separator:a900c891b9319bd079e172105468d0808"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4fa0d0b29f758a1f23a6743c749a8013" id="r_a4fa0d0b29f758a1f23a6743c749a8013"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structdesignlab_1_1_vector3docs">Vector3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_divided_map_statedocs#a4fa0d0b29f758a1f23a6743c749a8013">GetPointPos</a> (int x_index, int y_index, int divided_map_index) const</td></tr>
<tr class="memdesc:a4fa0d0b29f758a1f23a6743c749a8013"><td class="mdescLeft">&#160;</td><td class="mdescRight">格子状に切り分けられたマップから，脚設置可能点の実際の座標を取得する． <br  />
 範囲外の値を指定した場合は，(0,0,0)を返す．  <br /></td></tr>
<tr class="separator:a4fa0d0b29f758a1f23a6743c749a8013"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa9c86524d97e9f7fcff9fe7cce6da99b" id="r_aa9c86524d97e9f7fcff9fe7cce6da99b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_divided_map_statedocs#aa9c86524d97e9f7fcff9fe7cce6da99b">GetPointVector</a> (int x_index, int y_index, std::vector&lt; <a class="el" href="structdesignlab_1_1_vector3docs">Vector3</a> &gt; *point_vec) const</td></tr>
<tr class="memdesc:aa9c86524d97e9f7fcff9fe7cce6da99b"><td class="mdescLeft">&#160;</td><td class="mdescRight">格子状に切り分けられたマップから，脚設置可能点の vector を取得する <br  />
 範囲外の値を指定した場合は，空の vector を返す．  <br /></td></tr>
<tr class="separator:aa9c86524d97e9f7fcff9fe7cce6da99b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a92457e5d1887c728425975db477ce3d9" id="r_a92457e5d1887c728425975db477ce3d9"><td class="memItemLeft" align="right" valign="top">float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_divided_map_statedocs#a92457e5d1887c728425975db477ce3d9">GetTopZ</a> (int x_index, int y_index) const</td></tr>
<tr class="memdesc:a92457e5d1887c728425975db477ce3d9"><td class="mdescLeft">&#160;</td><td class="mdescRight">格子状に切り分けられたマップから，最も高いZ座標を返す．  <br /></td></tr>
<tr class="separator:a92457e5d1887c728425975db477ce3d9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab758211a8b35d131d0521a6abeef86b8" id="r_ab758211a8b35d131d0521a6abeef86b8"><td class="memItemLeft" align="right" valign="top"><a id="ab758211a8b35d131d0521a6abeef86b8" name="ab758211a8b35d131d0521a6abeef86b8"></a>
float&#160;</td><td class="memItemRight" valign="bottom"><b>GetMapMinZ</b> () const noexcept</td></tr>
<tr class="separator:ab758211a8b35d131d0521a6abeef86b8"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-static-methods" name="pub-static-methods"></a>
静的公開メンバ関数</h2></td></tr>
<tr class="memitem:ab52eb66d4bffe0cd576b80a2cb3fb42a" id="r_ab52eb66d4bffe0cd576b80a2cb3fb42a"><td class="memItemLeft" align="right" valign="top"><a id="ab52eb66d4bffe0cd576b80a2cb3fb42a" name="ab52eb66d4bffe0cd576b80a2cb3fb42a"></a>
static constexpr int&#160;</td><td class="memItemRight" valign="bottom"><b>ClampDividedMapIndex</b> (const int index) noexcept</td></tr>
<tr class="memdesc:ab52eb66d4bffe0cd576b80a2cb3fb42a"><td class="mdescLeft">&#160;</td><td class="mdescRight">指定した座標がマップのインデックスの範囲内になるように丸める． <br /></td></tr>
<tr class="separator:ab52eb66d4bffe0cd576b80a2cb3fb42a"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-static-attribs" name="pub-static-attribs"></a>
静的公開変数類</h2></td></tr>
<tr class="memitem:a74592bce2b9be33258aeb8dcd79d4090" id="r_a74592bce2b9be33258aeb8dcd79d4090"><td class="memItemLeft" align="right" valign="top">static constexpr int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdesignlab_1_1_divided_map_statedocs#a74592bce2b9be33258aeb8dcd79d4090">kDividedMapPointNum</a> { 4 }</td></tr>
<tr class="memdesc:a74592bce2b9be33258aeb8dcd79d4090"><td class="mdescLeft">&#160;</td><td class="mdescRight">&lt; 1つのマスに存在する脚設置可能点の数は kDividedMapPointNum × kDividedMapPointNum 個．  <br /></td></tr>
<tr class="separator:a74592bce2b9be33258aeb8dcd79d4090"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a253bef9dbbd426d45ffa5127aec1d634" id="r_a253bef9dbbd426d45ffa5127aec1d634"><td class="memItemLeft" align="right" valign="top"><a id="a253bef9dbbd426d45ffa5127aec1d634" name="a253bef9dbbd426d45ffa5127aec1d634"></a>
static constexpr float&#160;</td><td class="memItemRight" valign="bottom"><b>kDividedAreaLength</b> { <a class="el" href="classdesignlab_1_1_map_statedocs#a2bef818a949cef27d958e74013884339">MapState::kMapPointDistance</a> * <a class="el" href="classdesignlab_1_1_divided_map_statedocs#a74592bce2b9be33258aeb8dcd79d4090">kDividedMapPointNum</a> }</td></tr>
<tr class="separator:a253bef9dbbd426d45ffa5127aec1d634"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afe7d16e23a63ad0083190edca6683737" id="r_afe7d16e23a63ad0083190edca6683737"><td class="memItemLeft" align="right" valign="top"><a id="afe7d16e23a63ad0083190edca6683737" name="afe7d16e23a63ad0083190edca6683737"></a>
static constexpr int&#160;</td><td class="memItemRight" valign="bottom"><b>kDividedNum</b> { 15 }</td></tr>
<tr class="memdesc:afe7d16e23a63ad0083190edca6683737"><td class="mdescLeft">&#160;</td><td class="mdescRight">格子の数． <br /></td></tr>
<tr class="separator:afe7d16e23a63ad0083190edca6683737"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4b7add42474240612125a73564815c8c" id="r_a4b7add42474240612125a73564815c8c"><td class="memItemLeft" align="right" valign="top"><a id="a4b7add42474240612125a73564815c8c" name="a4b7add42474240612125a73564815c8c"></a>
static constexpr float&#160;</td><td class="memItemRight" valign="bottom"><b>kDividedMapMaxX</b> { kDividedAreaLength * <a class="el" href="classdesignlab_1_1_divided_map_statedocs#afe7d16e23a63ad0083190edca6683737">kDividedNum</a> / 2.0f }</td></tr>
<tr class="memdesc:a4b7add42474240612125a73564815c8c"><td class="mdescLeft">&#160;</td><td class="mdescRight">マップの最大のX座標． <br /></td></tr>
<tr class="separator:a4b7add42474240612125a73564815c8c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a66275b4f9af630bc0d32000d38da1ab1" id="r_a66275b4f9af630bc0d32000d38da1ab1"><td class="memItemLeft" align="right" valign="top"><a id="a66275b4f9af630bc0d32000d38da1ab1" name="a66275b4f9af630bc0d32000d38da1ab1"></a>
static constexpr float&#160;</td><td class="memItemRight" valign="bottom"><b>kDividedMapMinX</b> { -<a class="el" href="classdesignlab_1_1_divided_map_statedocs#a4b7add42474240612125a73564815c8c">kDividedMapMaxX</a> }</td></tr>
<tr class="memdesc:a66275b4f9af630bc0d32000d38da1ab1"><td class="mdescLeft">&#160;</td><td class="mdescRight">マップの最小のX座標． <br /></td></tr>
<tr class="separator:a66275b4f9af630bc0d32000d38da1ab1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ace09f0b59f82aa16d67388f4214c9e5a" id="r_ace09f0b59f82aa16d67388f4214c9e5a"><td class="memItemLeft" align="right" valign="top"><a id="ace09f0b59f82aa16d67388f4214c9e5a" name="ace09f0b59f82aa16d67388f4214c9e5a"></a>
static constexpr float&#160;</td><td class="memItemRight" valign="bottom"><b>kDividedMapMaxY</b> { kDividedAreaLength * <a class="el" href="classdesignlab_1_1_divided_map_statedocs#afe7d16e23a63ad0083190edca6683737">kDividedNum</a> / 2.0f }</td></tr>
<tr class="memdesc:ace09f0b59f82aa16d67388f4214c9e5a"><td class="mdescLeft">&#160;</td><td class="mdescRight">マップの最大のY座標． <br /></td></tr>
<tr class="separator:ace09f0b59f82aa16d67388f4214c9e5a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a66c46b06c015f0cc7e848e5dbdefa919" id="r_a66c46b06c015f0cc7e848e5dbdefa919"><td class="memItemLeft" align="right" valign="top"><a id="a66c46b06c015f0cc7e848e5dbdefa919" name="a66c46b06c015f0cc7e848e5dbdefa919"></a>
static constexpr float&#160;</td><td class="memItemRight" valign="bottom"><b>kDividedMapMinY</b> { -<a class="el" href="classdesignlab_1_1_divided_map_statedocs#ace09f0b59f82aa16d67388f4214c9e5a">kDividedMapMaxY</a> }</td></tr>
<tr class="memdesc:a66c46b06c015f0cc7e848e5dbdefa919"><td class="mdescLeft">&#160;</td><td class="mdescRight">マップの最小のY座標． <br /></td></tr>
<tr class="separator:a66c46b06c015f0cc7e848e5dbdefa919"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">詳解</h2>
<div class="textblock"><p>マップを格子状に分割して管理するクラス． </p>
<p>ロボットのセンサには限界があるため，マップのデータを全て保持することはできない． そのため，ロボットの近くのデータのみを保持すればよい． 処理を軽くするために，マップが存在する領域を長方形に切り分けて， その中に存在する脚設置可能点を集めたものが，このクラスである． <br  />
 要素は参考の「1次元の配列を多次元配列として使う」の要領で並んでいる． <br  />
 座標はグローバル座標である． </p>
<h3><a class="anchor" id="参考"></a>
参考</h3>
<ul>
<li><a href="https://atcoder.jp/contests/APG4b/tasks/APG4b_t">https://atcoder.jp/contests/APG4b/tasks/APG4b_t</a> (アクセス日 2023/12/28) </li>
</ul>
</div><h2 class="groupheader">構築子と解体子</h2>
<a id="ae0819faa085d5ae557f4d38e19e599c0" name="ae0819faa085d5ae557f4d38e19e599c0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae0819faa085d5ae557f4d38e19e599c0">&#9670;&#160;</a></span>DividedMapState()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">designlab::DividedMapState::DividedMapState </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>min_z</em> = <code><a class="el" href="classdesignlab_1_1_map_statedocs#a5e3c739c33aa7bd88334b3a1a974a4b8">MapState::kMapMinZ</a></code></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">explicit</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="params"><dt>引数</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">min_z</td><td>マップの最低のZ座標． </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
呼び出し関係図:</div>
<div class="dyncontent">
<div class="center"><img src="classdesignlab_1_1_divided_map_state_ae0819faa085d5ae557f4d38e19e599c0_cgraph.png" border="0" usemap="#aclassdesignlab_1_1_divided_map_state_ae0819faa085d5ae557f4d38e19e599c0_cgraph" alt=""/></div>
<map name="aclassdesignlab_1_1_divided_map_state_ae0819faa085d5ae557f4d38e19e599c0_cgraph" id="aclassdesignlab_1_1_divided_map_state_ae0819faa085d5ae557f4d38e19e599c0_cgraph">
<area shape="rect" title=" " alt="" coords="5,5,187,48"/>
<area shape="rect" href="classdesignlab_1_1_divided_map_statedocs#a726a21449619c1d6980ed867c141992f" title="マップのデータを消去する．" alt="" coords="235,5,416,48"/>
<area shape="poly" title=" " alt="" coords="187,24,219,24,219,29,187,29"/>
</map>
</div>

</div>
</div>
<h2 class="groupheader">関数詳解</h2>
<a id="a22c0df011d0506e6d5106c6acd931be9" name="a22c0df011d0506e6d5106c6acd931be9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a22c0df011d0506e6d5106c6acd931be9">&#9670;&#160;</a></span>GetDividedMapIndexX()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr int designlab::DividedMapState::GetDividedMapIndexX </td>
          <td>(</td>
          <td class="paramtype">const float&#160;</td>
          <td class="paramname"><em>pos_x</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>指定した座標を DividedMap のインデックスに変換する． 範囲外の値を指定した場合でも，値を丸めずに返す． そのため，IsInMap で範囲内に存在するかどうかを確認する必要がある． </p>
<dl class="section see"><dt>参照</dt><dd><a class="el" href="classdesignlab_1_1_divided_map_statedocs#a50c9ba4fb3821ba6a674f3657fe80f6f" title="指定した座標がマップの範囲内に存在するかどうかを返す．">DividedMapState::IsInMap</a> </dd></dl>
<dl class="params"><dt>引数</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">pos_x</td><td>グローバル座標のx座標． </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>戻り値</dt><dd>DividedMap のインデックス． </dd></dl>
<div class="dynheader">
被呼び出し関係図:</div>
<div class="dyncontent">
<div class="center"><img src="classdesignlab_1_1_divided_map_state_a22c0df011d0506e6d5106c6acd931be9_icgraph.png" border="0" usemap="#aclassdesignlab_1_1_divided_map_state_a22c0df011d0506e6d5106c6acd931be9_icgraph" alt=""/></div>
<map name="aclassdesignlab_1_1_divided_map_state_a22c0df011d0506e6d5106c6acd931be9_icgraph" id="aclassdesignlab_1_1_divided_map_state_a22c0df011d0506e6d5106c6acd931be9_icgraph">
<area shape="rect" title="指定した座標を DividedMap のインデックスに変換する． 範囲外の値を指定した場合でも，値を丸めずに返す． そのため，IsInMap で範囲内に存在するかどうかを確認する必要がある．" alt="" coords="534,136,715,179"/>
<area shape="rect" href="classdesignlab_1_1_divided_map_statedocs#a50647e278f9ee754cbfe5196153e2ba8" title="マップのデータを初期化する． ロボットの重心座標を中心にマップのデータを格子状に分割し， その中に存在する脚設置可能点を集める．" alt="" coords="298,76,480,119"/>
<area shape="poly" title=" " alt="" coords="523,134,475,122,476,117,524,129"/>
<area shape="rect" href="classdesignlab_1_1_node_initializerdocs#a717aea9fc00fcb51c5ba3518fac717fc" title="地形に適した初期姿勢を設定する．" alt="" coords="42,139,207,181"/>
<area shape="poly" title=" " alt="" coords="519,161,208,162,208,157,519,155"/>
<area shape="rect" href="classdesignlab_1_1_phantom_x_mk_i_idocs#a2d84fda12ddad344e7de4c0e023ffd4f" title="胴体が地面と干渉しているかどうかを判定する．" alt="" coords="292,195,486,237"/>
<area shape="poly" title=" " alt="" coords="523,185,478,197,477,191,521,180"/>
<area shape="rect" href="classdesignlab_1_1_gait_pattern_generator_basicdocs#a3b957e224a453c5fc85bd15684560043" title="グラフ探索を行い，次の動作として最適なノードを返す．" alt="" coords="8,5,241,48"/>
<area shape="poly" title=" " alt="" coords="291,74,206,51,208,46,292,69"/>
<area shape="rect" href="classdesignlab_1_1_gait_pattern_generator_threaddocs#af6729bdafbd310f762733e7fa10f8df5" title="グラフ探索を行い，次の動作として最適なノードを返す．" alt="" coords="5,72,244,115"/>
<area shape="poly" title=" " alt="" coords="283,98,244,98,244,92,283,93"/>
<area shape="poly" title=" " alt="" coords="284,125,208,143,207,138,283,120"/>
</map>
</div>

</div>
</div>
<a id="a8dcc229f5560978d2a082b326191d6ee" name="a8dcc229f5560978d2a082b326191d6ee"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8dcc229f5560978d2a082b326191d6ee">&#9670;&#160;</a></span>GetDividedMapIndexY()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr int designlab::DividedMapState::GetDividedMapIndexY </td>
          <td>(</td>
          <td class="paramtype">const float&#160;</td>
          <td class="paramname"><em>pos_y</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>指定した座標を DividedMap のインデックスに変換する． 範囲外の値を指定した場合でも，値を丸めずに返す． そのため，IsInMap で範囲内に存在するかどうかを確認する必要がある． </p>
<dl class="section see"><dt>参照</dt><dd><a class="el" href="classdesignlab_1_1_divided_map_statedocs#a50c9ba4fb3821ba6a674f3657fe80f6f" title="指定した座標がマップの範囲内に存在するかどうかを返す．">DividedMapState::IsInMap</a> </dd></dl>
<dl class="params"><dt>引数</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">pos_y</td><td>グローバル座標のy座標． </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>戻り値</dt><dd>DividedMap のインデックス． </dd></dl>
<div class="dynheader">
被呼び出し関係図:</div>
<div class="dyncontent">
<div class="center"><img src="classdesignlab_1_1_divided_map_state_a8dcc229f5560978d2a082b326191d6ee_icgraph.png" border="0" usemap="#aclassdesignlab_1_1_divided_map_state_a8dcc229f5560978d2a082b326191d6ee_icgraph" alt=""/></div>
<map name="aclassdesignlab_1_1_divided_map_state_a8dcc229f5560978d2a082b326191d6ee_icgraph" id="aclassdesignlab_1_1_divided_map_state_a8dcc229f5560978d2a082b326191d6ee_icgraph">
<area shape="rect" title="指定した座標を DividedMap のインデックスに変換する． 範囲外の値を指定した場合でも，値を丸めずに返す． そのため，IsInMap で範囲内に存在するかどうかを確認する必要がある．" alt="" coords="534,136,715,179"/>
<area shape="rect" href="classdesignlab_1_1_divided_map_statedocs#a50647e278f9ee754cbfe5196153e2ba8" title="マップのデータを初期化する． ロボットの重心座標を中心にマップのデータを格子状に分割し， その中に存在する脚設置可能点を集める．" alt="" coords="298,76,480,119"/>
<area shape="poly" title=" " alt="" coords="523,134,475,122,476,117,524,129"/>
<area shape="rect" href="classdesignlab_1_1_node_initializerdocs#a717aea9fc00fcb51c5ba3518fac717fc" title="地形に適した初期姿勢を設定する．" alt="" coords="42,139,207,181"/>
<area shape="poly" title=" " alt="" coords="519,161,208,162,208,157,519,155"/>
<area shape="rect" href="classdesignlab_1_1_phantom_x_mk_i_idocs#a2d84fda12ddad344e7de4c0e023ffd4f" title="胴体が地面と干渉しているかどうかを判定する．" alt="" coords="292,195,486,237"/>
<area shape="poly" title=" " alt="" coords="523,185,478,197,477,191,521,180"/>
<area shape="rect" href="classdesignlab_1_1_gait_pattern_generator_basicdocs#a3b957e224a453c5fc85bd15684560043" title="グラフ探索を行い，次の動作として最適なノードを返す．" alt="" coords="8,5,241,48"/>
<area shape="poly" title=" " alt="" coords="291,74,206,51,208,46,292,69"/>
<area shape="rect" href="classdesignlab_1_1_gait_pattern_generator_threaddocs#af6729bdafbd310f762733e7fa10f8df5" title="グラフ探索を行い，次の動作として最適なノードを返す．" alt="" coords="5,72,244,115"/>
<area shape="poly" title=" " alt="" coords="283,98,244,98,244,92,283,93"/>
<area shape="poly" title=" " alt="" coords="284,125,208,143,207,138,283,120"/>
</map>
</div>

</div>
</div>
<a id="a900c891b9319bd079e172105468d0808" name="a900c891b9319bd079e172105468d0808"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a900c891b9319bd079e172105468d0808">&#9670;&#160;</a></span>GetPointNum()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int designlab::DividedMapState::GetPointNum </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>x_index</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>y_index</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>格子状に切り分けられたマップから，脚設置可能点の数を取得する． <br  />
 範囲外の値を指定した場合は，0を返す． </p>
<dl class="params"><dt>引数</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">x_index</td><td>X座標，切り分けられたタイルの位置で指定する． </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">y_index</td><td>Y座標，切り分けられたタイルの位置で指定する． </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>戻り値</dt><dd>脚設置可能点の数． </dd></dl>

</div>
</div>
<a id="a4fa0d0b29f758a1f23a6743c749a8013" name="a4fa0d0b29f758a1f23a6743c749a8013"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4fa0d0b29f758a1f23a6743c749a8013">&#9670;&#160;</a></span>GetPointPos()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structdesignlab_1_1_vector3docs">Vector3</a> designlab::DividedMapState::GetPointPos </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>x_index</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>y_index</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>divided_map_index</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>格子状に切り分けられたマップから，脚設置可能点の実際の座標を取得する． <br  />
 範囲外の値を指定した場合は，(0,0,0)を返す． </p>
<dl class="params"><dt>引数</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">x_index</td><td>x座標，切り分けられたタイルの位置で指定する． </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">y_index</td><td>y座標，切り分けられたタイルの位置で指定する． </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">divided_map_index</td><td>何番目の脚設置可能点か． </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>戻り値</dt><dd>脚設置可能点の座標． </dd></dl>
<div class="dynheader">
呼び出し関係図:</div>
<div class="dyncontent">
<div class="center"><img src="classdesignlab_1_1_divided_map_state_a4fa0d0b29f758a1f23a6743c749a8013_cgraph.png" border="0" usemap="#aclassdesignlab_1_1_divided_map_state_a4fa0d0b29f758a1f23a6743c749a8013_cgraph" alt=""/></div>
<map name="aclassdesignlab_1_1_divided_map_state_a4fa0d0b29f758a1f23a6743c749a8013_cgraph" id="aclassdesignlab_1_1_divided_map_state_a4fa0d0b29f758a1f23a6743c749a8013_cgraph">
<area shape="rect" title="格子状に切り分けられたマップから，脚設置可能点の実際の座標を取得する． &#160;&#160;範囲外の値を指定した場合は，(0,0,0)を返す．" alt="" coords="5,5,187,48"/>
<area shape="rect" href="structdesignlab_1_1_vector3docs#adb4d141dbd87c98d1006151956566f13" title="零ベクトルを返す． 静的な関数なので，Vector3::GetZeroVec() と呼び出せる．" alt="" coords="235,5,364,48"/>
<area shape="poly" title=" " alt="" coords="187,24,219,24,219,29,187,29"/>
</map>
</div>

</div>
</div>
<a id="aa9c86524d97e9f7fcff9fe7cce6da99b" name="aa9c86524d97e9f7fcff9fe7cce6da99b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa9c86524d97e9f7fcff9fe7cce6da99b">&#9670;&#160;</a></span>GetPointVector()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void designlab::DividedMapState::GetPointVector </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>x_index</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>y_index</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::vector&lt; <a class="el" href="structdesignlab_1_1_vector3docs">Vector3</a> &gt; *&#160;</td>
          <td class="paramname"><em>point_vec</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>格子状に切り分けられたマップから，脚設置可能点の vector を取得する <br  />
 範囲外の値を指定した場合は，空の vector を返す． </p>
<dl class="params"><dt>引数</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">x_index</td><td>x座標，切り分けられたタイルの位置で指定する． </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">y_index</td><td>y座標，切り分けられたタイルの位置で指定する． </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">point_vec</td><td>脚設置可能点の座標の配列． </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a92457e5d1887c728425975db477ce3d9" name="a92457e5d1887c728425975db477ce3d9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a92457e5d1887c728425975db477ce3d9">&#9670;&#160;</a></span>GetTopZ()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">float designlab::DividedMapState::GetTopZ </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>x_index</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>y_index</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>格子状に切り分けられたマップから，最も高いZ座標を返す． </p>
<dl class="params"><dt>引数</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">x_index</td><td>X座標，切り分けられたタイルの位置で指定する． </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">y_index</td><td>Y座標，切り分けられたタイルの位置で指定する． </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>戻り値</dt><dd>最も高いZ座標． </dd></dl>
<div class="dynheader">
被呼び出し関係図:</div>
<div class="dyncontent">
<div class="center"><img src="classdesignlab_1_1_divided_map_state_a92457e5d1887c728425975db477ce3d9_icgraph.png" border="0" usemap="#aclassdesignlab_1_1_divided_map_state_a92457e5d1887c728425975db477ce3d9_icgraph" alt=""/></div>
<map name="aclassdesignlab_1_1_divided_map_state_a92457e5d1887c728425975db477ce3d9_icgraph" id="aclassdesignlab_1_1_divided_map_state_a92457e5d1887c728425975db477ce3d9_icgraph">
<area shape="rect" title="格子状に切り分けられたマップから，最も高いZ座標を返す．" alt="" coords="248,39,429,81"/>
<area shape="rect" href="classdesignlab_1_1_node_initializerdocs#a717aea9fc00fcb51c5ba3518fac717fc" title="地形に適した初期姿勢を設定する．" alt="" coords="20,5,185,48"/>
<area shape="poly" title=" " alt="" coords="232,48,185,41,186,36,233,42"/>
<area shape="rect" href="classdesignlab_1_1_phantom_x_mk_i_idocs#a2d84fda12ddad344e7de4c0e023ffd4f" title="胴体が地面と干渉しているかどうかを判定する．" alt="" coords="5,72,200,115"/>
<area shape="poly" title=" " alt="" coords="233,78,201,82,200,77,232,72"/>
</map>
</div>

</div>
</div>
<a id="a50647e278f9ee754cbfe5196153e2ba8" name="a50647e278f9ee754cbfe5196153e2ba8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a50647e278f9ee754cbfe5196153e2ba8">&#9670;&#160;</a></span>Init()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void designlab::DividedMapState::Init </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classdesignlab_1_1_map_statedocs">MapState</a> &amp;&#160;</td>
          <td class="paramname"><em>map_state</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structdesignlab_1_1_vector3docs">Vector3</a>&#160;</td>
          <td class="paramname"><em>global_robot_com</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>マップのデータを初期化する． ロボットの重心座標を中心にマップのデータを格子状に分割し， その中に存在する脚設置可能点を集める． </p>
<dl class="params"><dt>引数</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">map_state</td><td>マップのデータ． </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">global_robot_com</td><td>ロボットの重心のグローバル座標． </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
呼び出し関係図:</div>
<div class="dyncontent">
<div class="center"><img src="classdesignlab_1_1_divided_map_state_a50647e278f9ee754cbfe5196153e2ba8_cgraph.png" border="0" usemap="#aclassdesignlab_1_1_divided_map_state_a50647e278f9ee754cbfe5196153e2ba8_cgraph" alt=""/></div>
<map name="aclassdesignlab_1_1_divided_map_state_a50647e278f9ee754cbfe5196153e2ba8_cgraph" id="aclassdesignlab_1_1_divided_map_state_a50647e278f9ee754cbfe5196153e2ba8_cgraph">
<area shape="rect" title="マップのデータを初期化する． ロボットの重心座標を中心にマップのデータを格子状に分割し， その中に存在する脚設置可能点を集める．" alt="" coords="5,205,187,248"/>
<area shape="rect" href="classdesignlab_1_1_divided_map_statedocs#a726a21449619c1d6980ed867c141992f" title="マップのデータを消去する．" alt="" coords="235,5,416,48"/>
<area shape="poly" title=" " alt="" coords="108,204,157,133,192,93,233,58,240,53,243,58,236,62,196,97,161,136,112,207"/>
<area shape="rect" href="classdesignlab_1_1_divided_map_statedocs#a22c0df011d0506e6d5106c6acd931be9" title="指定した座標を DividedMap のインデックスに変換する． 範囲外の値を指定した場合でも，値を丸めずに返す． そのため，IsInMap で範囲内に存在するかどうかを確認する必要がある．" alt="" coords="235,72,416,115"/>
<area shape="poly" title=" " alt="" coords="121,203,171,164,233,124,244,119,247,124,236,129,175,168,124,207"/>
<area shape="rect" href="classdesignlab_1_1_divided_map_statedocs#a8dcc229f5560978d2a082b326191d6ee" title="指定した座標を DividedMap のインデックスに変換する． 範囲外の値を指定した場合でも，値を丸めずに返す． そのため，IsInMap で範囲内に存在するかどうかを確認する必要がある．" alt="" coords="235,139,416,181"/>
<area shape="poly" title=" " alt="" coords="171,202,234,184,236,189,172,207"/>
<area shape="rect" href="classdesignlab_1_1_map_statedocs#a80c42812e6ff529ed9b468d0db52d757" title="脚設置可能点の座標を返す．" alt="" coords="255,205,396,248"/>
<area shape="poly" title=" " alt="" coords="187,224,240,224,240,229,187,229"/>
<area shape="rect" href="classdesignlab_1_1_map_statedocs#a221db2fa4a7021da6e9b240c209fa59c" title="脚設置可能点の総数を返す．" alt="" coords="255,272,396,315"/>
<area shape="poly" title=" " alt="" coords="172,246,241,266,239,271,171,251"/>
<area shape="rect" href="classdesignlab_1_1_divided_map_statedocs#a50c9ba4fb3821ba6a674f3657fe80f6f" title="指定した座標がマップの範囲内に存在するかどうかを返す．" alt="" coords="235,339,416,381"/>
<area shape="poly" title=" " alt="" coords="124,246,175,285,236,324,247,330,244,335,233,329,171,290,121,251"/>
<area shape="rect" href="namespacedesignlab_1_1math__utildocs#ac1263c8ff431181d677fad31e8c96db5" title="2乗した値を返す関数．" alt="" coords="257,405,394,448"/>
<area shape="poly" title=" " alt="" coords="112,247,161,317,196,357,236,391,244,396,241,401,233,395,192,360,157,320,108,250"/>
</map>
</div>
<div class="dynheader">
被呼び出し関係図:</div>
<div class="dyncontent">
<div class="center"><img src="classdesignlab_1_1_divided_map_state_a50647e278f9ee754cbfe5196153e2ba8_icgraph.png" border="0" usemap="#aclassdesignlab_1_1_divided_map_state_a50647e278f9ee754cbfe5196153e2ba8_icgraph" alt=""/></div>
<map name="aclassdesignlab_1_1_divided_map_state_a50647e278f9ee754cbfe5196153e2ba8_icgraph" id="aclassdesignlab_1_1_divided_map_state_a50647e278f9ee754cbfe5196153e2ba8_icgraph">
<area shape="rect" title="マップのデータを初期化する． ロボットの重心座標を中心にマップのデータを格子状に分割し， その中に存在する脚設置可能点を集める．" alt="" coords="292,72,473,115"/>
<area shape="rect" href="classdesignlab_1_1_gait_pattern_generator_basicdocs#a3b957e224a453c5fc85bd15684560043" title="グラフ探索を行い，次の動作として最適なノードを返す．" alt="" coords="8,5,241,48"/>
<area shape="poly" title=" " alt="" coords="282,70,209,51,210,46,283,65"/>
<area shape="rect" href="classdesignlab_1_1_gait_pattern_generator_threaddocs#af6729bdafbd310f762733e7fa10f8df5" title="グラフ探索を行い，次の動作として最適なノードを返す．" alt="" coords="5,72,244,115"/>
<area shape="poly" title=" " alt="" coords="276,96,244,96,244,91,276,91"/>
<area shape="rect" href="classdesignlab_1_1_node_initializerdocs#a717aea9fc00fcb51c5ba3518fac717fc" title="地形に適した初期姿勢を設定する．" alt="" coords="42,139,207,181"/>
<area shape="poly" title=" " alt="" coords="283,122,208,141,207,136,282,117"/>
</map>
</div>

</div>
</div>
<a id="a50c9ba4fb3821ba6a674f3657fe80f6f" name="a50c9ba4fb3821ba6a674f3657fe80f6f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a50c9ba4fb3821ba6a674f3657fe80f6f">&#9670;&#160;</a></span>IsInMap() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr bool designlab::DividedMapState::IsInMap </td>
          <td>(</td>
          <td class="paramtype">const float&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float&#160;</td>
          <td class="paramname"><em>y</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>指定した座標がマップの範囲内に存在するかどうかを返す． </p>
<dl class="params"><dt>引数</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">x</td><td>グローバル座標． </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">y</td><td>グローバル座標． </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>戻り値</dt><dd>
  <table class="retval">
    <tr><td class="paramname">true</td><td>範囲内に存在する． </td></tr>
    <tr><td class="paramname">false</td><td>範囲内に存在しない． </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
被呼び出し関係図:</div>
<div class="dyncontent">
<div class="center"><img src="classdesignlab_1_1_divided_map_state_a50c9ba4fb3821ba6a674f3657fe80f6f_icgraph.png" border="0" usemap="#aclassdesignlab_1_1_divided_map_state_a50c9ba4fb3821ba6a674f3657fe80f6f_icgraph" alt=""/></div>
<map name="aclassdesignlab_1_1_divided_map_state_a50c9ba4fb3821ba6a674f3657fe80f6f_icgraph" id="aclassdesignlab_1_1_divided_map_state_a50c9ba4fb3821ba6a674f3657fe80f6f_icgraph">
<area shape="rect" title="指定した座標がマップの範囲内に存在するかどうかを返す．" alt="" coords="534,139,715,181"/>
<area shape="rect" href="classdesignlab_1_1_divided_map_statedocs#a50647e278f9ee754cbfe5196153e2ba8" title="マップのデータを初期化する． ロボットの重心座標を中心にマップのデータを格子状に分割し， その中に存在する脚設置可能点を集める．" alt="" coords="298,72,480,115"/>
<area shape="poly" title=" " alt="" coords="532,137,466,118,468,113,533,131"/>
<area shape="rect" href="classdesignlab_1_1_phantom_x_mk_i_idocs#a2d84fda12ddad344e7de4c0e023ffd4f" title="胴体が地面と干渉しているかどうかを判定する．" alt="" coords="292,139,486,181"/>
<area shape="poly" title=" " alt="" coords="518,163,487,163,487,157,518,157"/>
<area shape="rect" href="classdesignlab_1_1_divided_map_statedocs#a01239f0a442a180ccd62d0d01f2cefac" title="指定した座標がマップの範囲内に存在するかどうかを返す．" alt="" coords="298,205,480,248"/>
<area shape="poly" title=" " alt="" coords="533,189,468,207,466,202,532,183"/>
<area shape="rect" href="classdesignlab_1_1_gait_pattern_generator_basicdocs#a3b957e224a453c5fc85bd15684560043" title="グラフ探索を行い，次の動作として最適なノードを返す．" alt="" coords="8,5,241,48"/>
<area shape="poly" title=" " alt="" coords="286,70,211,51,213,46,287,65"/>
<area shape="rect" href="classdesignlab_1_1_gait_pattern_generator_threaddocs#af6729bdafbd310f762733e7fa10f8df5" title="グラフ探索を行い，次の動作として最適なノードを返す．" alt="" coords="5,72,244,115"/>
<area shape="poly" title=" " alt="" coords="283,96,244,96,244,91,283,91"/>
<area shape="rect" href="classdesignlab_1_1_node_initializerdocs#a717aea9fc00fcb51c5ba3518fac717fc" title="地形に適した初期姿勢を設定する．" alt="" coords="42,139,207,181"/>
<area shape="poly" title=" " alt="" coords="287,122,208,142,207,137,286,116"/>
</map>
</div>

</div>
</div>
<a id="a01239f0a442a180ccd62d0d01f2cefac" name="a01239f0a442a180ccd62d0d01f2cefac"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a01239f0a442a180ccd62d0d01f2cefac">&#9670;&#160;</a></span>IsInMap() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr bool designlab::DividedMapState::IsInMap </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structdesignlab_1_1_vector3docs">Vector3</a> &amp;&#160;</td>
          <td class="paramname"><em>pos</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>指定した座標がマップの範囲内に存在するかどうかを返す． </p>
<dl class="params"><dt>引数</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">pos</td><td>グローバル座標． </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>戻り値</dt><dd>
  <table class="retval">
    <tr><td class="paramname">true</td><td>範囲内に存在する． </td></tr>
    <tr><td class="paramname">false</td><td>範囲内に存在しない． </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
呼び出し関係図:</div>
<div class="dyncontent">
<div class="center"><img src="classdesignlab_1_1_divided_map_state_a01239f0a442a180ccd62d0d01f2cefac_cgraph.png" border="0" usemap="#aclassdesignlab_1_1_divided_map_state_a01239f0a442a180ccd62d0d01f2cefac_cgraph" alt=""/></div>
<map name="aclassdesignlab_1_1_divided_map_state_a01239f0a442a180ccd62d0d01f2cefac_cgraph" id="aclassdesignlab_1_1_divided_map_state_a01239f0a442a180ccd62d0d01f2cefac_cgraph">
<area shape="rect" title="指定した座標がマップの範囲内に存在するかどうかを返す．" alt="" coords="5,5,187,48"/>
<area shape="rect" href="classdesignlab_1_1_divided_map_statedocs#a50c9ba4fb3821ba6a674f3657fe80f6f" title="指定した座標がマップの範囲内に存在するかどうかを返す．" alt="" coords="235,5,416,48"/>
<area shape="poly" title=" " alt="" coords="187,24,219,24,219,29,187,29"/>
</map>
</div>

</div>
</div>
<h2 class="groupheader">メンバ詳解</h2>
<a id="a74592bce2b9be33258aeb8dcd79d4090" name="a74592bce2b9be33258aeb8dcd79d4090"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a74592bce2b9be33258aeb8dcd79d4090">&#9670;&#160;</a></span>kDividedMapPointNum</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr int designlab::DividedMapState::kDividedMapPointNum { 4 }</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>&lt; 1つのマスに存在する脚設置可能点の数は kDividedMapPointNum × kDividedMapPointNum 個． </p>
<p>1つのマスの一辺の長さ． </p>

</div>
</div>
<hr/>このクラス詳解は次のファイルから抽出されました:<ul>
<li>C:/Users/hasegawa/Desktop/main/program/gait-generation-by-graph-search/DesignLab/<a class="el" href="divided__map__state_8h_sourcedocs">divided_map_state.h</a></li>
<li>C:/Users/hasegawa/Desktop/main/program/gait-generation-by-graph-search/DesignLab/<b>divided_map_state.cpp</b></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacedesignlabdocs">designlab</a></li><li class="navelem"><a class="el" href="classdesignlab_1_1_divided_map_statedocs">DividedMapState</a></li>
    <li class="footer">構築: <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.8 </li>
  </ul>
</div>
</body>
</html>
